SuiteSparse:GraphBLAS v4.0.3 [Jan 19, 2021]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 
   1.83e-05 sec ]
 [ GxB_set 
   0.0304 sec ]
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
    GraphBLAS type: type double size: 8
 [ *_setElement (wait: 0 zombies, 64 pending) 
   5.79e-05 sec ]
 [ GrB_apply (shallow-op) 
   6.01 sec ]
read time: 64.1955
 [ GrB_Matrix_nvals 
   1.01e-06 sec ]
Graph: kind: undirected, nodes: 134217726 entries: 4223264644 type: bool
    pattern symmetry: symmetric
 [ GrB_Matrix_nvals 
   4.94e-07 sec ]

Trial 1 : sources: [ 2338012 31997659 23590940 43400604 ]
 [ GxB_set (sparse to bitmap) 
   0.0593 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2587 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000294 sec ]
 [ GrB_Matrix_nvals 
   5.22e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   3.49e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000203 sec ]
 [ GxB_set 
   1.6e-06 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.72225e+07 (use dense mask in-place) (nthreads 40 coarse hash: 2 fine: 158) 
   0.186 sec ]
 [ GrB_Matrix_nvals 
   4.01e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.018 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0333 sec ]
 [ GxB_set 
   5.44e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 6.41067e+09 (use dense mask) (nthreads 40 fine: 159) 
   12.4 sec ]
 [ GrB_Matrix_nvals 
   4.68e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.127 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.116 sec ]
 [ GxB_set (sparse to bitmap) 
   0.127 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.582 sec ]
 [ GrB_Matrix_nvals 
   9.22e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0756 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.106 sec ]
 [ GxB_set 
   7.13e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.145 sec ]
 [ GrB_Matrix_nvals 
   3.4e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0739 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.022 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0311 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 380572 (use dense mask in-place) (nthreads 5 coarse hash: 2 fine hash: 3) 
   0.0326 sec ]
 [ GrB_Matrix_nvals 
   4.11e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   7.1e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.29e-05 sec ]
 [ GxB_set 
   2.42e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1029 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000202 sec ]
 [ GrB_Matrix_nvals 
   1.24e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.31e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1e-05 sec ]
 [ GxB_set 
   1.17e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.4e-05 sec ]
 [ GrB_Matrix_nvals 
   7.5e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0771 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00182 sec ]
 [ GrB_Matrix_nvals 
   3.44e-07 sec ]
 [ GrB_Matrix_nvals 
   1.19e-07 sec ]
 [ GxB_set 
   5.92e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 7 mwork 1007 (discard mask) (intensity: 1.66e-09 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000218 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 7 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000489 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000528 sec ]
 [ GrB_Matrix_nvals 
   2.05e-07 sec ]
 [ GrB_Matrix_nvals 
   7.01e-08 sec ]
 [ GxB_set 
   2.96e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1029 mwork 377880 (discard mask) (intensity: 2.44e-07 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.000878 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000863 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00409 sec ]
 [ GrB_Matrix_nvals 
   2.61e-07 sec ]
 [ GrB_Matrix_nvals 
   2.01e-07 sec ]
 [ GxB_set 
   2.04e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 380572 (use dense mask in-place) (nthreads 5 coarse hash: 2 fine hash: 3) 
   0.0902 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0219 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.48 sec ]
 [ GrB_Matrix_nvals 
   5.38e-07 sec ]
 [ GrB_Matrix_nvals 
   1.73e-07 sec ]
 [ GxB_set 
   2.05e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.41549e+08 (use dense mask) (nthreads 40 fine: 135) 
   1.14 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.116 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.574 sec ]
 [ GrB_Matrix_nvals 
   5.4e-07 sec ]
 [ GrB_Matrix_nvals 
   2.05e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.126 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   6.75 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.153 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.102 sec ]
 [ GrB_Matrix_nvals 
   4.83e-07 sec ]
 [ GrB_Matrix_nvals 
   2.26e-07 sec ]
 [ GxB_set 
   4.03e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 518 (sparse to bitmap) 
   0.0692 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.107 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0177 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.237 sec ]
BC time 40:      24.3051 (sec)

Trial 2 : sources: [ 75337937 169867 104041220 94177942 ]
 [ GxB_set (sparse to bitmap) 
   0.0606 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 17 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.96e-05 sec ]
 [ GrB_Matrix_nvals 
   8.78e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.93e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.94e-05 sec ]
 [ GxB_set 
   7.12e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 401186 (use dense mask in-place) (nthreads 6 coarse hash: 2 fine hash: 5) 
   0.0203 sec ]
 [ GrB_Matrix_nvals 
   2.28e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0226 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00386 sec ]
 [ GxB_set 
   6.75e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.00132e+09 (use dense mask) (nthreads 40 fine: 154) 
   5.22 sec ]
 [ GrB_Matrix_nvals 
   4.68e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0962 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.102 sec ]
 [ GxB_set (sparse to bitmap) 
   0.111 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   1.81 sec ]
 [ GrB_Matrix_nvals 
   6.43e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0992 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.129 sec ]
 [ GxB_set 
   1.08e-06 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.159 sec ]
 [ GrB_Matrix_nvals 
   5.59e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0758 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.033 sec ]
 [ GxB_set (bitmap to sparse) 
   0.035 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.61675e+06 (use dense mask in-place) (nthreads 39 coarse hash: 2 fine hash: 38) 
   0.0676 sec ]
 [ GrB_Matrix_nvals 
   4.36e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000466 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000406 sec ]
 [ GxB_set 
   4.87e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 6806 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00128 sec ]
 [ GrB_Matrix_nvals 
   1.84e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.29e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.08e-05 sec ]
 [ GxB_set 
   1.94e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 28 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.47e-05 sec ]
 [ GrB_Matrix_nvals 
   6.4e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0751 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000497 sec ]
 [ GrB_Matrix_nvals 
   3.78e-07 sec ]
 [ GrB_Matrix_nvals 
   1.95e-07 sec ]
 [ GxB_set 
   7.07e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 28 mwork 6777 (discard mask) (intensity: 6.63e-09 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000237 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 28 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000537 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00067 sec ]
 [ GrB_Matrix_nvals 
   2.08e-07 sec ]
 [ GrB_Matrix_nvals 
   1.97e-07 sec ]
 [ GxB_set 
   2.88e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 6806 mwork 2.51566e+06 (discard mask) (intensity: 1.61e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.00574 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00112 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0173 sec ]
 [ GrB_Matrix_nvals 
   3.84e-07 sec ]
 [ GrB_Matrix_nvals 
   2.39e-07 sec ]
 [ GxB_set 
   5.56e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 2.61675e+06 (use dense mask in-place) (nthreads 39 coarse hash: 2 fine hash: 38) 
   0.143 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.155 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.564 sec ]
 [ GrB_Matrix_nvals 
   5.67e-07 sec ]
 [ GrB_Matrix_nvals 
   1.36e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.118 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   13.1 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.309 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.382 sec ]
 [ GrB_Matrix_nvals 
   4.98e-07 sec ]
 [ GrB_Matrix_nvals 
   2.16e-07 sec ]
 [ GxB_set 
   5.76e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   2.81 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.112 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0511 sec ]
 [ GrB_Matrix_nvals 
   4.89e-07 sec ]
 [ GrB_Matrix_nvals 
   2.97e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0314 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 9.92891e+07 mwork 17 (use mask) (nthreads 40 coarse hash: 1 fine: 159) 
   0.117 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000577 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0179 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.209 sec ]
BC time 40:      26.3596 (sec)

Trial 3 : sources: [ 32871357 56230002 69883037 9346345 ]
 [ GxB_set (sparse to bitmap) 
   0.0597 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 75 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.78e-05 sec ]
 [ GrB_Matrix_nvals 
   5.44e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.7e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.42e-05 sec ]
 [ GxB_set 
   5.2e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 574103 (use dense mask in-place) (nthreads 8 coarse hash: 2 fine hash: 9) 
   0.0149 sec ]
 [ GrB_Matrix_nvals 
   1.7e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0364 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00289 sec ]
 [ GxB_set 
   3.9e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.84521e+09 (use dense mask) (nthreads 40 fine: 153) 
   4.89 sec ]
 [ GrB_Matrix_nvals 
   4.32e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0887 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0926 sec ]
 [ GxB_set (sparse to bitmap) 
   0.101 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   3.45 sec ]
 [ GrB_Matrix_nvals 
   4.79e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.104 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.128 sec ]
 [ GxB_set 
   6.25e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.189 sec ]
 [ GrB_Matrix_nvals 
   3.22e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0813 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0418 sec ]
 [ GxB_set (bitmap to sparse) 
   0.042 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 8.0516e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 123) 
   0.116 sec ]
 [ GrB_Matrix_nvals 
   4.28e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0016 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00108 sec ]
 [ GxB_set 
   4.8e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 20818 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00333 sec ]
 [ GrB_Matrix_nvals 
   1.23e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.42e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.16e-05 sec ]
 [ GxB_set 
   1.31e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 65 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.62e-05 sec ]
 [ GrB_Matrix_nvals 
   1.05e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0746 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0005 sec ]
 [ GrB_Matrix_nvals 
   3.35e-07 sec ]
 [ GrB_Matrix_nvals 
   1.17e-07 sec ]
 [ GxB_set 
   4.45e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 65 mwork 20581 (discard mask) (intensity: 1.54e-08 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000251 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 65 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000566 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000999 sec ]
 [ GrB_Matrix_nvals 
   1.85e-07 sec ]
 [ GrB_Matrix_nvals 
   4.64e-07 sec ]
 [ GxB_set 
   2.54e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 20818 mwork 6.90249e+06 (discard mask) (intensity: 4.93e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.0199 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00156 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0358 sec ]
 [ GrB_Matrix_nvals 
   3.53e-07 sec ]
 [ GrB_Matrix_nvals 
   2.17e-07 sec ]
 [ GxB_set 
   3.33e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 8.0516e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 123) 
   0.18 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.458 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.57 sec ]
 [ GrB_Matrix_nvals 
   5.19e-07 sec ]
 [ GrB_Matrix_nvals 
   1.51e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.12 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   13.3 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.29 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.364 sec ]
 [ GrB_Matrix_nvals 
   5.53e-07 sec ]
 [ GrB_Matrix_nvals 
   4.32e-07 sec ]
 [ GxB_set 
   4.45e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   2.53 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.116 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0518 sec ]
 [ GrB_Matrix_nvals 
   9.4e-07 sec ]
 [ GrB_Matrix_nvals 
   2.02e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0315 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 5.89397e+08 mwork 75 (use mask) (nthreads 40 coarse: 1 coarse hash: 1 fine: 159) 
   0.41 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0006 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0179 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.209 sec ]
BC time 40:      28.3077 (sec)

Trial 4 : sources: [ 48915358 122571173 6183279 86323663 ]
 [ GxB_set (sparse to bitmap) 
   0.0609 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 12 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.8e-05 sec ]
 [ GrB_Matrix_nvals 
   8.29e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.59e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.83e-05 sec ]
 [ GxB_set 
   5.36e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 139380 (use dense mask in-place) (nthreads 2 coarse hash: 2) 
   0.00559 sec ]
 [ GrB_Matrix_nvals 
   4.28e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00306 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0031 sec ]
 [ GxB_set 
   2.16e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.13094e+09 (use dense mask) (nthreads 40 fine: 151) 
   3.34 sec ]
 [ GrB_Matrix_nvals 
   4.52e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0813 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0827 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0926 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   4.21 sec ]
 [ GrB_Matrix_nvals 
   4.49e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0995 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.128 sec ]
 [ GxB_set 
   1.01e-06 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.212 sec ]
 [ GrB_Matrix_nvals 
   4.78e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0919 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0458 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0432 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.44791e+07 (use dense mask in-place) (nthreads 40 coarse hash: 2 fine hash: 156) 
   0.194 sec ]
 [ GrB_Matrix_nvals 
   8.69e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00375 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00179 sec ]
 [ GxB_set 
   3.29e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 37505 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00726 sec ]
 [ GrB_Matrix_nvals 
   2.36e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.46e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.02e-05 sec ]
 [ GxB_set 
   2.95e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 110 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   5.69e-05 sec ]
 [ GrB_Matrix_nvals 
   1.29e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0747 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000534 sec ]
 [ GrB_Matrix_nvals 
   3.45e-07 sec ]
 [ GrB_Matrix_nvals 
   1.26e-07 sec ]
 [ GxB_set 
   4.33e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 110 mwork 37351 (discard mask) (intensity: 2.6e-08 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000288 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 110 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000628 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00136 sec ]
 [ GrB_Matrix_nvals 
   1.98e-07 sec ]
 [ GrB_Matrix_nvals 
   1.28e-07 sec ]
 [ GxB_set 
   2.59e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 37505 mwork 1.09321e+07 (discard mask) (intensity: 8.88e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.0349 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00203 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0437 sec ]
 [ GrB_Matrix_nvals 
   4.22e-07 sec ]
 [ GrB_Matrix_nvals 
   2.26e-07 sec ]
 [ GxB_set 
   4.42e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.44791e+07 (use dense mask in-place) (nthreads 40 coarse hash: 2 fine hash: 156) 
   0.334 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.646 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.571 sec ]
 [ GrB_Matrix_nvals 
   5.84e-07 sec ]
 [ GrB_Matrix_nvals 
   1.51e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.121 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   13.4 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.269 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.335 sec ]
 [ GrB_Matrix_nvals 
   7.34e-07 sec ]
 [ GrB_Matrix_nvals 
   2.86e-07 sec ]
 [ GxB_set 
   3.8e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   1.66 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.114 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0493 sec ]
 [ GrB_Matrix_nvals 
   4.62e-07 sec ]
 [ GrB_Matrix_nvals 
   2.04e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0323 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 2.55891e+07 mwork 12 (use mask) (nthreads 40 coarse hash: 2 fine: 158) 
   0.0975 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000559 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0179 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.21 sec ]
BC time 40:      26.8710 (sec)

Trial 5 : sources: [ 106725780 92389938 16210738 59816700 ]
 [ GxB_set (sparse to bitmap) 
   0.0593 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 99 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.11e-05 sec ]
 [ GrB_Matrix_nvals 
   1.07e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.76e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.89e-05 sec ]
 [ GxB_set 
   6.84e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.78226e+06 (use dense mask in-place) (nthreads 27 coarse hash: 1 fine hash: 28) 
   0.0257 sec ]
 [ GrB_Matrix_nvals 
   4e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0582 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0069 sec ]
 [ GxB_set 
   7.86e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.86479e+09 (use dense mask) (nthreads 40 fine: 157) 
   12.3 sec ]
 [ GrB_Matrix_nvals 
   5.27e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.125 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.116 sec ]
 [ GxB_set (sparse to bitmap) 
   0.125 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.666 sec ]
 [ GrB_Matrix_nvals 
   4.91e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0851 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.122 sec ]
 [ GxB_set 
   8.87e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.145 sec ]
 [ GrB_Matrix_nvals 
   5.66e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0703 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0233 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0308 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 517595 (use dense mask in-place) (nthreads 7 coarse hash: 3 fine hash: 6) 
   0.0263 sec ]
 [ GrB_Matrix_nvals 
   4.09e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   9.42e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000107 sec ]
 [ GxB_set 
   2.94e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1368 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000273 sec ]
 [ GrB_Matrix_nvals 
   1.02e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.39e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.07e-05 sec ]
 [ GxB_set 
   1.92e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 5 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.65e-05 sec ]
 [ GrB_Matrix_nvals 
   9.2e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0775 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000498 sec ]
 [ GrB_Matrix_nvals 
   3.98e-07 sec ]
 [ GrB_Matrix_nvals 
   2.15e-07 sec ]
 [ GxB_set 
   7.19e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 5 mwork 1086 (discard mask) (intensity: 1.18e-09 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000219 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 5 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000469 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000549 sec ]
 [ GrB_Matrix_nvals 
   1.69e-07 sec ]
 [ GrB_Matrix_nvals 
   1.25e-07 sec ]
 [ GxB_set 
   2.51e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1368 mwork 512193 (discard mask) (intensity: 3.24e-07 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.00125 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0009 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00557 sec ]
 [ GrB_Matrix_nvals 
   3.69e-07 sec ]
 [ GrB_Matrix_nvals 
   1.74e-07 sec ]
 [ GxB_set 
   4.5e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 517595 (use dense mask in-place) (nthreads 7 coarse hash: 3 fine hash: 6) 
   0.0669 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0363 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.511 sec ]
 [ GrB_Matrix_nvals 
   5.61e-07 sec ]
 [ GrB_Matrix_nvals 
   1.41e-07 sec ]
 [ GxB_set 
   1.86e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.88152e+08 (use dense mask) (nthreads 40 fine: 138) 
   1.28 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.133 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.568 sec ]
 [ GrB_Matrix_nvals 
   5.19e-07 sec ]
 [ GrB_Matrix_nvals 
   2.33e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.125 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   6.68 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.116 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0651 sec ]
 [ GrB_Matrix_nvals 
   7.81e-07 sec ]
 [ GrB_Matrix_nvals 
   2e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0332 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.10389e+09 mwork 99 (use mask) (nthreads 40 coarse: 1 fine: 160) 
   0.7 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000682 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0179 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.211 sec ]
BC time 40:      24.7657 (sec)

Trial 6 : sources: [ 111669929 102831411 113384800 43872564 ]
 [ GxB_set (sparse to bitmap) 
   0.0598 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 78 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.87e-05 sec ]
 [ GrB_Matrix_nvals 
   6.13e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.52e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.44e-05 sec ]
 [ GxB_set 
   6.39e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.2014e+06 (use dense mask in-place) (nthreads 18 coarse hash: 1 fine hash: 19) 
   0.022 sec ]
 [ GrB_Matrix_nvals 
   3.94e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0777 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00402 sec ]
 [ GxB_set 
   5.09e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.22428e+09 (use dense mask) (nthreads 40 fine: 153) 
   5.53 sec ]
 [ GrB_Matrix_nvals 
   4.23e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0887 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0974 sec ]
 [ GxB_set (sparse to bitmap) 
   0.105 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   2.52 sec ]
 [ GrB_Matrix_nvals 
   4.26e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.101 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.127 sec ]
 [ GxB_set 
   8e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.167 sec ]
 [ GrB_Matrix_nvals 
   4.79e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0773 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0395 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0386 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.23922e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 66) 
   0.0759 sec ]
 [ GrB_Matrix_nvals 
   4.61e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000828 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000776 sec ]
 [ GxB_set 
   5.08e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 10893 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00218 sec ]
 [ GrB_Matrix_nvals 
   1.22e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.45e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.24e-05 sec ]
 [ GxB_set 
   1.75e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 41 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.59e-05 sec ]
 [ GrB_Matrix_nvals 
   9.2e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0755 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000484 sec ]
 [ GrB_Matrix_nvals 
   3.58e-07 sec ]
 [ GrB_Matrix_nvals 
   1.19e-07 sec ]
 [ GxB_set 
   4.92e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 41 mwork 10752 (discard mask) (intensity: 9.71e-09 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.00024 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 41 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000539 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000766 sec ]
 [ GrB_Matrix_nvals 
   1.97e-07 sec ]
 [ GrB_Matrix_nvals 
   2.2e-07 sec ]
 [ GxB_set 
   2.99e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 10893 mwork 4.0171e+06 (discard mask) (intensity: 2.58e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.0105 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00131 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0282 sec ]
 [ GrB_Matrix_nvals 
   3.73e-07 sec ]
 [ GrB_Matrix_nvals 
   2.24e-07 sec ]
 [ GxB_set 
   3.17e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 4.23922e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 66) 
   0.122 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.213 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.566 sec ]
 [ GrB_Matrix_nvals 
   5.61e-07 sec ]
 [ GrB_Matrix_nvals 
   1.49e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.119 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   12.9 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.304 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.38 sec ]
 [ GrB_Matrix_nvals 
   5.4e-07 sec ]
 [ GrB_Matrix_nvals 
   4.2e-07 sec ]
 [ GxB_set 
   4.79e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   3.02 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.118 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0559 sec ]
 [ GrB_Matrix_nvals 
   4.43e-07 sec ]
 [ GrB_Matrix_nvals 
   4.39e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0331 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.00011e+09 mwork 78 (use mask) (nthreads 40 coarse hash: 1 fine: 160) 
   0.396 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00057 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.018 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.208 sec ]
BC time 40:      27.8344 (sec)

Trial 7 : sources: [ 80508827 26105648 8807516 118452455 ]
 [ GxB_set (sparse to bitmap) 
   0.0597 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 54 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   9.17e-05 sec ]
 [ GrB_Matrix_nvals 
   1.16e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.65e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.29e-05 sec ]
 [ GxB_set 
   6.54e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 843023 (use dense mask in-place) (nthreads 12 coarse hash: 1 fine hash: 13) 
   0.0182 sec ]
 [ GrB_Matrix_nvals 
   4.71e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.042 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00347 sec ]
 [ GxB_set 
   5.39e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.00138e+09 (use dense mask) (nthreads 40 fine: 156) 
   8.01 sec ]
 [ GrB_Matrix_nvals 
   4.23e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.105 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.103 sec ]
 [ GxB_set (sparse to bitmap) 
   0.113 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   1.99 sec ]
 [ GrB_Matrix_nvals 
   4.25e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.104 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.13 sec ]
 [ GxB_set 
   7.79e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.164 sec ]
 [ GrB_Matrix_nvals 
   4.8e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0787 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0366 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0378 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.44721e+06 (use dense mask in-place) (nthreads 40 coarse hash: 2 fine hash: 51) 
   0.0734 sec ]
 [ GrB_Matrix_nvals 
   4.13e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000659 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000584 sec ]
 [ GxB_set 
   5.25e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 8860 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00176 sec ]
 [ GrB_Matrix_nvals 
   1.86e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.63e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.36e-05 sec ]
 [ GxB_set 
   1.67e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 30 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.23e-05 sec ]
 [ GrB_Matrix_nvals 
   8.99e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0742 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000484 sec ]
 [ GrB_Matrix_nvals 
   3.43e-07 sec ]
 [ GrB_Matrix_nvals 
   1.89e-07 sec ]
 [ GxB_set 
   5.84e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 30 mwork 8668 (discard mask) (intensity: 7.1e-09 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000222 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 30 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000511 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000715 sec ]
 [ GrB_Matrix_nvals 
   1.8e-07 sec ]
 [ GrB_Matrix_nvals 
   1.4e-07 sec ]
 [ GxB_set 
   2.28e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 8860 mwork 3.18414e+06 (discard mask) (intensity: 2.1e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.00782 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00113 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0218 sec ]
 [ GrB_Matrix_nvals 
   3.41e-07 sec ]
 [ GrB_Matrix_nvals 
   2.36e-07 sec ]
 [ GxB_set 
   3.42e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 3.44721e+06 (use dense mask in-place) (nthreads 40 coarse hash: 2 fine hash: 51) 
   0.117 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.271 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.567 sec ]
 [ GrB_Matrix_nvals 
   6.46e-07 sec ]
 [ GrB_Matrix_nvals 
   3.44e-07 sec ]
 [ GxB_set 
   2.36e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 8.55676e+08 (use dense mask) (nthreads 40 fine: 148) 
   2.98 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.131 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.549 sec ]
 [ GrB_Matrix_nvals 
   6.3e-07 sec ]
 [ GrB_Matrix_nvals 
   2.93e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.113 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   4.14 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.114 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0539 sec ]
 [ GrB_Matrix_nvals 
   5.22e-07 sec ]
 [ GrB_Matrix_nvals 
   1.51e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0312 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.8536e+08 mwork 54 (use mask) (nthreads 40 coarse: 1 fine: 157) 
   0.552 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000604 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0183 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.236 sec ]
BC time 40:      21.1703 (sec)

Trial 8 : sources: [ 121818859 42361928 29493053 98461503 ]
 [ GxB_set (sparse to bitmap) 
   0.061 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 6 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.98e-05 sec ]
 [ GrB_Matrix_nvals 
   6.96e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   3.08e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.81e-05 sec ]
 [ GxB_set 
   7.19e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 21490 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00145 sec ]
 [ GrB_Matrix_nvals 
   1.21e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000258 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000933 sec ]
 [ GxB_set 
   1.83e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.95621e+08 (use dense mask) (nthreads 40 fine: 140) 
   1.07 sec ]
 [ GrB_Matrix_nvals 
   3.36e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0712 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0895 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0991 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   3.02 sec ]
 [ GrB_Matrix_nvals 
   5.11e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.105 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.131 sec ]
 [ GxB_set 
   9.51e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.169 sec ]
 [ GrB_Matrix_nvals 
   4.58e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0782 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0446 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0373 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.92732e+06 (use dense mask in-place) (nthreads 40 fine hash: 77) 
   0.0646 sec ]
 [ GrB_Matrix_nvals 
   4.47e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00087 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000868 sec ]
 [ GxB_set 
   4.4e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 12763 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00253 sec ]
 [ GrB_Matrix_nvals 
   1.39e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.25e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.19e-05 sec ]
 [ GxB_set 
   1.24e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 46 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.56e-05 sec ]
 [ GrB_Matrix_nvals 
   7.38e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0742 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000505 sec ]
 [ GrB_Matrix_nvals 
   3.72e-07 sec ]
 [ GrB_Matrix_nvals 
   5.7e-08 sec ]
 [ GxB_set 
   6.08e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 46 mwork 12715 (discard mask) (intensity: 1.09e-08 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.00023 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 46 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000595 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000813 sec ]
 [ GrB_Matrix_nvals 
   2.02e-07 sec ]
 [ GrB_Matrix_nvals 
   1.37e-07 sec ]
 [ GxB_set 
   2.46e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 12763 mwork 4.7126e+06 (discard mask) (intensity: 3.02e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.0116 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00149 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0327 sec ]
 [ GrB_Matrix_nvals 
   3.65e-07 sec ]
 [ GrB_Matrix_nvals 
   2.15e-07 sec ]
 [ GxB_set 
   3.14e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 4.92732e+06 (use dense mask in-place) (nthreads 40 fine hash: 77) 
   0.0942 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.181 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.59 sec ]
 [ GrB_Matrix_nvals 
   7.48e-07 sec ]
 [ GrB_Matrix_nvals 
   3.04e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.128 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   14.7 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.312 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.347 sec ]
 [ GrB_Matrix_nvals 
   5.38e-07 sec ]
 [ GrB_Matrix_nvals 
   2.89e-07 sec ]
 [ GxB_set 
   5.09e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1276 (sparse to bitmap) 
   0.451 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.108 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0459 sec ]
 [ GrB_Matrix_nvals 
   9.33e-07 sec ]
 [ GrB_Matrix_nvals 
   1.67e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0323 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.70092e+06 mwork 6 (use mask) (nthreads 25 coarse hash: 1 fine hash: 26) 
   0.0143 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00176 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0179 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.239 sec ]
BC time 40:      22.5830 (sec)

Trial 9 : sources: [ 71931337 103808468 4092345 115276241 ]
 [ GxB_set (sparse to bitmap) 
   0.0595 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 19 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.15e-05 sec ]
 [ GrB_Matrix_nvals 
   1.01e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   3.87e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.6e-05 sec ]
 [ GxB_set 
   8.35e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 75730 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00486 sec ]
 [ GrB_Matrix_nvals 
   1.36e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00263 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00235 sec ]
 [ GxB_set 
   2.67e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7.67193e+08 (use dense mask) (nthreads 40 fine: 147) 
   2.31 sec ]
 [ GrB_Matrix_nvals 
   4.26e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0762 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0889 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0978 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   3.42 sec ]
 [ GrB_Matrix_nvals 
   4.35e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.101 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.13 sec ]
 [ GxB_set 
   7.19e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.186 sec ]
 [ GrB_Matrix_nvals 
   5.69e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0812 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0444 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0426 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7.45638e+06 (use dense mask in-place) (nthreads 40 fine hash: 116) 
   0.109 sec ]
 [ GrB_Matrix_nvals 
   4.65e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00146 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0011 sec ]
 [ GxB_set 
   2.66e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 19254 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00364 sec ]
 [ GrB_Matrix_nvals 
   1.78e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.37e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.18e-05 sec ]
 [ GxB_set 
   1.6e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 58 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.68e-05 sec ]
 [ GrB_Matrix_nvals 
   1.04e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0745 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000496 sec ]
 [ GrB_Matrix_nvals 
   3.64e-07 sec ]
 [ GrB_Matrix_nvals 
   3.03e-07 sec ]
 [ GxB_set 
   4.79e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 58 mwork 19189 (discard mask) (intensity: 1.37e-08 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000249 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 58 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00058 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00096 sec ]
 [ GrB_Matrix_nvals 
   2.11e-07 sec ]
 [ GrB_Matrix_nvals 
   1.91e-07 sec ]
 [ GxB_set 
   2.67e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 19254 mwork 6.52376e+06 (discard mask) (intensity: 4.56e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.0186 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00158 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0356 sec ]
 [ GrB_Matrix_nvals 
   4.18e-07 sec ]
 [ GrB_Matrix_nvals 
   3.93e-07 sec ]
 [ GxB_set 
   3.45e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 7.45638e+06 (use dense mask in-place) (nthreads 40 fine hash: 116) 
   0.156 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.443 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.591 sec ]
 [ GrB_Matrix_nvals 
   7.52e-07 sec ]
 [ GrB_Matrix_nvals 
   3.1e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.124 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   14.2 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.317 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.342 sec ]
 [ GrB_Matrix_nvals 
   4.67e-07 sec ]
 [ GrB_Matrix_nvals 
   3.78e-07 sec ]
 [ GxB_set 
   4.1e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   1.12 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.109 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0484 sec ]
 [ GrB_Matrix_nvals 
   4.79e-07 sec ]
 [ GrB_Matrix_nvals 
   3.61e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0318 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 2.16101e+07 mwork 19 (use mask) (nthreads 40 coarse hash: 1 fine: 155 fine hash: 6) 
   0.0693 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00056 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0188 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.232 sec ]
BC time 40:      24.8561 (sec)

Trial 10 : sources: [ 4649343 76656189 31312001 111334127 ]
 [ GxB_set (sparse to bitmap) 
   0.0615 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 128 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.23e-05 sec ]
 [ GrB_Matrix_nvals 
   6.14e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.69e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.98e-05 sec ]
 [ GxB_set 
   6.96e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.05499e+06 (use dense mask in-place) (nthreads 31 coarse hash: 2 fine hash: 32) 
   0.0429 sec ]
 [ GrB_Matrix_nvals 
   4.77e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0746 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00823 sec ]
 [ GxB_set 
   6.18e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.32755e+09 (use dense mask) (nthreads 40 fine: 157) 
   11 sec ]
 [ GrB_Matrix_nvals 
   4.56e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.114 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.109 sec ]
 [ GxB_set (sparse to bitmap) 
   0.119 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   1.34 sec ]
 [ GrB_Matrix_nvals 
   5.7e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0961 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.124 sec ]
 [ GxB_set 
   8.35e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.156 sec ]
 [ GrB_Matrix_nvals 
   4.43e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0787 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0293 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0339 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.89902e+06 (use dense mask in-place) (nthreads 28 coarse hash: 2 fine hash: 29) 
   0.0445 sec ]
 [ GrB_Matrix_nvals 
   4.38e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000356 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000317 sec ]
 [ GxB_set 
   4.18e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4895 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.001 sec ]
 [ GrB_Matrix_nvals 
   1.41e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.69e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.07e-05 sec ]
 [ GxB_set 
   1.37e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 25 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.39e-05 sec ]
 [ GrB_Matrix_nvals 
   7.99e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0753 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0011 sec ]
 [ GrB_Matrix_nvals 
   3.69e-07 sec ]
 [ GrB_Matrix_nvals 
   2.1e-07 sec ]
 [ GxB_set 
   6.02e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 25 mwork 4654 (discard mask) (intensity: 5.92e-09 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000224 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 25 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000505 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000621 sec ]
 [ GrB_Matrix_nvals 
   2.05e-07 sec ]
 [ GrB_Matrix_nvals 
   3.02e-07 sec ]
 [ GxB_set 
   2.91e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4895 mwork 1.81662e+06 (discard mask) (intensity: 1.16e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.00454 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000967 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0126 sec ]
 [ GrB_Matrix_nvals 
   3.52e-07 sec ]
 [ GrB_Matrix_nvals 
   2.82e-07 sec ]
 [ GxB_set 
   2.93e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.89902e+06 (use dense mask in-place) (nthreads 28 coarse hash: 2 fine hash: 29) 
   0.0785 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.153 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.539 sec ]
 [ GrB_Matrix_nvals 
   5.1e-07 sec ]
 [ GrB_Matrix_nvals 
   1.37e-07 sec ]
 [ GxB_set 
   1.84e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 5.77555e+08 (use dense mask) (nthreads 40 fine: 146) 
   2.43 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.13 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.569 sec ]
 [ GrB_Matrix_nvals 
   5.44e-07 sec ]
 [ GrB_Matrix_nvals 
   3.7e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.118 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   5.74 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.12 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.066 sec ]
 [ GrB_Matrix_nvals 
   5.19e-07 sec ]
 [ GrB_Matrix_nvals 
   5.53e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.035 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.53089e+09 mwork 128 (use mask) (nthreads 40 coarse: 1 coarse hash: 1 fine: 158) 
   0.947 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000666 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0181 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.207 sec ]
BC time 40:      24.8449 (sec)

Trial 11 : sources: [ 100962918 41823215 22631240 42848461 ]
 [ GxB_set (sparse to bitmap) 
   0.0613 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 34 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.91e-05 sec ]
 [ GrB_Matrix_nvals 
   1.57e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.62e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.03e-05 sec ]
 [ GxB_set 
   6.05e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 199313 (use dense mask in-place) (nthreads 3 coarse hash: 2 fine hash: 3) 
   0.00727 sec ]
 [ GrB_Matrix_nvals 
   3.92e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0128 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00575 sec ]
 [ GxB_set 
   3.88e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.15878e+09 (use dense mask) (nthreads 40 fine: 149) 
   3.21 sec ]
 [ GrB_Matrix_nvals 
   4.47e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0705 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0773 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0857 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   4.32 sec ]
 [ GrB_Matrix_nvals 
   4.83e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0985 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.128 sec ]
 [ GxB_set 
   7.18e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.448 sec ]
 [ GrB_Matrix_nvals 
   3.28e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0802 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0761 sec ]
 [ GxB_set 
   6.99e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.147 sec ]
 [ GrB_Matrix_nvals 
   2.76e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0743 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0235 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0315 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 386332 (use dense mask in-place) (nthreads 5 coarse hash: 1 fine hash: 6) 
   0.0253 sec ]
 [ GrB_Matrix_nvals 
   3.92e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   6.9e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   6.64e-05 sec ]
 [ GxB_set 
   2.72e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1030 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000197 sec ]
 [ GrB_Matrix_nvals 
   9.9e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.14e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.64e-06 sec ]
 [ GxB_set 
   1.42e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 5 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   2.96e-05 sec ]
 [ GrB_Matrix_nvals 
   6.5e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0776 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000475 sec ]
 [ GrB_Matrix_nvals 
   3.55e-07 sec ]
 [ GrB_Matrix_nvals 
   1.25e-07 sec ]
 [ GxB_set 
   4.62e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 5 mwork 1001 (discard mask) (intensity: 1.18e-09 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000206 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 5 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000439 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00151 sec ]
 [ GrB_Matrix_nvals 
   1.72e-07 sec ]
 [ GrB_Matrix_nvals 
   1.38e-07 sec ]
 [ GxB_set 
   2.38e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1030 mwork 380676 (discard mask) (intensity: 2.44e-07 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.0011 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000701 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00423 sec ]
 [ GrB_Matrix_nvals 
   6.1e-07 sec ]
 [ GrB_Matrix_nvals 
   1.88e-07 sec ]
 [ GxB_set 
   3.09e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 386332 (use dense mask in-place) (nthreads 5 coarse hash: 1 fine hash: 6) 
   0.0376 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0389 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.426 sec ]
 [ GrB_Matrix_nvals 
   5.7e-07 sec ]
 [ GrB_Matrix_nvals 
   1.69e-07 sec ]
 [ GxB_set 
   1.91e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.35673e+08 (use dense mask) (nthreads 40 fine: 135) 
   0.855 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0529 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.559 sec ]
 [ GrB_Matrix_nvals 
   6.48e-07 sec ]
 [ GrB_Matrix_nvals 
   1.79e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.118 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   10.3 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.255 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.327 sec ]
 [ GrB_Matrix_nvals 
   5.51e-07 sec ]
 [ GrB_Matrix_nvals 
   2.89e-07 sec ]
 [ GxB_set 
   3.87e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   1.63 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.113 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0509 sec ]
 [ GrB_Matrix_nvals 
   8.14e-07 sec ]
 [ GrB_Matrix_nvals 
   3e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0317 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.18973e+08 mwork 34 (use mask) (nthreads 40 coarse hash: 1 fine: 160) 
   0.136 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000603 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0179 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.214 sec ]
BC time 40:      24.3332 (sec)

Trial 12 : sources: [ 79485148 106818742 73347974 78848445 ]
 [ GxB_set (sparse to bitmap) 
   0.0608 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.7e-05 sec ]
 [ GrB_Matrix_nvals 
   9.22e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.64e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.81e-05 sec ]
 [ GxB_set 
   7.03e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 119521 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00766 sec ]
 [ GrB_Matrix_nvals 
   1.11e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000476 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00356 sec ]
 [ GxB_set 
   1.53e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.07451e+09 (use dense mask) (nthreads 40 fine: 150) 
   3.25 sec ]
 [ GrB_Matrix_nvals 
   4.32e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.101 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.104 sec ]
 [ GxB_set (sparse to bitmap) 
   0.117 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   1.64 sec ]
 [ GrB_Matrix_nvals 
   5.93e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.093 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.128 sec ]
 [ GxB_set 
   7.11e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.155 sec ]
 [ GrB_Matrix_nvals 
   5.04e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0783 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.028 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0355 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.0354e+06 (use dense mask in-place) (nthreads 31 fine hash: 32) 
   0.0336 sec ]
 [ GrB_Matrix_nvals 
   3.92e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000291 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00031 sec ]
 [ GxB_set 
   2.98e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 5261 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00107 sec ]
 [ GrB_Matrix_nvals 
   9.08e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.23e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.06e-05 sec ]
 [ GxB_set 
   1.38e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 22 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.26e-05 sec ]
 [ GrB_Matrix_nvals 
   6.5e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0772 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000542 sec ]
 [ GrB_Matrix_nvals 
   3.44e-07 sec ]
 [ GrB_Matrix_nvals 
   1.96e-07 sec ]
 [ GxB_set 
   6.21e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 22 mwork 5239 (discard mask) (intensity: 5.21e-09 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000217 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 22 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000558 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000647 sec ]
 [ GrB_Matrix_nvals 
   1.63e-07 sec ]
 [ GrB_Matrix_nvals 
   1.24e-07 sec ]
 [ GxB_set 
   2.43e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 5261 mwork 1.99105e+06 (discard mask) (intensity: 1.25e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.00432 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00108 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0138 sec ]
 [ GrB_Matrix_nvals 
   3.48e-07 sec ]
 [ GrB_Matrix_nvals 
   2.15e-07 sec ]
 [ GxB_set 
   3.04e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 2.0354e+06 (use dense mask in-place) (nthreads 31 fine hash: 32) 
   0.051 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0857 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.554 sec ]
 [ GrB_Matrix_nvals 
   8.28e-07 sec ]
 [ GrB_Matrix_nvals 
   1.67e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.121 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   14 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.319 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.375 sec ]
 [ GrB_Matrix_nvals 
   5.53e-07 sec ]
 [ GrB_Matrix_nvals 
   4.25e-07 sec ]
 [ GxB_set 
   3.83e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   1.56 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.106 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0503 sec ]
 [ GrB_Matrix_nvals 
   5.73e-07 sec ]
 [ GrB_Matrix_nvals 
   2.07e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0325 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 8.46576e+06 mwork 7 (use mask) (nthreads 40 fine: 71 fine hash: 61) 
   0.0644 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000497 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0177 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.225 sec ]
BC time 40:      23.6443 (sec)

Trial 13 : sources: [ 109920510 121492133 101037296 15438600 ]
 [ GxB_set (sparse to bitmap) 
   0.0596 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 814 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000123 sec ]
 [ GrB_Matrix_nvals 
   5.37e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.92e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.04e-05 sec ]
 [ GxB_set 
   7.28e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.35132e+07 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 160) 
   0.158 sec ]
 [ GrB_Matrix_nvals 
   4.99e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.57 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.018 sec ]
 [ GxB_set 
   5.61e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.85485e+09 (use dense mask) (nthreads 40 fine: 157) 
   6.47 sec ]
 [ GrB_Matrix_nvals 
   2.77e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0954 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.102 sec ]
 [ GxB_set (sparse to bitmap) 
   0.112 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   1.8 sec ]
 [ GrB_Matrix_nvals 
   3.34e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.1 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.12 sec ]
 [ GxB_set 
   8.24e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.161 sec ]
 [ GrB_Matrix_nvals 
   4.41e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.076 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0335 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0365 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.69362e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 42) 
   0.0451 sec ]
 [ GrB_Matrix_nvals 
   4.1e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000487 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000419 sec ]
 [ GxB_set 
   3.52e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 6983 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00141 sec ]
 [ GrB_Matrix_nvals 
   1.2e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.25e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.03e-05 sec ]
 [ GxB_set 
   1.63e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 26 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.4e-05 sec ]
 [ GrB_Matrix_nvals 
   7.5e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0747 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000482 sec ]
 [ GrB_Matrix_nvals 
   3.22e-07 sec ]
 [ GrB_Matrix_nvals 
   2.15e-07 sec ]
 [ GxB_set 
   6.4e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 26 mwork 6925 (discard mask) (intensity: 6.16e-09 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000221 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 26 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000513 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000678 sec ]
 [ GrB_Matrix_nvals 
   1.84e-07 sec ]
 [ GrB_Matrix_nvals 
   1.17e-07 sec ]
 [ GxB_set 
   2.18e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 6983 mwork 2.58496e+06 (discard mask) (intensity: 1.65e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.0061 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0011 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0178 sec ]
 [ GrB_Matrix_nvals 
   3.7e-07 sec ]
 [ GrB_Matrix_nvals 
   2.9e-07 sec ]
 [ GxB_set 
   3.68e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 2.69362e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 42) 
   0.0589 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.164 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.552 sec ]
 [ GrB_Matrix_nvals 
   5.6e-07 sec ]
 [ GrB_Matrix_nvals 
   1.45e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.108 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   11.4 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.292 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.409 sec ]
 [ GrB_Matrix_nvals 
   5.68e-07 sec ]
 [ GrB_Matrix_nvals 
   5.03e-07 sec ]
 [ GxB_set 
   4.08e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   3.61 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.147 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0894 sec ]
 [ GrB_Matrix_nvals 
   4.39e-07 sec ]
 [ GrB_Matrix_nvals 
   1.61e-07 sec ]
 [ GxB_set 
   4.22e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 162 (sparse to bitmap) 
   0.0451 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.108 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.018 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.235 sec ]
BC time 40:      27.4396 (sec)

Trial 14 : sources: [ 4584784 124503845 87241743 108297008 ]
 [ GxB_set (sparse to bitmap) 
   0.0596 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 33 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.65e-05 sec ]
 [ GrB_Matrix_nvals 
   8.65e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.5e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.02e-05 sec ]
 [ GxB_set 
   7.25e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 810272 (use dense mask in-place) (nthreads 12 coarse hash: 2 fine hash: 13) 
   0.0163 sec ]
 [ GrB_Matrix_nvals 
   3.18e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0596 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00327 sec ]
 [ GxB_set 
   4.17e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.85013e+09 (use dense mask) (nthreads 40 fine: 153) 
   4.61 sec ]
 [ GrB_Matrix_nvals 
   4.67e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0698 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0672 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0768 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   5.91 sec ]
 [ GrB_Matrix_nvals 
   5.17e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.099 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.127 sec ]
 [ GxB_set 
   5.81e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.394 sec ]
 [ GrB_Matrix_nvals 
   4.22e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0779 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0728 sec ]
 [ GxB_set 
   1.31e-06 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.144 sec ]
 [ GrB_Matrix_nvals 
   3.22e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0704 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0232 sec ]
 [ GxB_set (bitmap to sparse) 
   0.032 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 240113 (use dense mask in-place) (nthreads 3 coarse hash: 2 fine hash: 4) 
   0.02 sec ]
 [ GrB_Matrix_nvals 
   4.09e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   4.76e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   4.96e-05 sec ]
 [ GxB_set 
   2.99e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 613 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000127 sec ]
 [ GrB_Matrix_nvals 
   7.89e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.19e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.77e-06 sec ]
 [ GxB_set 
   8.59e-08 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.09e-05 sec ]
 [ GrB_Matrix_nvals 
   7.1e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0776 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000485 sec ]
 [ GrB_Matrix_nvals 
   4.14e-07 sec ]
 [ GrB_Matrix_nvals 
   1.34e-07 sec ]
 [ GxB_set 
   7.24e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4 mwork 561 (discard mask) (intensity: 9.47e-10 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000206 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 4 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000458 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000502 sec ]
 [ GrB_Matrix_nvals 
   1.73e-07 sec ]
 [ GrB_Matrix_nvals 
   4.31e-07 sec ]
 [ GxB_set 
   2.81e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 613 mwork 237806 (discard mask) (intensity: 1.45e-07 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.000638 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000685 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00313 sec ]
 [ GrB_Matrix_nvals 
   2.69e-07 sec ]
 [ GrB_Matrix_nvals 
   1.75e-07 sec ]
 [ GxB_set 
   1.74e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 240113 (use dense mask in-place) (nthreads 3 coarse hash: 2 fine hash: 4) 
   0.0424 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0277 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.381 sec ]
 [ GrB_Matrix_nvals 
   5.14e-07 sec ]
 [ GrB_Matrix_nvals 
   4.99e-07 sec ]
 [ GxB_set 
   2.57e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 8.77001e+07 (use dense mask) (nthreads 40 fine: 134) 
   0.701 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0662 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.572 sec ]
 [ GrB_Matrix_nvals 
   5.41e-07 sec ]
 [ GrB_Matrix_nvals 
   2.31e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.118 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   10.1 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.237 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.327 sec ]
 [ GrB_Matrix_nvals 
   5.19e-07 sec ]
 [ GrB_Matrix_nvals 
   2.97e-07 sec ]
 [ GxB_set 
   3.81e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   2.51 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.116 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0547 sec ]
 [ GrB_Matrix_nvals 
   4.45e-07 sec ]
 [ GrB_Matrix_nvals 
   3.72e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0323 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.64984e+08 mwork 33 (use mask) (nthreads 40 coarse hash: 2 fine: 160) 
   0.189 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000704 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0177 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.238 sec ]
BC time 40:      27.8593 (sec)

Trial 15 : sources: [ 33955082 79934823 8608481 82435063 ]
 [ GxB_set (sparse to bitmap) 
   0.0593 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 92 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.12e-05 sec ]
 [ GrB_Matrix_nvals 
   8.21e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.6e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.6e-05 sec ]
 [ GxB_set 
   7.1e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.49678e+06 (use dense mask in-place) (nthreads 22 coarse hash: 2 fine hash: 21) 
   0.0429 sec ]
 [ GrB_Matrix_nvals 
   4.6e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0992 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00598 sec ]
 [ GxB_set 
   7.74e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.08352e+09 (use dense mask) (nthreads 40 fine: 157) 
   7.63 sec ]
 [ GrB_Matrix_nvals 
   4.61e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.102 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.103 sec ]
 [ GxB_set (sparse to bitmap) 
   0.112 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   2.13 sec ]
 [ GrB_Matrix_nvals 
   4.68e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0996 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.127 sec ]
 [ GxB_set 
   6.86e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.166 sec ]
 [ GrB_Matrix_nvals 
   4.6e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0776 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0353 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0387 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.77771e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 59) 
   0.0658 sec ]
 [ GrB_Matrix_nvals 
   4.29e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000805 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000667 sec ]
 [ GxB_set 
   4.56e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 9823 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00193 sec ]
 [ GrB_Matrix_nvals 
   1.29e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.4e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.1e-05 sec ]
 [ GxB_set 
   1.67e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 32 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.65e-05 sec ]
 [ GrB_Matrix_nvals 
   7.99e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0744 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000498 sec ]
 [ GrB_Matrix_nvals 
   3.51e-07 sec ]
 [ GrB_Matrix_nvals 
   1.31e-07 sec ]
 [ GxB_set 
   6.16e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 32 mwork 9691 (discard mask) (intensity: 7.58e-09 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000225 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 32 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000689 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00171 sec ]
 [ GrB_Matrix_nvals 
   1.71e-07 sec ]
 [ GrB_Matrix_nvals 
   2.09e-07 sec ]
 [ GxB_set 
   2.59e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 9823 mwork 3.4758e+06 (discard mask) (intensity: 2.33e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.00865 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00116 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0232 sec ]
 [ GrB_Matrix_nvals 
   3.28e-07 sec ]
 [ GrB_Matrix_nvals 
   1.54e-07 sec ]
 [ GxB_set 
   4.19e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 3.77771e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 59) 
   0.1 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.277 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.565 sec ]
 [ GrB_Matrix_nvals 
   6.39e-07 sec ]
 [ GrB_Matrix_nvals 
   4.74e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.114 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   11.8 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.3 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.391 sec ]
 [ GrB_Matrix_nvals 
   9.55e-07 sec ]
 [ GrB_Matrix_nvals 
   2.17e-07 sec ]
 [ GxB_set 
   3.65e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   4.15 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.124 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0588 sec ]
 [ GrB_Matrix_nvals 
   4.58e-07 sec ]
 [ GrB_Matrix_nvals 
   2.72e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0335 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.16801e+09 mwork 92 (use mask) (nthreads 40 coarse: 2 fine: 155) 
   1.09 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000641 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0179 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.234 sec ]
BC time 40:      30.3910 (sec)

Trial 16 : sources: [ 46579271 515421 121530467 127978736 ]
 [ GxB_set (sparse to bitmap) 
   0.0593 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 38 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.92e-05 sec ]
 [ GrB_Matrix_nvals 
   8.67e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.57e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.05e-05 sec ]
 [ GxB_set 
   5.34e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 931819 (use dense mask in-place) (nthreads 14 coarse hash: 2 fine hash: 14) 
   0.0224 sec ]
 [ GrB_Matrix_nvals 
   2.38e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0406 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00411 sec ]
 [ GxB_set 
   5.31e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.31359e+09 (use dense mask) (nthreads 40 fine: 156) 
   8.81 sec ]
 [ GrB_Matrix_nvals 
   4.22e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.109 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.107 sec ]
 [ GxB_set (sparse to bitmap) 
   0.117 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   1.44 sec ]
 [ GrB_Matrix_nvals 
   4.87e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.1 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.132 sec ]
 [ GxB_set 
   6.51e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.158 sec ]
 [ GrB_Matrix_nvals 
   3.48e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0773 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.032 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0359 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.10284e+06 (use dense mask in-place) (nthreads 32 coarse hash: 2 fine hash: 31) 
   0.0479 sec ]
 [ GrB_Matrix_nvals 
   4.16e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000383 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000372 sec ]
 [ GxB_set 
   4.28e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 5429 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00107 sec ]
 [ GrB_Matrix_nvals 
   1.09e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.23e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.04e-05 sec ]
 [ GxB_set 
   1.54e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 21 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.29e-05 sec ]
 [ GrB_Matrix_nvals 
   6.8e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0749 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000515 sec ]
 [ GrB_Matrix_nvals 
   3.51e-07 sec ]
 [ GrB_Matrix_nvals 
   5.31e-08 sec ]
 [ GxB_set 
   5.25e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 21 mwork 5256 (discard mask) (intensity: 4.97e-09 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) (pending: 0) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 
   0.000216 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 21 pending) (hyper to sparse) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000499 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000631 sec ]
 [ GrB_Matrix_nvals 
   1.75e-07 sec ]
 [ GrB_Matrix_nvals 
   1.3e-07 sec ]
 [ GxB_set 
   2.73e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 5429 mwork 2.00401e+06 (discard mask) (intensity: 1.29e-06 workspace/(nnz(A)+nnz(B)): 0.0318) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 
   0.0048 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00101 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0144 sec ]
 [ GrB_Matrix_nvals 
   3.63e-07 sec ]
 [ GrB_Matrix_nvals 
   2.13e-07 sec ]
 [ GxB_set 
   3.25e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 2.10284e+06 (use dense mask in-place) (nthreads 32 coarse hash: 2 fine hash: 31) 
   0.0974 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.165 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.54 sec ]
 [ GrB_Matrix_nvals 
   4.9e-07 sec ]
 [ GrB_Matrix_nvals 
   1.67e-07 sec ]
 [ GxB_set 
   1.41e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 6.26801e+08 (use dense mask) (nthreads 40 fine: 146) 
   2.35 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.134 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.558 sec ]
 [ GrB_Matrix_nvals 
   5.44e-07 sec ]
 [ GrB_Matrix_nvals 
   2.36e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.116 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   4.55 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.117 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0556 sec ]
 [ GrB_Matrix_nvals 
   5.76e-07 sec ]
 [ GrB_Matrix_nvals 
   1.94e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0331 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 3.8152e+08 mwork 38 (use mask) (nthreads 40 coarse hash: 1 fine: 162) 
   0.237 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000581 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0177 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.234 sec ]
BC time 40:      20.7147 (sec)

ntrials: 16

Ave BC 40:     25.392 sec, rate    166.319
SuiteSparse:GraphBLAS v4.0.3 [Jan 19, 2021]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
 [ GxB_Matrix_import_CSR 
   1.91e-05 sec ]
 [ GxB_set 
   0.0215 sec ]
sources: /home/faculty/davis/GAP/GAP-urand/GAP-urand_sources.mtx
    GraphBLAS type: type double size: 8
 [ *_setElement (wait: 0 zombies, 64 pending) 
   6.3e-05 sec ]
 [ GrB_apply (shallow-op) 
   5.83 sec ]
read time: 55.554
 [ GrB_Matrix_nvals 
   1.02e-06 sec ]
Graph: kind: undirected, nodes: 134217728 entries: 4294966740 type: bool
    pattern symmetry: symmetric
 [ GrB_Matrix_nvals 
   2.67e-07 sec ]

Trial 1 : sources: [ 27691419 121280314 2413431 37512113 ]
 [ GxB_set (sparse to bitmap) 
   0.0936 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 142 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000146 sec ]
 [ GrB_Matrix_nvals 
   8.22e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.7e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   6.31e-05 sec ]
 [ GxB_set 
   1.45e-06 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4670 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000375 sec ]
 [ GrB_Matrix_nvals 
   1.24e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00021 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000987 sec ]
 [ GxB_set 
   2.02e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 149017 (use dense mask in-place) (nthreads 2 coarse hash: 3) 
   0.00881 sec ]
 [ GrB_Matrix_nvals 
   1.18e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00878 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0203 sec ]
 [ GxB_set 
   2.2e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.76586e+06 (use dense mask in-place) (nthreads 40 fine hash: 74) 
   0.0523 sec ]
 [ GrB_Matrix_nvals 
   5.2e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.255 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0325 sec ]
 [ GxB_set 
   6.57e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.51772e+08 (use dense mask) (nthreads 40 fine: 136) 
   0.92 sec ]
 [ GrB_Matrix_nvals 
   2.73e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.105 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.109 sec ]
 [ GxB_set (sparse to bitmap) 
   0.118 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.7 sec ]
 [ GrB_Matrix_nvals 
   5.01e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0926 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.129 sec ]
 [ GxB_set 
   6.38e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.0881 sec ]
 [ GrB_Matrix_nvals 
   4.29e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0737 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0215 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0312 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7.2902e+06 (use dense mask in-place) (nthreads 40 fine hash: 114) 
   0.0522 sec ]
 [ GrB_Matrix_nvals 
   4.83e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0746 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00286 sec ]
 [ GrB_Matrix_nvals 
   4.54e-07 sec ]
 [ GrB_Matrix_nvals 
   1.06e-07 sec ]
 [ GxB_set 
   6.12e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 7.2902e+06 (use dense mask in-place) (nthreads 40 fine hash: 114) 
   0.0777 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.378 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.438 sec ]
 [ GrB_Matrix_nvals 
   4.94e-07 sec ]
 [ GrB_Matrix_nvals 
   1.39e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.166 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   8.94 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.374 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.253 sec ]
 [ GrB_Matrix_nvals 
   4.11e-07 sec ]
 [ GrB_Matrix_nvals 
   2.21e-07 sec ]
 [ GxB_set 
   2.72e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.362 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.148 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0563 sec ]
 [ GrB_Matrix_nvals 
   9.37e-07 sec ]
 [ GrB_Matrix_nvals 
   2.02e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.038 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.51772e+08 mwork 144471 (use mask) (nthreads 40 fine: 162) 
   0.317 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0041 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00322 sec ]
 [ GrB_Matrix_nvals 
   8.01e-07 sec ]
 [ GrB_Matrix_nvals 
   1.53e-07 sec ]
 [ GxB_set 
   4.15e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.76586e+06 mwork 4528 (use mask) (nthreads 40 fine hash: 74) 
   0.031 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00204 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000495 sec ]
 [ GrB_Matrix_nvals 
   3.89e-07 sec ]
 [ GrB_Matrix_nvals 
   1.16e-07 sec ]
 [ GxB_set 
   3.03e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 149017 mwork 142 (use mask) (intensity: 3.47e-05 workspace/(nnz(A)+nnz(B)): 0.125) (nthreads 2 coarse hash: 3) 
   0.00216 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00201 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.018 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.209 sec ]
BC time 40:      31.9006 (sec)

Trial 2 : sources: [ 38390877 56651037 128461248 33029842 ]
 [ GxB_set (sparse to bitmap) 
   0.0597 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 146 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.47e-05 sec ]
 [ GrB_Matrix_nvals 
   6.81e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.51e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.47e-05 sec ]
 [ GxB_set 
   6.41e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4896 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000389 sec ]
 [ GrB_Matrix_nvals 
   1.28e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000217 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000251 sec ]
 [ GxB_set 
   1.71e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 157300 (use dense mask in-place) (nthreads 2 coarse hash: 4) 
   0.00735 sec ]
 [ GrB_Matrix_nvals 
   1.06e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00689 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00399 sec ]
 [ GxB_set 
   1.77e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 5.03419e+06 (use dense mask in-place) (nthreads 40 fine hash: 78) 
   0.0625 sec ]
 [ GrB_Matrix_nvals 
   4.54e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.143 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0257 sec ]
 [ GxB_set 
   5.69e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.60301e+08 (use dense mask) (nthreads 40 fine: 136) 
   0.944 sec ]
 [ GrB_Matrix_nvals 
   8.27e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.107 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.109 sec ]
 [ GxB_set (sparse to bitmap) 
   0.118 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.7 sec ]
 [ GrB_Matrix_nvals 
   6.13e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0885 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.131 sec ]
 [ GxB_set 
   6.73e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.0816 sec ]
 [ GrB_Matrix_nvals 
   3.93e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.074 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0211 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0309 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.97377e+06 (use dense mask in-place) (nthreads 40 fine hash: 62) 
   0.0305 sec ]
 [ GrB_Matrix_nvals 
   7.52e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0743 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00322 sec ]
 [ GrB_Matrix_nvals 
   2.23e-07 sec ]
 [ GrB_Matrix_nvals 
   4.2e-07 sec ]
 [ GxB_set 
   8.88e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 3.97377e+06 (use dense mask in-place) (nthreads 40 fine hash: 62) 
   0.0448 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.218 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.434 sec ]
 [ GrB_Matrix_nvals 
   5.19e-07 sec ]
 [ GrB_Matrix_nvals 
   2.25e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.165 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   9.32 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.336 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.226 sec ]
 [ GrB_Matrix_nvals 
   3.62e-07 sec ]
 [ GrB_Matrix_nvals 
   2.04e-07 sec ]
 [ GxB_set 
   3.81e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.368 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.152 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0586 sec ]
 [ GrB_Matrix_nvals 
   3.35e-07 sec ]
 [ GrB_Matrix_nvals 
   2.21e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0388 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.60301e+08 mwork 152521 (use mask) (nthreads 40 fine: 163) 
   0.346 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00421 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00333 sec ]
 [ GrB_Matrix_nvals 
   4.04e-07 sec ]
 [ GrB_Matrix_nvals 
   1.86e-07 sec ]
 [ GxB_set 
   4.19e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 5.03419e+06 mwork 4750 (use mask) (nthreads 40 fine hash: 78) 
   0.0365 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00157 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000489 sec ]
 [ GrB_Matrix_nvals 
   4.07e-07 sec ]
 [ GrB_Matrix_nvals 
   3.44e-07 sec ]
 [ GxB_set 
   3.56e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 157300 mwork 146 (use mask) (intensity: 3.67e-05 workspace/(nnz(A)+nnz(B)): 0.125) (nthreads 2 coarse hash: 4) 
   0.00247 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00305 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.018 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.179 sec ]
BC time 40:      31.9482 (sec)

Trial 3 : sources: [ 71406328 117872827 24351938 15444519 ]
 [ GxB_set (sparse to bitmap) 
   0.061 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 134 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.91e-05 sec ]
 [ GrB_Matrix_nvals 
   5.24e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.6e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.33e-05 sec ]
 [ GxB_set 
   6.66e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4348 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000362 sec ]
 [ GrB_Matrix_nvals 
   1.02e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000195 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000233 sec ]
 [ GxB_set 
   1.75e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 138490 (use dense mask in-place) (nthreads 2 coarse hash: 3) 
   0.00828 sec ]
 [ GrB_Matrix_nvals 
   1.8e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00705 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00299 sec ]
 [ GxB_set 
   2.15e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.43008e+06 (use dense mask in-place) (nthreads 40 fine hash: 70) 
   0.0511 sec ]
 [ GrB_Matrix_nvals 
   4.43e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.13 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0219 sec ]
 [ GxB_set 
   8.31e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.41126e+08 (use dense mask) (nthreads 40 fine: 136) 
   0.864 sec ]
 [ GrB_Matrix_nvals 
   4.72e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.101 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.106 sec ]
 [ GxB_set (sparse to bitmap) 
   0.116 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.9 sec ]
 [ GrB_Matrix_nvals 
   5.12e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0875 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.127 sec ]
 [ GxB_set 
   8.3e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.103 sec ]
 [ GrB_Matrix_nvals 
   4.39e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0733 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0227 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0315 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.38986e+07 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 159) 
   0.0964 sec ]
 [ GrB_Matrix_nvals 
   4.65e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0743 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00416 sec ]
 [ GrB_Matrix_nvals 
   2.76e-07 sec ]
 [ GrB_Matrix_nvals 
   2.21e-07 sec ]
 [ GxB_set 
   5.88e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.38986e+07 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 159) 
   0.168 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.756 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.441 sec ]
 [ GrB_Matrix_nvals 
   5.04e-07 sec ]
 [ GrB_Matrix_nvals 
   3.04e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.167 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   8.46 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.336 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.225 sec ]
 [ GrB_Matrix_nvals 
   4.44e-07 sec ]
 [ GrB_Matrix_nvals 
   2.73e-07 sec ]
 [ GxB_set 
   4.21e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.327 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.145 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0528 sec ]
 [ GrB_Matrix_nvals 
   4.52e-07 sec ]
 [ GrB_Matrix_nvals 
   2.02e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0377 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.41126e+08 mwork 134253 (use mask) (nthreads 40 fine: 161) 
   0.306 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00396 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00292 sec ]
 [ GrB_Matrix_nvals 
   4.32e-07 sec ]
 [ GrB_Matrix_nvals 
   1.57e-07 sec ]
 [ GxB_set 
   3.5e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.43008e+06 mwork 4214 (use mask) (nthreads 40 fine hash: 70) 
   0.0294 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00153 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000515 sec ]
 [ GrB_Matrix_nvals 
   3.63e-07 sec ]
 [ GrB_Matrix_nvals 
   1.33e-07 sec ]
 [ GxB_set 
   3.28e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 138490 mwork 134 (use mask) (intensity: 3.23e-05 workspace/(nnz(A)+nnz(B)): 0.125) (nthreads 2 coarse hash: 3) 
   0.00224 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00322 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.018 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.206 sec ]
BC time 40:      31.8216 (sec)

Trial 4 : sources: [ 127526281 112279428 13631649 110379302 ]
 [ GxB_set (sparse to bitmap) 
   0.0616 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 124 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.75e-05 sec ]
 [ GrB_Matrix_nvals 
   5.62e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.61e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.23e-05 sec ]
 [ GxB_set 
   6.66e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4030 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00035 sec ]
 [ GrB_Matrix_nvals 
   4.91e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00018 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000221 sec ]
 [ GxB_set 
   2.5e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 128595 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00938 sec ]
 [ GrB_Matrix_nvals 
   9.1e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00783 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00398 sec ]
 [ GxB_set 
   2.88e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.1167e+06 (use dense mask in-place) (nthreads 40 fine hash: 65) 
   0.0418 sec ]
 [ GrB_Matrix_nvals 
   1.54e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.171 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.021 sec ]
 [ GxB_set 
   5.74e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.31181e+08 (use dense mask) (nthreads 40 fine: 136) 
   0.823 sec ]
 [ GrB_Matrix_nvals 
   2.58e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0976 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.106 sec ]
 [ GxB_set (sparse to bitmap) 
   0.114 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.9 sec ]
 [ GrB_Matrix_nvals 
   4.87e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0901 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.129 sec ]
 [ GxB_set 
   7.59e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.12 sec ]
 [ GrB_Matrix_nvals 
   1.97e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0744 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0239 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0308 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.12558e+07 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 158) 
   0.153 sec ]
 [ GrB_Matrix_nvals 
   5.82e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0744 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00558 sec ]
 [ GrB_Matrix_nvals 
   2.53e-07 sec ]
 [ GrB_Matrix_nvals 
   2.17e-07 sec ]
 [ GxB_set 
   4.84e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 2.12558e+07 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 158) 
   0.283 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   1.05 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.442 sec ]
 [ GrB_Matrix_nvals 
   4.72e-07 sec ]
 [ GrB_Matrix_nvals 
   2.32e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.168 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   7.9 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.335 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.224 sec ]
 [ GrB_Matrix_nvals 
   4.33e-07 sec ]
 [ GrB_Matrix_nvals 
   2.16e-07 sec ]
 [ GxB_set 
   4.19e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.303 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.14 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0496 sec ]
 [ GrB_Matrix_nvals 
   3.27e-07 sec ]
 [ GrB_Matrix_nvals 
   2.75e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0375 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.31181e+08 mwork 124683 (use mask) (nthreads 40 fine: 162) 
   0.305 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00504 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000841 sec ]
 [ GrB_Matrix_nvals 
   3.82e-07 sec ]
 [ GrB_Matrix_nvals 
   1.86e-07 sec ]
 [ GxB_set 
   3.89e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.1167e+06 mwork 3906 (use mask) (nthreads 40 fine hash: 65) 
   0.0248 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0015 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00164 sec ]
 [ GrB_Matrix_nvals 
   3.64e-07 sec ]
 [ GrB_Matrix_nvals 
   1.19e-07 sec ]
 [ GxB_set 
   3.53e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 128595 mwork 124 (use mask) (intensity: 3e-05 workspace/(nnz(A)+nnz(B)): 0.0312) (nthreads 1 coarse hash: 1) 
   0.00263 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00182 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0178 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.186 sec ]
BC time 40:      31.6827 (sec)

Trial 5 : sources: [ 44800623 77768193 175347 107397389 ]
 [ GxB_set (sparse to bitmap) 
   0.0595 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 122 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.07e-05 sec ]
 [ GrB_Matrix_nvals 
   7.94e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.7e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.05e-05 sec ]
 [ GxB_set 
   4.41e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4014 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000331 sec ]
 [ GrB_Matrix_nvals 
   7.19e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000178 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000211 sec ]
 [ GxB_set 
   1.95e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 128347 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00883 sec ]
 [ GrB_Matrix_nvals 
   1.06e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0078 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00374 sec ]
 [ GxB_set 
   2.74e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.10612e+06 (use dense mask in-place) (nthreads 40 fine hash: 66) 
   0.0418 sec ]
 [ GrB_Matrix_nvals 
   2.36e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.195 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0209 sec ]
 [ GxB_set 
   9.48e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.30869e+08 (use dense mask) (nthreads 40 fine: 136) 
   0.802 sec ]
 [ GrB_Matrix_nvals 
   4.37e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0971 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.105 sec ]
 [ GxB_set (sparse to bitmap) 
   0.115 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.9 sec ]
 [ GrB_Matrix_nvals 
   5.19e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.105 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.155 sec ]
 [ GxB_set 
   7.69e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.118 sec ]
 [ GrB_Matrix_nvals 
   3.04e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.107 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0346 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0561 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.8069e+07 (use dense mask in-place) (nthreads 40 fine hash: 163) 
   0.127 sec ]
 [ GrB_Matrix_nvals 
   7.81e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0777 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.0123 sec ]
 [ GrB_Matrix_nvals 
   4.72e-07 sec ]
 [ GrB_Matrix_nvals 
   1.83e-07 sec ]
 [ GxB_set 
   8.21e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.8069e+07 (use dense mask in-place) (nthreads 40 fine hash: 163) 
   0.199 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.969 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.442 sec ]
 [ GrB_Matrix_nvals 
   6.25e-07 sec ]
 [ GrB_Matrix_nvals 
   1.62e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.168 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   7.9 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.333 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.225 sec ]
 [ GrB_Matrix_nvals 
   3.38e-07 sec ]
 [ GrB_Matrix_nvals 
   2.19e-07 sec ]
 [ GxB_set 
   3.59e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.303 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.139 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0492 sec ]
 [ GrB_Matrix_nvals 
   3.07e-07 sec ]
 [ GrB_Matrix_nvals 
   2e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0381 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.30869e+08 mwork 124444 (use mask) (nthreads 40 fine: 162) 
   0.291 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0051 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00083 sec ]
 [ GrB_Matrix_nvals 
   3.91e-07 sec ]
 [ GrB_Matrix_nvals 
   1.6e-07 sec ]
 [ GxB_set 
   3.85e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.10612e+06 mwork 3892 (use mask) (nthreads 40 fine hash: 66) 
   0.0263 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00155 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000528 sec ]
 [ GrB_Matrix_nvals 
   3.4e-07 sec ]
 [ GrB_Matrix_nvals 
   1.33e-07 sec ]
 [ GxB_set 
   3.27e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 128347 mwork 122 (use mask) (intensity: 2.99e-05 workspace/(nnz(A)+nnz(B)): 0.0312) (nthreads 1 coarse hash: 1) 
   0.00265 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000667 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.018 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.182 sec ]
BC time 40:      31.5495 (sec)

Trial 6 : sources: [ 43457209 97215940 73575165 44449715 ]
 [ GxB_set (sparse to bitmap) 
   0.0596 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 138 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.54e-05 sec ]
 [ GrB_Matrix_nvals 
   5.81e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.69e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.24e-05 sec ]
 [ GxB_set 
   3.33e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4675 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000373 sec ]
 [ GrB_Matrix_nvals 
   1.08e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000204 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000241 sec ]
 [ GxB_set 
   2.26e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 150016 (use dense mask in-place) (nthreads 2 coarse hash: 3) 
   0.00646 sec ]
 [ GrB_Matrix_nvals 
   1.13e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00668 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0036 sec ]
 [ GxB_set 
   2.05e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.80289e+06 (use dense mask in-place) (nthreads 40 fine hash: 76) 
   0.0595 sec ]
 [ GrB_Matrix_nvals 
   4.96e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.238 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0236 sec ]
 [ GxB_set 
   5.03e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.52963e+08 (use dense mask) (nthreads 40 fine: 136) 
   0.944 sec ]
 [ GrB_Matrix_nvals 
   4.7e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.104 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.108 sec ]
 [ GxB_set (sparse to bitmap) 
   0.118 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.6 sec ]
 [ GrB_Matrix_nvals 
   3.73e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.086 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.129 sec ]
 [ GxB_set 
   9.95e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.0831 sec ]
 [ GrB_Matrix_nvals 
   4.07e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0733 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0216 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0309 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.80699e+06 (use dense mask in-place) (nthreads 40 fine hash: 75) 
   0.0385 sec ]
 [ GrB_Matrix_nvals 
   7.08e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0744 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00231 sec ]
 [ GrB_Matrix_nvals 
   2.21e-07 sec ]
 [ GrB_Matrix_nvals 
   2.19e-07 sec ]
 [ GxB_set 
   6.18e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 4.80699e+06 (use dense mask in-place) (nthreads 40 fine hash: 75) 
   0.0539 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.246 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.443 sec ]
 [ GrB_Matrix_nvals 
   6.98e-07 sec ]
 [ GrB_Matrix_nvals 
   1.53e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.165 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   8.92 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.336 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.228 sec ]
 [ GrB_Matrix_nvals 
   4.78e-07 sec ]
 [ GrB_Matrix_nvals 
   3.59e-07 sec ]
 [ GxB_set 
   4.07e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.356 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.148 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0558 sec ]
 [ GrB_Matrix_nvals 
   5.52e-07 sec ]
 [ GrB_Matrix_nvals 
   1.97e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0382 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.52963e+08 mwork 145452 (use mask) (nthreads 40 fine: 161) 
   0.325 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00422 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00323 sec ]
 [ GrB_Matrix_nvals 
   4.28e-07 sec ]
 [ GrB_Matrix_nvals 
   1.88e-07 sec ]
 [ GxB_set 
   4.29e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.80289e+06 mwork 4537 (use mask) (nthreads 40 fine hash: 76) 
   0.0367 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00156 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000498 sec ]
 [ GrB_Matrix_nvals 
   3.74e-07 sec ]
 [ GrB_Matrix_nvals 
   1.38e-07 sec ]
 [ GxB_set 
   3.48e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 150016 mwork 138 (use mask) (intensity: 3.5e-05 workspace/(nnz(A)+nnz(B)): 0.125) (nthreads 2 coarse hash: 3) 
   0.00232 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00484 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.018 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.18 sec ]
BC time 40:      31.5159 (sec)

Trial 7 : sources: [ 33931724 55526610 14422051 58043873 ]
 [ GxB_set (sparse to bitmap) 
   0.0597 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 120 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   9.9e-05 sec ]
 [ GrB_Matrix_nvals 
   1.15e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.66e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.02e-05 sec ]
 [ GxB_set 
   5.93e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3923 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000317 sec ]
 [ GrB_Matrix_nvals 
   1.16e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000172 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000206 sec ]
 [ GxB_set 
   1.86e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 125678 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00861 sec ]
 [ GrB_Matrix_nvals 
   1.41e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00765 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00369 sec ]
 [ GxB_set 
   1.87e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.02272e+06 (use dense mask in-place) (nthreads 40 fine hash: 63) 
   0.048 sec ]
 [ GrB_Matrix_nvals 
   3.96e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.12 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0204 sec ]
 [ GxB_set 
   5.59e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.28207e+08 (use dense mask) (nthreads 40 fine: 135) 
   0.8 sec ]
 [ GrB_Matrix_nvals 
   4.12e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0956 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.104 sec ]
 [ GxB_set (sparse to bitmap) 
   0.114 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.7 sec ]
 [ GrB_Matrix_nvals 
   5.38e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0816 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.127 sec ]
 [ GxB_set 
   6.52e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.127 sec ]
 [ GrB_Matrix_nvals 
   4.1e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.074 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0248 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0319 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.34091e+07 (use dense mask in-place) (nthreads 40 fine hash: 163) 
   0.127 sec ]
 [ GrB_Matrix_nvals 
   5.63e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0745 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00676 sec ]
 [ GrB_Matrix_nvals 
   3.1e-07 sec ]
 [ GrB_Matrix_nvals 
   2.14e-07 sec ]
 [ GxB_set 
   6.88e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 2.34091e+07 (use dense mask in-place) (nthreads 40 fine hash: 163) 
   0.22 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   1.66 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.459 sec ]
 [ GrB_Matrix_nvals 
   7.05e-07 sec ]
 [ GrB_Matrix_nvals 
   1.66e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.168 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   7.74 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.337 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.227 sec ]
 [ GrB_Matrix_nvals 
   4.42e-07 sec ]
 [ GrB_Matrix_nvals 
   3.04e-07 sec ]
 [ GxB_set 
   3.61e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.298 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.139 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0483 sec ]
 [ GrB_Matrix_nvals 
   3.33e-07 sec ]
 [ GrB_Matrix_nvals 
   3.32e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0369 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.28207e+08 mwork 121866 (use mask) (nthreads 40 fine: 162) 
   0.287 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00502 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000828 sec ]
 [ GrB_Matrix_nvals 
   3.78e-07 sec ]
 [ GrB_Matrix_nvals 
   1.6e-07 sec ]
 [ GxB_set 
   3.9e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.02272e+06 mwork 3803 (use mask) (nthreads 40 fine hash: 64) 
   0.0295 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00144 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000526 sec ]
 [ GrB_Matrix_nvals 
   3.56e-07 sec ]
 [ GrB_Matrix_nvals 
   1.3e-07 sec ]
 [ GxB_set 
   4.54e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 125678 mwork 120 (use mask) (intensity: 2.93e-05 workspace/(nnz(A)+nnz(B)): 0.0312) (nthreads 1 coarse hash: 1) 
   0.0027 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000643 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0178 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.181 sec ]
BC time 40:      31.7584 (sec)

Trial 8 : sources: [ 72137329 9647840 15940695 14209952 ]
 [ GxB_set (sparse to bitmap) 
   0.0609 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 151 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.55e-05 sec ]
 [ GrB_Matrix_nvals 
   5.42e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.47e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.34e-05 sec ]
 [ GxB_set 
   4.49e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 5048 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00041 sec ]
 [ GrB_Matrix_nvals 
   1.03e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000226 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000261 sec ]
 [ GxB_set 
   2.14e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 162077 (use dense mask in-place) (nthreads 2 coarse hash: 3) 
   0.00821 sec ]
 [ GrB_Matrix_nvals 
   1.09e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0062 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00516 sec ]
 [ GxB_set 
   3.86e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 5.18453e+06 (use dense mask in-place) (nthreads 40 fine hash: 80) 
   0.0595 sec ]
 [ GrB_Matrix_nvals 
   4.13e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.197 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0261 sec ]
 [ GxB_set 
   6.28e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.65045e+08 (use dense mask) (nthreads 40 fine: 136) 
   1.01 sec ]
 [ GrB_Matrix_nvals 
   4.33e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.105 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.11 sec ]
 [ GxB_set (sparse to bitmap) 
   0.119 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.7 sec ]
 [ GrB_Matrix_nvals 
   4.94e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0977 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.128 sec ]
 [ GxB_set 
   8.42e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.083 sec ]
 [ GrB_Matrix_nvals 
   4.78e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0726 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.021 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0317 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.31228e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 66) 
   0.038 sec ]
 [ GrB_Matrix_nvals 
   4.21e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0745 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00211 sec ]
 [ GrB_Matrix_nvals 
   4.46e-07 sec ]
 [ GrB_Matrix_nvals 
   2.36e-07 sec ]
 [ GxB_set 
   9.76e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 4.31228e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 66) 
   0.0581 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.243 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.438 sec ]
 [ GrB_Matrix_nvals 
   8.41e-07 sec ]
 [ GrB_Matrix_nvals 
   3.56e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.164 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   9.5 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.336 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.229 sec ]
 [ GrB_Matrix_nvals 
   4.5e-07 sec ]
 [ GrB_Matrix_nvals 
   1.94e-07 sec ]
 [ GxB_set 
   4.11e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.38 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.159 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0608 sec ]
 [ GrB_Matrix_nvals 
   5.17e-07 sec ]
 [ GrB_Matrix_nvals 
   3.64e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0389 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.65045e+08 mwork 157161 (use mask) (nthreads 40 fine: 162) 
   0.346 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00431 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00325 sec ]
 [ GrB_Matrix_nvals 
   3.75e-07 sec ]
 [ GrB_Matrix_nvals 
   1.96e-07 sec ]
 [ GxB_set 
   4.94e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 5.18453e+06 mwork 4897 (use mask) (nthreads 40 fine hash: 80) 
   0.0379 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00163 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00051 sec ]
 [ GrB_Matrix_nvals 
   6.89e-07 sec ]
 [ GrB_Matrix_nvals 
   1.99e-07 sec ]
 [ GxB_set 
   3.86e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 162077 mwork 151 (use mask) (intensity: 3.78e-05 workspace/(nnz(A)+nnz(B)): 0.125) (nthreads 2 coarse hash: 3) 
   0.00251 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00309 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0188 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.181 sec ]
BC time 40:      32.2412 (sec)

Trial 9 : sources: [ 49020883 28901138 50493273 49150069 ]
 [ GxB_set (sparse to bitmap) 
   0.0612 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 131 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.64e-05 sec ]
 [ GrB_Matrix_nvals 
   8.57e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.7e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.25e-05 sec ]
 [ GxB_set 
   6.66e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4352 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000364 sec ]
 [ GrB_Matrix_nvals 
   1.09e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000193 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000236 sec ]
 [ GxB_set 
   2.76e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 139945 (use dense mask in-place) (nthreads 2 coarse hash: 3) 
   0.00604 sec ]
 [ GrB_Matrix_nvals 
   1.16e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00608 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00336 sec ]
 [ GxB_set 
   2.92e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.4785e+06 (use dense mask in-place) (nthreads 40 fine hash: 70) 
   0.0577 sec ]
 [ GrB_Matrix_nvals 
   4.57e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.192 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0237 sec ]
 [ GxB_set 
   1e-06 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.42667e+08 (use dense mask) (nthreads 40 fine: 136) 
   0.879 sec ]
 [ GrB_Matrix_nvals 
   4.3e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.101 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.106 sec ]
 [ GxB_set (sparse to bitmap) 
   0.116 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.7 sec ]
 [ GrB_Matrix_nvals 
   4.4e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0844 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.129 sec ]
 [ GxB_set 
   6.74e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.0893 sec ]
 [ GrB_Matrix_nvals 
   5.1e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.075 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0212 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0304 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7.7332e+06 (use dense mask in-place) (nthreads 40 fine hash: 121) 
   0.056 sec ]
 [ GrB_Matrix_nvals 
   7.61e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0742 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00302 sec ]
 [ GrB_Matrix_nvals 
   2.73e-07 sec ]
 [ GrB_Matrix_nvals 
   2.16e-07 sec ]
 [ GxB_set 
   8.8e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 7.7332e+06 (use dense mask in-place) (nthreads 40 fine hash: 121) 
   0.081 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.321 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.44 sec ]
 [ GrB_Matrix_nvals 
   5.33e-07 sec ]
 [ GrB_Matrix_nvals 
   3.21e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.167 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   8.47 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.336 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.226 sec ]
 [ GrB_Matrix_nvals 
   6.59e-07 sec ]
 [ GrB_Matrix_nvals 
   6.75e-07 sec ]
 [ GxB_set 
   4.8e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.332 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.141 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0523 sec ]
 [ GrB_Matrix_nvals 
   5.02e-07 sec ]
 [ GrB_Matrix_nvals 
   3.58e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0389 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.42667e+08 mwork 135707 (use mask) (nthreads 40 fine: 162) 
   0.319 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00392 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00268 sec ]
 [ GrB_Matrix_nvals 
   3.86e-07 sec ]
 [ GrB_Matrix_nvals 
   2.58e-07 sec ]
 [ GxB_set 
   4.41e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.4785e+06 mwork 4221 (use mask) (nthreads 40 fine hash: 70) 
   0.0342 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00151 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000494 sec ]
 [ GrB_Matrix_nvals 
   3.76e-07 sec ]
 [ GrB_Matrix_nvals 
   1.86e-07 sec ]
 [ GxB_set 
   4.65e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 139945 mwork 131 (use mask) (intensity: 3.26e-05 workspace/(nnz(A)+nnz(B)): 0.125) (nthreads 2 coarse hash: 3) 
   0.00209 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00133 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.02 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.18 sec ]
BC time 40:      31.0660 (sec)

Trial 10 : sources: [ 126525082 6382740 89108297 9239735 ]
 [ GxB_set (sparse to bitmap) 
   0.0591 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 143 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.45e-05 sec ]
 [ GrB_Matrix_nvals 
   5.7e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   4.08e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.25e-05 sec ]
 [ GxB_set 
   6.08e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4712 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000408 sec ]
 [ GrB_Matrix_nvals 
   1.97e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000263 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00025 sec ]
 [ GxB_set 
   3.76e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 150662 (use dense mask in-place) (nthreads 2 coarse hash: 3) 
   0.00722 sec ]
 [ GrB_Matrix_nvals 
   1.96e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00538 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00321 sec ]
 [ GxB_set 
   2.11e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.81955e+06 (use dense mask in-place) (nthreads 40 fine hash: 75) 
   0.0575 sec ]
 [ GrB_Matrix_nvals 
   4.37e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.194 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0249 sec ]
 [ GxB_set 
   1.18e-06 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.53488e+08 (use dense mask) (nthreads 40 fine: 137) 
   0.919 sec ]
 [ GrB_Matrix_nvals 
   4.12e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.105 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.108 sec ]
 [ GxB_set (sparse to bitmap) 
   0.117 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.8 sec ]
 [ GrB_Matrix_nvals 
   7.14e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0922 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.128 sec ]
 [ GxB_set 
   6.28e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.0872 sec ]
 [ GrB_Matrix_nvals 
   4.3e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0748 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0217 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0318 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 6.95176e+06 (use dense mask in-place) (nthreads 40 fine hash: 108) 
   0.0474 sec ]
 [ GrB_Matrix_nvals 
   7.8e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0754 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00276 sec ]
 [ GrB_Matrix_nvals 
   2.87e-07 sec ]
 [ GrB_Matrix_nvals 
   3.23e-07 sec ]
 [ GxB_set 
   5.74e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 6.95176e+06 (use dense mask in-place) (nthreads 40 fine hash: 108) 
   0.0719 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.424 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.442 sec ]
 [ GrB_Matrix_nvals 
   5.49e-07 sec ]
 [ GrB_Matrix_nvals 
   2.37e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.166 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   9.01 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.336 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.23 sec ]
 [ GrB_Matrix_nvals 
   5.94e-07 sec ]
 [ GrB_Matrix_nvals 
   3.6e-07 sec ]
 [ GxB_set 
   4.14e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.356 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.151 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0571 sec ]
 [ GrB_Matrix_nvals 
   5.17e-07 sec ]
 [ GrB_Matrix_nvals 
   4.38e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0395 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.53488e+08 mwork 146073 (use mask) (nthreads 40 fine: 162) 
   0.334 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00413 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00305 sec ]
 [ GrB_Matrix_nvals 
   3.77e-07 sec ]
 [ GrB_Matrix_nvals 
   1.74e-07 sec ]
 [ GxB_set 
   4.25e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.81955e+06 mwork 4569 (use mask) (nthreads 40 fine hash: 75) 
   0.0332 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0019 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000535 sec ]
 [ GrB_Matrix_nvals 
   3.75e-07 sec ]
 [ GrB_Matrix_nvals 
   1.75e-07 sec ]
 [ GxB_set 
   3.82e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 150662 mwork 143 (use mask) (intensity: 3.51e-05 workspace/(nnz(A)+nnz(B)): 0.125) (nthreads 2 coarse hash: 3) 
   0.00233 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00261 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.018 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.212 sec ]
BC time 40:      31.9954 (sec)

Trial 11 : sources: [ 110168548 95370259 116653530 123410703 ]
 [ GxB_set (sparse to bitmap) 
   0.0609 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 128 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.54e-05 sec ]
 [ GrB_Matrix_nvals 
   6.9e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.62e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.12e-05 sec ]
 [ GxB_set 
   5.74e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4290 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000478 sec ]
 [ GrB_Matrix_nvals 
   1.56e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00019 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000231 sec ]
 [ GxB_set 
   2.08e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 137235 (use dense mask in-place) (nthreads 2 coarse hash: 3) 
   0.00664 sec ]
 [ GrB_Matrix_nvals 
   1.16e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00581 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00462 sec ]
 [ GxB_set 
   1.77e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.38684e+06 (use dense mask in-place) (nthreads 40 fine hash: 69) 
   0.052 sec ]
 [ GrB_Matrix_nvals 
   7.05e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.213 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.022 sec ]
 [ GxB_set 
   7.23e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.39746e+08 (use dense mask) (nthreads 40 fine: 136) 
   0.857 sec ]
 [ GrB_Matrix_nvals 
   4.41e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.101 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.106 sec ]
 [ GxB_set (sparse to bitmap) 
   0.116 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.8 sec ]
 [ GrB_Matrix_nvals 
   4.59e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.086 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.127 sec ]
 [ GxB_set 
   6.98e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.103 sec ]
 [ GrB_Matrix_nvals 
   4e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0777 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.023 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0321 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.34044e+07 (use dense mask in-place) (nthreads 40 fine hash: 162) 
   0.075 sec ]
 [ GrB_Matrix_nvals 
   4.25e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0742 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00409 sec ]
 [ GrB_Matrix_nvals 
   4.29e-07 sec ]
 [ GrB_Matrix_nvals 
   1.57e-07 sec ]
 [ GxB_set 
   5.79e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.34044e+07 (use dense mask in-place) (nthreads 40 fine hash: 162) 
   0.131 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.866 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.442 sec ]
 [ GrB_Matrix_nvals 
   6.77e-07 sec ]
 [ GrB_Matrix_nvals 
   1.73e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.166 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   8.31 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.334 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.227 sec ]
 [ GrB_Matrix_nvals 
   4.55e-07 sec ]
 [ GrB_Matrix_nvals 
   2e-07 sec ]
 [ GxB_set 
   3.81e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.324 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.144 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.053 sec ]
 [ GrB_Matrix_nvals 
   3.34e-07 sec ]
 [ GrB_Matrix_nvals 
   2.4e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0376 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.39746e+08 mwork 133053 (use mask) (nthreads 40 fine: 162) 
   0.316 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00397 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00302 sec ]
 [ GrB_Matrix_nvals 
   3.77e-07 sec ]
 [ GrB_Matrix_nvals 
   1.13e-07 sec ]
 [ GxB_set 
   4.55e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.38684e+06 mwork 4162 (use mask) (nthreads 40 fine hash: 69) 
   0.0301 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00154 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000517 sec ]
 [ GrB_Matrix_nvals 
   3.6e-07 sec ]
 [ GrB_Matrix_nvals 
   1.43e-07 sec ]
 [ GxB_set 
   3.91e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 137235 mwork 128 (use mask) (intensity: 3.2e-05 workspace/(nnz(A)+nnz(B)): 0.125) (nthreads 2 coarse hash: 3) 
   0.00205 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00303 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0181 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.214 sec ]
BC time 40:      31.7113 (sec)

Trial 12 : sources: [ 16733665 49030282 108545121 99095665 ]
 [ GxB_set (sparse to bitmap) 
   0.0612 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 141 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.78e-05 sec ]
 [ GrB_Matrix_nvals 
   9.29e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.56e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.38e-05 sec ]
 [ GxB_set 
   6.81e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4643 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000393 sec ]
 [ GrB_Matrix_nvals 
   1.13e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000208 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000253 sec ]
 [ GxB_set 
   2.08e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 148354 (use dense mask in-place) (nthreads 2 coarse hash: 4) 
   0.00799 sec ]
 [ GrB_Matrix_nvals 
   1.4e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00663 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00326 sec ]
 [ GxB_set 
   2.84e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.74363e+06 (use dense mask in-place) (nthreads 40 fine hash: 75) 
   0.0552 sec ]
 [ GrB_Matrix_nvals 
   2.75e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.144 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0242 sec ]
 [ GxB_set 
   9.51e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.5107e+08 (use dense mask) (nthreads 40 fine: 136) 
   0.914 sec ]
 [ GrB_Matrix_nvals 
   4.14e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0992 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.108 sec ]
 [ GxB_set (sparse to bitmap) 
   0.118 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.8 sec ]
 [ GrB_Matrix_nvals 
   4.44e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0867 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.127 sec ]
 [ GxB_set 
   6.17e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.0863 sec ]
 [ GrB_Matrix_nvals 
   2.58e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0752 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0216 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0311 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 6.19354e+06 (use dense mask in-place) (nthreads 40 fine hash: 97) 
   0.0437 sec ]
 [ GrB_Matrix_nvals 
   7.59e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0751 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00263 sec ]
 [ GrB_Matrix_nvals 
   2.98e-07 sec ]
 [ GrB_Matrix_nvals 
   2.29e-07 sec ]
 [ GxB_set 
   6.17e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 6.19354e+06 (use dense mask in-place) (nthreads 40 fine hash: 97) 
   0.0684 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.351 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.439 sec ]
 [ GrB_Matrix_nvals 
   5.08e-07 sec ]
 [ GrB_Matrix_nvals 
   3.92e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.165 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   8.87 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.336 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.226 sec ]
 [ GrB_Matrix_nvals 
   4.26e-07 sec ]
 [ GrB_Matrix_nvals 
   1.37e-07 sec ]
 [ GxB_set 
   4.29e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.347 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.147 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0553 sec ]
 [ GrB_Matrix_nvals 
   3.54e-07 sec ]
 [ GrB_Matrix_nvals 
   3.65e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0393 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.5107e+08 mwork 143828 (use mask) (nthreads 40 fine: 162) 
   0.318 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00407 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00333 sec ]
 [ GrB_Matrix_nvals 
   3.91e-07 sec ]
 [ GrB_Matrix_nvals 
   3.04e-07 sec ]
 [ GxB_set 
   6.96e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.74363e+06 mwork 4502 (use mask) (nthreads 40 fine hash: 75) 
   0.0338 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00155 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000515 sec ]
 [ GrB_Matrix_nvals 
   3.65e-07 sec ]
 [ GrB_Matrix_nvals 
   1.45e-07 sec ]
 [ GxB_set 
   3.88e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 148354 mwork 141 (use mask) (intensity: 3.46e-05 workspace/(nnz(A)+nnz(B)): 0.125) (nthreads 2 coarse hash: 4) 
   0.00234 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00444 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0179 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.209 sec ]
BC time 40:      31.6419 (sec)

Trial 13 : sources: [ 133850077 63499301 21541382 6230751 ]
 [ GxB_set (sparse to bitmap) 
   0.0609 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 146 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.67e-05 sec ]
 [ GrB_Matrix_nvals 
   9.3e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.65e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.27e-05 sec ]
 [ GxB_set 
   4.79e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4932 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000403 sec ]
 [ GrB_Matrix_nvals 
   1.14e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000218 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000259 sec ]
 [ GxB_set 
   1.71e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 158392 (use dense mask in-place) (nthreads 2 coarse hash: 4) 
   0.00732 sec ]
 [ GrB_Matrix_nvals 
   1.29e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00688 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00324 sec ]
 [ GxB_set 
   2.41e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 5.06987e+06 (use dense mask in-place) (nthreads 40 fine hash: 80) 
   0.0603 sec ]
 [ GrB_Matrix_nvals 
   4.22e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.148 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0234 sec ]
 [ GxB_set 
   6.25e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.61439e+08 (use dense mask) (nthreads 40 fine: 136) 
   0.967 sec ]
 [ GrB_Matrix_nvals 
   4.23e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.108 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.109 sec ]
 [ GxB_set (sparse to bitmap) 
   0.118 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.6 sec ]
 [ GrB_Matrix_nvals 
   4.82e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0905 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.128 sec ]
 [ GxB_set 
   1e-06 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.08 sec ]
 [ GrB_Matrix_nvals 
   8.32e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0751 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0206 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0317 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.28622e+06 (use dense mask in-place) (nthreads 40 fine hash: 53) 
   0.0298 sec ]
 [ GrB_Matrix_nvals 
   6.44e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0745 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00187 sec ]
 [ GrB_Matrix_nvals 
   2.28e-07 sec ]
 [ GrB_Matrix_nvals 
   1.48e-07 sec ]
 [ GxB_set 
   7.02e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 3.28622e+06 (use dense mask in-place) (nthreads 40 fine hash: 53) 
   0.0409 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.136 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.436 sec ]
 [ GrB_Matrix_nvals 
   5.43e-07 sec ]
 [ GrB_Matrix_nvals 
   2.09e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.164 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   9.36 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.339 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.227 sec ]
 [ GrB_Matrix_nvals 
   8.02e-07 sec ]
 [ GrB_Matrix_nvals 
   2.28e-07 sec ]
 [ GxB_set 
   3.8e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.373 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.151 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0605 sec ]
 [ GrB_Matrix_nvals 
   3.32e-07 sec ]
 [ GrB_Matrix_nvals 
   2.25e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0399 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.61439e+08 mwork 153585 (use mask) (nthreads 40 fine: 162) 
   0.354 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00424 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00172 sec ]
 [ GrB_Matrix_nvals 
   3.69e-07 sec ]
 [ GrB_Matrix_nvals 
   2.28e-07 sec ]
 [ GxB_set 
   3.85e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 5.06987e+06 mwork 4786 (use mask) (nthreads 40 fine hash: 80) 
   0.0349 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00158 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000492 sec ]
 [ GrB_Matrix_nvals 
   3.98e-07 sec ]
 [ GrB_Matrix_nvals 
   1.19e-07 sec ]
 [ GxB_set 
   4.18e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 158392 mwork 146 (use mask) (intensity: 3.69e-05 workspace/(nnz(A)+nnz(B)): 0.125) (nthreads 2 coarse hash: 4) 
   0.00255 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0032 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0188 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.182 sec ]
BC time 40:      31.8308 (sec)

Trial 14 : sources: [ 89077456 70392765 6670455 61746271 ]
 [ GxB_set (sparse to bitmap) 
   0.0609 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 131 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.42e-05 sec ]
 [ GrB_Matrix_nvals 
   1.3e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.57e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.23e-05 sec ]
 [ GxB_set 
   6.13e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4317 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000368 sec ]
 [ GrB_Matrix_nvals 
   1.16e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000193 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000231 sec ]
 [ GxB_set 
   2.91e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 138433 (use dense mask in-place) (nthreads 2 coarse hash: 3) 
   0.00821 sec ]
 [ GrB_Matrix_nvals 
   1.07e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00584 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00381 sec ]
 [ GxB_set 
   2.51e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.43068e+06 (use dense mask in-place) (nthreads 40 fine hash: 71) 
   0.0529 sec ]
 [ GrB_Matrix_nvals 
   4.38e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.137 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0225 sec ]
 [ GxB_set 
   7.98e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.41161e+08 (use dense mask) (nthreads 40 fine: 136) 
   0.875 sec ]
 [ GrB_Matrix_nvals 
   4.37e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0961 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.106 sec ]
 [ GxB_set (sparse to bitmap) 
   0.116 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.7 sec ]
 [ GrB_Matrix_nvals 
   5.23e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0869 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.127 sec ]
 [ GxB_set 
   7.53e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.0963 sec ]
 [ GrB_Matrix_nvals 
   4.1e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0735 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0224 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0311 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.08159e+07 (use dense mask in-place) (nthreads 40 fine hash: 162) 
   0.0753 sec ]
 [ GrB_Matrix_nvals 
   4.83e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0745 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.0036 sec ]
 [ GrB_Matrix_nvals 
   2.82e-07 sec ]
 [ GrB_Matrix_nvals 
   4.94e-07 sec ]
 [ GxB_set 
   6.85e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.08159e+07 (use dense mask in-place) (nthreads 40 fine hash: 162) 
   0.121 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.673 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.439 sec ]
 [ GrB_Matrix_nvals 
   5.1e-07 sec ]
 [ GrB_Matrix_nvals 
   1.82e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.167 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   8.42 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.336 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.226 sec ]
 [ GrB_Matrix_nvals 
   4.55e-07 sec ]
 [ GrB_Matrix_nvals 
   2.05e-07 sec ]
 [ GxB_set 
   5.19e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.327 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.145 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0523 sec ]
 [ GrB_Matrix_nvals 
   6.5e-07 sec ]
 [ GrB_Matrix_nvals 
   3.65e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0385 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.41161e+08 mwork 134222 (use mask) (nthreads 40 fine: 163) 
   0.31 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00394 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00314 sec ]
 [ GrB_Matrix_nvals 
   3.83e-07 sec ]
 [ GrB_Matrix_nvals 
   9.9e-08 sec ]
 [ GxB_set 
   4.82e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.43068e+06 mwork 4186 (use mask) (nthreads 40 fine hash: 71) 
   0.0338 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00149 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000494 sec ]
 [ GrB_Matrix_nvals 
   3.62e-07 sec ]
 [ GrB_Matrix_nvals 
   1.08e-07 sec ]
 [ GxB_set 
   4.26e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 138433 mwork 131 (use mask) (intensity: 3.23e-05 workspace/(nnz(A)+nnz(B)): 0.125) (nthreads 2 coarse hash: 3) 
   0.00268 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00285 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0177 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.213 sec ]
BC time 40:      31.4114 (sec)

Trial 15 : sources: [ 83349535 115272184 20129908 106148553 ]
 [ GxB_set (sparse to bitmap) 
   0.0616 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 121 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.44e-05 sec ]
 [ GrB_Matrix_nvals 
   6.8e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.76e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.15e-05 sec ]
 [ GxB_set 
   6.49e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4031 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000339 sec ]
 [ GrB_Matrix_nvals 
   7.4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000176 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00022 sec ]
 [ GxB_set 
   2.64e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 128663 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00931 sec ]
 [ GrB_Matrix_nvals 
   6.68e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00785 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00392 sec ]
 [ GxB_set 
   1.83e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.11347e+06 (use dense mask in-place) (nthreads 40 fine hash: 65) 
   0.0438 sec ]
 [ GrB_Matrix_nvals 
   2.25e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.124 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0208 sec ]
 [ GxB_set 
   5.96e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.31089e+08 (use dense mask) (nthreads 40 fine: 135) 
   0.812 sec ]
 [ GrB_Matrix_nvals 
   4.18e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.11 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.107 sec ]
 [ GxB_set (sparse to bitmap) 
   0.12 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.8 sec ]
 [ GrB_Matrix_nvals 
   4.54e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0852 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.128 sec ]
 [ GxB_set 
   9.52e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.107 sec ]
 [ GrB_Matrix_nvals 
   4.53e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0755 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0231 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0321 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.52552e+07 (use dense mask in-place) (nthreads 40 fine hash: 163) 
   0.0948 sec ]
 [ GrB_Matrix_nvals 
   4.54e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0743 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.0056 sec ]
 [ GrB_Matrix_nvals 
   2.54e-07 sec ]
 [ GrB_Matrix_nvals 
   2.12e-07 sec ]
 [ GxB_set 
   5.89e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.52552e+07 (use dense mask in-place) (nthreads 40 fine hash: 163) 
   0.156 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.845 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.452 sec ]
 [ GrB_Matrix_nvals 
   5.18e-07 sec ]
 [ GrB_Matrix_nvals 
   1.71e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.168 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   7.9 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.338 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.227 sec ]
 [ GrB_Matrix_nvals 
   5.16e-07 sec ]
 [ GrB_Matrix_nvals 
   2.22e-07 sec ]
 [ GxB_set 
   4.62e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.306 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.143 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0491 sec ]
 [ GrB_Matrix_nvals 
   2.41e-07 sec ]
 [ GrB_Matrix_nvals 
   3.87e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0372 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.31089e+08 mwork 124735 (use mask) (nthreads 40 fine: 162) 
   0.292 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00519 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000858 sec ]
 [ GrB_Matrix_nvals 
   5.59e-07 sec ]
 [ GrB_Matrix_nvals 
   1.5e-07 sec ]
 [ GxB_set 
   4.15e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.11347e+06 mwork 3910 (use mask) (nthreads 40 fine hash: 65) 
   0.0267 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00147 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000557 sec ]
 [ GrB_Matrix_nvals 
   3.75e-07 sec ]
 [ GrB_Matrix_nvals 
   2.69e-07 sec ]
 [ GxB_set 
   4.37e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 128663 mwork 121 (use mask) (intensity: 3e-05 workspace/(nnz(A)+nnz(B)): 0.0312) (nthreads 1 coarse hash: 1) 
   0.00279 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00063 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0178 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.209 sec ]
BC time 40:      31.1592 (sec)

Trial 16 : sources: [ 117042375 71431187 45287808 107702120 ]
 [ GxB_set (sparse to bitmap) 
   0.0616 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 120 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.48e-05 sec ]
 [ GrB_Matrix_nvals 
   8.36e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.61e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.07e-05 sec ]
 [ GxB_set 
   4.24e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3970 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000339 sec ]
 [ GrB_Matrix_nvals 
   1.07e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000176 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000219 sec ]
 [ GxB_set 
   2.33e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 127273 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.0093 sec ]
 [ GrB_Matrix_nvals 
   1.08e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00768 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00391 sec ]
 [ GxB_set 
   2.74e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.07308e+06 (use dense mask in-place) (nthreads 40 fine hash: 64) 
   0.0467 sec ]
 [ GrB_Matrix_nvals 
   2.58e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.1 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0197 sec ]
 [ GxB_set 
   5.76e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.29799e+08 (use dense mask) (nthreads 40 fine: 135) 
   0.804 sec ]
 [ GrB_Matrix_nvals 
   4.24e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0983 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.104 sec ]
 [ GxB_set (sparse to bitmap) 
   0.114 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   17.8 sec ]
 [ GrB_Matrix_nvals 
   4.67e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0875 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.127 sec ]
 [ GxB_set 
   7.3e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.113 sec ]
 [ GrB_Matrix_nvals 
   4.45e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0749 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.024 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0326 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.77243e+07 (use dense mask in-place) (nthreads 40 fine hash: 162) 
   0.122 sec ]
 [ GrB_Matrix_nvals 
   5.22e-07 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0745 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.00504 sec ]
 [ GrB_Matrix_nvals 
   4.32e-07 sec ]
 [ GrB_Matrix_nvals 
   5.05e-07 sec ]
 [ GxB_set 
   7.63e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.77243e+07 (use dense mask in-place) (nthreads 40 fine hash: 162) 
   0.196 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   1.09 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) (bitmap to sparse) 
   0.445 sec ]
 [ GrB_Matrix_nvals 
   8.22e-07 sec ]
 [ GrB_Matrix_nvals 
   1.48e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.168 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   7.84 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.333 sec ]
 [ GrB_eWiseMult add:(B<B>=F+B) 
   0.225 sec ]
 [ GrB_Matrix_nvals 
   4.59e-07 sec ]
 [ GrB_Matrix_nvals 
   6.45e-07 sec ]
 [ GxB_set 
   4.01e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.303 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.137 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) (sparse to bitmap) 
   0.0489 sec ]
 [ GrB_Matrix_nvals 
   5.17e-07 sec ]
 [ GrB_Matrix_nvals 
   3.68e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0379 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.29799e+08 mwork 123403 (use mask) (nthreads 40 fine: 162) 
   0.29 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.005 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000825 sec ]
 [ GrB_Matrix_nvals 
   3.69e-07 sec ]
 [ GrB_Matrix_nvals 
   1.9e-07 sec ]
 [ GxB_set 
   4.09e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.07308e+06 mwork 3850 (use mask) (nthreads 40 fine hash: 64) 
   0.0284 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00143 sec ]
 [ GrB_eWiseMult add:(S<S>=F+B) 
   0.000551 sec ]
 [ GrB_Matrix_nvals 
   3.4e-07 sec ]
 [ GrB_Matrix_nvals 
   1.19e-07 sec ]
 [ GxB_set 
   4.83e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 127273 mwork 120 (use mask) (intensity: 2.97e-05 workspace/(nnz(A)+nnz(B)): 0.0312) (nthreads 1 coarse hash: 1) 
   0.00262 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000652 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0181 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.209 sec ]
BC time 40:      31.3167 (sec)

ntrials: 16

Ave BC 40:     31.659 sec, rate    135.662
SuiteSparse:GraphBLAS v4.0.3 [Jan 19, 2021]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
 [ GxB_Matrix_import_CSR 
   1.95e-05 sec ]
 [ GxB_set 
   0.0138 sec ]
sources: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter_sources.mtx
    GraphBLAS type: type double size: 8
 [ *_setElement (wait: 0 zombies, 64 pending) 
   0.000115 sec ]
 [ GrB_apply (shallow-op) 
   0.552 sec ]
 [ GrB_transpose (transpose) 
   11.8 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*S) 
   2.78 sec ]
 [ GrB_Matrix_nvals 
   1.17e-06 sec ]
 [ GrB_Matrix_nvals 
   3.78e-07 sec ]
read time: 33.6035
 [ GrB_Matrix_nvals 
   8.01e-08 sec ]
Graph: kind: directed, nodes: 61578415 entries: 1468364884 type: bool
    pattern symmetry: unsymmetric
 [ GrB_Matrix_nvals 
   4.44e-07 sec ]

Trial 1 : sources: [ 12441072 54488257 25451915 57714473 ]
 [ GxB_set (sparse to bitmap) 
   0.0274 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 63 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00013 sec ]
 [ GrB_Matrix_nvals 
   2.98e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.72e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.98e-05 sec ]
 [ GxB_set 
   1.59e-06 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 42973 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00255 sec ]
 [ GrB_Matrix_nvals 
   6.59e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00143 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00107 sec ]
 [ GxB_set 
   2.12e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 6.3334e+07 (use dense mask) (nthreads 40 fine: 136) 
   0.182 sec ]
 [ GrB_Matrix_nvals 
   2.59e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.00316 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0169 sec ]
 [ GxB_set 
   5.57e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.85224e+09 (use dense mask) (nthreads 40 fine: 157) 
   2.74 sec ]
 [ GrB_Matrix_nvals 
   4.17e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0658 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0508 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0594 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.846 sec ]
 [ GrB_Matrix_nvals 
   3.6e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0496 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.056 sec ]
 [ GxB_set 
   4.98e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.132 sec ]
 [ GrB_Matrix_nvals 
   4.64e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0293 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0344 sec ]
 [ GxB_set (bitmap to sparse) 
   0.024 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 5.66012e+07 (use dense mask) (nthreads 40 fine: 134) 
   0.267 sec ]
 [ GrB_Matrix_nvals 
   4.48e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.000322 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00464 sec ]
 [ GxB_set 
   6.95e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 5.39998e+06 (use dense mask in-place) (nthreads 40 fine hash: 84) 
   0.0438 sec ]
 [ GrB_Matrix_nvals 
   4.68e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00752 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00326 sec ]
 [ GxB_set 
   2.77e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 448803 (use dense mask in-place) (nthreads 6 coarse hash: 3 fine hash: 4) 
   0.0225 sec ]
 [ GrB_Matrix_nvals 
   4.15e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000603 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000749 sec ]
 [ GxB_set 
   2.7e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 42198 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00289 sec ]
 [ GrB_Matrix_nvals 
   1.46e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   6.61e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   5.33e-05 sec ]
 [ GxB_set 
   2.33e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4865 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000409 sec ]
 [ GrB_Matrix_nvals 
   7.89e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.69e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.59e-05 sec ]
 [ GxB_set 
   1.52e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1451 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000103 sec ]
 [ GrB_Matrix_nvals 
   6.71e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.32e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.02e-05 sec ]
 [ GxB_set 
   1.7e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1186 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.37e-05 sec ]
 [ GrB_Matrix_nvals 
   7.5e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.18e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.07e-06 sec ]
 [ GxB_set 
   1.35e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 558 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   5.34e-05 sec ]
 [ GrB_Matrix_nvals 
   5.89e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.14e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.92e-06 sec ]
 [ GxB_set 
   1.08e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 296 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.99e-05 sec ]
 [ GrB_Matrix_nvals 
   5.4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.07e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.36e-06 sec ]
 [ GxB_set 
   1.33e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 14 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.02e-05 sec ]
 [ GrB_Matrix_nvals 
   9.8e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0376 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000529 sec ]
 [ GrB_Matrix_nvals 
   4e-07 sec ]
 [ GrB_Matrix_nvals 
   1.22e-07 sec ]
 [ GxB_set 
   6.25e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 2 mwork 4 (use mask) (intensity: 4.09e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.25e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000503 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000456 sec ]
 [ GrB_Matrix_nvals 
   1.95e-07 sec ]
 [ GrB_Matrix_nvals 
   1.52e-07 sec ]
 [ GxB_set 
   2.65e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 8 mwork 16 (use mask) (intensity: 1.63e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.67e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000429 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00045 sec ]
 [ GrB_Matrix_nvals 
   1.49e-07 sec ]
 [ GrB_Matrix_nvals 
   1.36e-07 sec ]
 [ GxB_set 
   2.53e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 18 mwork 50 (use mask) (intensity: 4.63e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.48e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000475 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000459 sec ]
 [ GrB_Matrix_nvals 
   8.31e-08 sec ]
 [ GrB_Matrix_nvals 
   1.21e-07 sec ]
 [ GxB_set 
   2.2e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 106 mwork 181 (use mask) (intensity: 1.95e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.69e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000534 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000487 sec ]
 [ GrB_Matrix_nvals 
   9.2e-08 sec ]
 [ GrB_Matrix_nvals 
   5.29e-08 sec ]
 [ GxB_set 
   2.5e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 280 mwork 1244 (use mask) (intensity: 1.04e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000109 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000622 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000505 sec ]
 [ GrB_Matrix_nvals 
   1.37e-07 sec ]
 [ GrB_Matrix_nvals 
   5.29e-08 sec ]
 [ GxB_set 
   2.24e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1628 mwork 10731 (use mask) (intensity: 8.42e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000677 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000866 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000737 sec ]
 [ GrB_Matrix_nvals 
   1.66e-07 sec ]
 [ GrB_Matrix_nvals 
   1.28e-07 sec ]
 [ GxB_set 
   2.67e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 14342 mwork 101936 (use mask) (intensity: 7.92e-05 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.00751 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00168 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0024 sec ]
 [ GrB_Matrix_nvals 
   1.8e-07 sec ]
 [ GrB_Matrix_nvals 
   1.3e-07 sec ]
 [ GxB_set 
   2.39e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 137251 mwork 1.01131e+06 (use mask) (nthreads 17 coarse hash: 2 fine hash: 16) 
   0.0174 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00827 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00835 sec ]
 [ GrB_Matrix_nvals 
   3.37e-07 sec ]
 [ GrB_Matrix_nvals 
   2.17e-07 sec ]
 [ GxB_set 
   3.52e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.36606e+06 (use dense mask in-place) (nthreads 20 coarse hash: 2 fine hash: 19) 
   0.0657 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0471 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.178 sec ]
 [ GrB_Matrix_nvals 
   4.27e-07 sec ]
 [ GrB_Matrix_nvals 
   1.61e-07 sec ]
 [ GxB_set 
   1.78e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.85498e+07 (use dense mask in-place) (nthreads 40 fine hash: 162) 
   0.214 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.405 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.268 sec ]
 [ GrB_Matrix_nvals 
   5.74e-07 sec ]
 [ GrB_Matrix_nvals 
   1.62e-07 sec ]
 [ GxB_set 
   2.17e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 4.61658e+08 (use dense mask) (nthreads 40 fine: 149) 
   1.27 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0757 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.289 sec ]
 [ GrB_Matrix_nvals 
   4.92e-07 sec ]
 [ GrB_Matrix_nvals 
   2.03e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0525 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   1.33 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0873 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0655 sec ]
 [ GrB_Matrix_nvals 
   7.22e-07 sec ]
 [ GrB_Matrix_nvals 
   2.17e-07 sec ]
 [ GxB_set 
   5.08e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 871 (sparse to bitmap) 
   0.0579 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0528 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0228 sec ]
 [ GrB_Matrix_nvals 
   6.66e-07 sec ]
 [ GrB_Matrix_nvals 
   2.14e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0163 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.78794e+07 mwork 63 (use mask) (nthreads 40 coarse hash: 2 fine: 161) 
   0.0307 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000877 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.00742 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.103 sec ]
BC time 40:       9.4799 (sec)

Trial 2 : sources: [ 14839494 32081104 52957357 50444380 ]
 [ GxB_set (sparse to bitmap) 
   0.028 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 29 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.4e-05 sec ]
 [ GrB_Matrix_nvals 
   6.93e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.52e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.87e-05 sec ]
 [ GxB_set 
   4.66e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.88705e+06 (use dense mask in-place) (nthreads 28 coarse hash: 1 fine hash: 29) 
   0.0747 sec ]
 [ GrB_Matrix_nvals 
   2.52e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.174 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00651 sec ]
 [ GxB_set 
   7.11e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.52886e+08 (use dense mask) (nthreads 40 fine: 146) 
   0.775 sec ]
 [ GrB_Matrix_nvals 
   6.28e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0244 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0212 sec ]
 [ GxB_set 
   6.08e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.02979e+09 (use dense mask) (nthreads 40 fine: 157) 
   2.9 sec ]
 [ GrB_Matrix_nvals 
   4.69e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0488 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0474 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0512 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.589 sec ]
 [ GrB_Matrix_nvals 
   7.34e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.046 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0509 sec ]
 [ GxB_set 
   7.65e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.111 sec ]
 [ GrB_Matrix_nvals 
   1.38e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0442 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0316 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0235 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.9085e+07 (use dense mask) (nthreads 40 fine: 133) 
   0.249 sec ]
 [ GrB_Matrix_nvals 
   4.47e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.000283 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00325 sec ]
 [ GxB_set 
   4.82e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.8725e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 60) 
   0.0397 sec ]
 [ GrB_Matrix_nvals 
   4.23e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0053 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00234 sec ]
 [ GxB_set 
   2.72e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 317443 (use dense mask in-place) (nthreads 4 coarse hash: 3) 
   0.0117 sec ]
 [ GrB_Matrix_nvals 
   2.56e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000392 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00048 sec ]
 [ GxB_set 
   2.76e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 29668 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00196 sec ]
 [ GrB_Matrix_nvals 
   8.2e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   4.36e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.56e-05 sec ]
 [ GxB_set 
   2.16e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4100 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000302 sec ]
 [ GrB_Matrix_nvals 
   7.68e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.43e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.24e-05 sec ]
 [ GxB_set 
   1.52e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1021 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.59e-05 sec ]
 [ GrB_Matrix_nvals 
   7.8e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.19e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.57e-06 sec ]
 [ GxB_set 
   1.23e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1152 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.52e-05 sec ]
 [ GrB_Matrix_nvals 
   9.01e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.13e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.9e-06 sec ]
 [ GxB_set 
   1.2e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 424 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.5e-05 sec ]
 [ GrB_Matrix_nvals 
   6.89e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.09e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.14e-06 sec ]
 [ GxB_set 
   1.27e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 289 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.76e-05 sec ]
 [ GrB_Matrix_nvals 
   5.01e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.01e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   7.89e-06 sec ]
 [ GxB_set 
   1.42e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 14 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.11e-05 sec ]
 [ GrB_Matrix_nvals 
   5.68e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0375 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000496 sec ]
 [ GrB_Matrix_nvals 
   6.4e-07 sec ]
 [ GrB_Matrix_nvals 
   6.89e-08 sec ]
 [ GxB_set 
   5.68e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 2 mwork 4 (use mask) (intensity: 4.09e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.22e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000447 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000457 sec ]
 [ GrB_Matrix_nvals 
   1.6e-07 sec ]
 [ GrB_Matrix_nvals 
   5.49e-08 sec ]
 [ GxB_set 
   2.21e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 7 mwork 14 (use mask) (intensity: 1.43e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.47e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000416 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000462 sec ]
 [ GrB_Matrix_nvals 
   1.05e-07 sec ]
 [ GrB_Matrix_nvals 
   1.39e-07 sec ]
 [ GxB_set 
   2.21e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 16 mwork 39 (use mask) (intensity: 3.75e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.6e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000489 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000469 sec ]
 [ GrB_Matrix_nvals 
   1.44e-07 sec ]
 [ GrB_Matrix_nvals 
   1.38e-07 sec ]
 [ GxB_set 
   2.49e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 94 mwork 137 (use mask) (intensity: 1.57e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.63e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000489 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000467 sec ]
 [ GrB_Matrix_nvals 
   1.7e-07 sec ]
 [ GrB_Matrix_nvals 
   1.33e-07 sec ]
 [ GxB_set 
   2.28e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 201 mwork 895 (use mask) (intensity: 7.46e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   9.33e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0006 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000506 sec ]
 [ GrB_Matrix_nvals 
   9.8e-08 sec ]
 [ GrB_Matrix_nvals 
   1.38e-07 sec ]
 [ GxB_set 
   2.45e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1175 mwork 7620 (use mask) (intensity: 5.99e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000422 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000818 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000658 sec ]
 [ GrB_Matrix_nvals 
   1.76e-07 sec ]
 [ GrB_Matrix_nvals 
   6.59e-08 sec ]
 [ GxB_set 
   2.23e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 10320 mwork 72951 (use mask) (intensity: 5.67e-05 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.00554 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00156 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00189 sec ]
 [ GrB_Matrix_nvals 
   1.96e-07 sec ]
 [ GrB_Matrix_nvals 
   1.37e-07 sec ]
 [ GxB_set 
   2.36e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 98739 mwork 700305 (use mask) (nthreads 12 coarse hash: 1 fine hash: 11) 
   0.018 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00771 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00684 sec ]
 [ GrB_Matrix_nvals 
   3.41e-07 sec ]
 [ GrB_Matrix_nvals 
   9.99e-08 sec ]
 [ GxB_set 
   2.34e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 940191 mwork 7.03048e+06 (use mask) (nthreads 40 coarse hash: 1 fine: 99 fine hash: 21) 
   0.0603 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0123 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0351 sec ]
 [ GrB_Matrix_nvals 
   4.04e-07 sec ]
 [ GrB_Matrix_nvals 
   2.2e-07 sec ]
 [ GxB_set 
   4.43e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.16227e+07 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 159) 
   0.207 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.248 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.237 sec ]
 [ GrB_Matrix_nvals 
   7.84e-07 sec ]
 [ GrB_Matrix_nvals 
   1.65e-07 sec ]
 [ GxB_set 
   2.85e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 2.8672e+08 (use dense mask) (nthreads 40 fine: 146) 
   0.893 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0708 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.273 sec ]
 [ GrB_Matrix_nvals 
   5.2e-07 sec ]
 [ GrB_Matrix_nvals 
   1.41e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0511 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   1.91 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0916 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.163 sec ]
 [ GrB_Matrix_nvals 
   5.6e-07 sec ]
 [ GrB_Matrix_nvals 
   4.33e-07 sec ]
 [ GxB_set 
   4.31e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1278 (sparse to bitmap) 
   0.392 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0657 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0359 sec ]
 [ GrB_Matrix_nvals 
   4.87e-07 sec ]
 [ GrB_Matrix_nvals 
   1.9e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.017 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.23295e+08 mwork 29 (use mask) (nthreads 40 coarse hash: 1 fine: 160) 
   1.96 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000608 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.00768 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.099 sec ]
BC time 40:      12.3406 (sec)

Trial 3 : sources: [ 49590701 20127816 34939333 48251001 ]
 [ GxB_set (sparse to bitmap) 
   0.0276 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 51 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.41e-05 sec ]
 [ GrB_Matrix_nvals 
   5.78e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.5e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.18e-05 sec ]
 [ GxB_set 
   7.19e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 55133 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00309 sec ]
 [ GrB_Matrix_nvals 
   8.89e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00193 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00112 sec ]
 [ GxB_set 
   2.61e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.5757e+08 (use dense mask) (nthreads 40 fine: 141) 
   0.306 sec ]
 [ GrB_Matrix_nvals 
   2.59e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.00455 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.015 sec ]
 [ GxB_set 
   6.7e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.82373e+09 (use dense mask) (nthreads 40 fine: 158) 
   2.43 sec ]
 [ GrB_Matrix_nvals 
   4.55e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0448 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0414 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0452 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.921 sec ]
 [ GrB_Matrix_nvals 
   3.43e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0507 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0653 sec ]
 [ GxB_set 
   1.03e-06 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.186 sec ]
 [ GrB_Matrix_nvals 
   3.52e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.035 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.036 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0265 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.03875e+08 (use dense mask) (nthreads 40 fine: 137) 
   0.314 sec ]
 [ GrB_Matrix_nvals 
   4.65e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.000555 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00686 sec ]
 [ GxB_set 
   6.22e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 9.25822e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 140) 
   0.0859 sec ]
 [ GrB_Matrix_nvals 
   4.35e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0112 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00255 sec ]
 [ GxB_set 
   3.67e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 810063 (use dense mask in-place) (nthreads 12 coarse hash: 3 fine hash: 10) 
   0.0218 sec ]
 [ GrB_Matrix_nvals 
   3.78e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00104 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000769 sec ]
 [ GxB_set 
   2.76e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 70796 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00431 sec ]
 [ GrB_Matrix_nvals 
   8.1e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   9.62e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   6.63e-05 sec ]
 [ GxB_set 
   1.79e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 8111 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000578 sec ]
 [ GrB_Matrix_nvals 
   7.59e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.99e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.7e-05 sec ]
 [ GxB_set 
   1.4e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1527 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00012 sec ]
 [ GrB_Matrix_nvals 
   7.29e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.19e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.86e-06 sec ]
 [ GxB_set 
   1.1e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1102 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   6.53e-05 sec ]
 [ GrB_Matrix_nvals 
   5.4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.1e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.08e-06 sec ]
 [ GxB_set 
   1.45e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 832 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   5.6e-05 sec ]
 [ GrB_Matrix_nvals 
   5.49e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.08e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.47e-06 sec ]
 [ GxB_set 
   1.19e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 427 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.37e-05 sec ]
 [ GrB_Matrix_nvals 
   5.1e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.04e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.33e-06 sec ]
 [ GxB_set 
   1.17e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 155 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.35e-05 sec ]
 [ GrB_Matrix_nvals 
   4.8e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.01e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.01e-06 sec ]
 [ GxB_set 
   1.17e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   2.79e-05 sec ]
 [ GrB_Matrix_nvals 
   5.19e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0344 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000463 sec ]
 [ GrB_Matrix_nvals 
   3.41e-07 sec ]
 [ GrB_Matrix_nvals 
   1.21e-07 sec ]
 [ GxB_set 
   6.18e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1 mwork 2 (use mask) (intensity: 2.04e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   6.95e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000409 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000433 sec ]
 [ GrB_Matrix_nvals 
   1.99e-07 sec ]
 [ GrB_Matrix_nvals 
   6.8e-08 sec ]
 [ GxB_set 
   2.43e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 5 mwork 10 (use mask) (intensity: 1.02e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.42e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00041 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000437 sec ]
 [ GrB_Matrix_nvals 
   1.36e-07 sec ]
 [ GrB_Matrix_nvals 
   1.34e-07 sec ]
 [ GxB_set 
   2.35e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 13 mwork 22 (use mask) (intensity: 2.38e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.42e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000514 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000442 sec ]
 [ GrB_Matrix_nvals 
   9.1e-08 sec ]
 [ GrB_Matrix_nvals 
   2.04e-07 sec ]
 [ GxB_set 
   2.76e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 49 mwork 44 (use mask) (intensity: 6.33e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.6e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000473 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000447 sec ]
 [ GrB_Matrix_nvals 
   1.09e-07 sec ]
 [ GrB_Matrix_nvals 
   1.37e-07 sec ]
 [ GxB_set 
   2.78e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 104 mwork 271 (use mask) (intensity: 2.55e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   6.67e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000516 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000464 sec ]
 [ GrB_Matrix_nvals 
   1.02e-07 sec ]
 [ GrB_Matrix_nvals 
   1.89e-07 sec ]
 [ GxB_set 
   2.61e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 361 mwork 1996 (use mask) (intensity: 1.61e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000153 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00185 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000536 sec ]
 [ GrB_Matrix_nvals 
   1.68e-07 sec ]
 [ GrB_Matrix_nvals 
   1.34e-07 sec ]
 [ GxB_set 
   2e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 2679 mwork 17355 (use mask) (intensity: 1.36e-05 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.00133 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000917 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000845 sec ]
 [ GrB_Matrix_nvals 
   1.78e-07 sec ]
 [ GrB_Matrix_nvals 
   6.89e-08 sec ]
 [ GxB_set 
   2.38e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 24129 mwork 172538 (use mask) (intensity: 0.000134 workspace/(nnz(A)+nnz(B)): 0.252) (nthreads 3 coarse hash: 2 fine hash: 3) 
   0.0059 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00413 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00281 sec ]
 [ GrB_Matrix_nvals 
   2.39e-07 sec ]
 [ GrB_Matrix_nvals 
   7.4e-08 sec ]
 [ GxB_set 
   2.38e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 230057 mwork 1.75356e+06 (use mask) (nthreads 30 coarse hash: 1 fine hash: 31) 
   0.0171 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0123 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0117 sec ]
 [ GrB_Matrix_nvals 
   3.04e-07 sec ]
 [ GrB_Matrix_nvals 
   2.43e-07 sec ]
 [ GxB_set 
   2.62e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 2.4868e+06 (use dense mask in-place) (nthreads 37 coarse hash: 1 fine hash: 38) 
   0.0652 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0976 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.188 sec ]
 [ GrB_Matrix_nvals 
   4.72e-07 sec ]
 [ GrB_Matrix_nvals 
   1.45e-07 sec ]
 [ GxB_set 
   2.29e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 4.56226e+07 (use dense mask) (nthreads 40 fine: 135) 
   0.299 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0395 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.262 sec ]
 [ GrB_Matrix_nvals 
   6.9e-07 sec ]
 [ GrB_Matrix_nvals 
   2.24e-07 sec ]
 [ GxB_set 
   2.46e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 6.85933e+08 (use dense mask) (nthreads 40 fine: 153) 
   1.43 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0609 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.271 sec ]
 [ GrB_Matrix_nvals 
   5.12e-07 sec ]
 [ GrB_Matrix_nvals 
   2.36e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0462 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   1.13 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0894 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0603 sec ]
 [ GrB_Matrix_nvals 
   5.4e-07 sec ]
 [ GrB_Matrix_nvals 
   2.14e-07 sec ]
 [ GxB_set 
   5.22e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1206 (sparse to bitmap) 
   0.125 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0519 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.023 sec ]
 [ GrB_Matrix_nvals 
   5.15e-07 sec ]
 [ GrB_Matrix_nvals 
   2.24e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0143 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.18776e+07 mwork 51 (use mask) (nthreads 40 coarse hash: 1 fine: 159) 
   0.0336 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000571 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.00775 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.102 sec ]
BC time 40:       9.2482 (sec)

Trial 4 : sources: [ 19524253 43676726 33055508 15244687 ]
 [ GxB_set (sparse to bitmap) 
   0.0278 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 17 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.59e-05 sec ]
 [ GrB_Matrix_nvals 
   7.87e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.65e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.84e-05 sec ]
 [ GxB_set 
   5.04e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1076 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000101 sec ]
 [ GrB_Matrix_nvals 
   5.4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   4.44e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   4.84e-05 sec ]
 [ GxB_set 
   1.68e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.56702e+06 (use dense mask in-place) (nthreads 23 coarse hash: 2 fine hash: 24) 
   0.0189 sec ]
 [ GrB_Matrix_nvals 
   2e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0386 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00315 sec ]
 [ GxB_set 
   7.62e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 6.60511e+08 (use dense mask) (nthreads 40 fine: 151) 
   1.14 sec ]
 [ GrB_Matrix_nvals 
   6.75e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0416 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0425 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0462 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   1.37 sec ]
 [ GrB_Matrix_nvals 
   3.44e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0524 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0579 sec ]
 [ GxB_set 
   8.93e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.183 sec ]
 [ GrB_Matrix_nvals 
   7.05e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0289 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0432 sec ]
 [ GxB_set 
   7.1e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.0749 sec ]
 [ GrB_Matrix_nvals 
   2.23e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0368 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0194 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0192 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.02372e+07 (use dense mask in-place) (nthreads 40 fine hash: 158) 
   0.0803 sec ]
 [ GrB_Matrix_nvals 
   4.09e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00826 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00289 sec ]
 [ GxB_set 
   2.14e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 857776 (use dense mask in-place) (nthreads 13 coarse hash: 1 fine hash: 13) 
   0.0193 sec ]
 [ GrB_Matrix_nvals 
   2.26e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00116 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000895 sec ]
 [ GxB_set 
   2.72e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 77636 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00498 sec ]
 [ GrB_Matrix_nvals 
   8.1e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000107 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   7.25e-05 sec ]
 [ GxB_set 
   1.59e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 8652 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000643 sec ]
 [ GrB_Matrix_nvals 
   6.4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.05e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.75e-05 sec ]
 [ GxB_set 
   1.09e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1197 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000105 sec ]
 [ GrB_Matrix_nvals 
   6.89e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.29e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.04e-05 sec ]
 [ GxB_set 
   1.47e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1792 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.84e-05 sec ]
 [ GrB_Matrix_nvals 
   6.5e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.15e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.2e-06 sec ]
 [ GxB_set 
   1.51e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 552 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   5.17e-05 sec ]
 [ GrB_Matrix_nvals 
   4.89e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.1e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.18e-06 sec ]
 [ GxB_set 
   1.37e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 564 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.79e-05 sec ]
 [ GrB_Matrix_nvals 
   4.7e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.09e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.45e-06 sec ]
 [ GxB_set 
   1.41e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 28 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.02e-05 sec ]
 [ GrB_Matrix_nvals 
   6.8e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0359 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00053 sec ]
 [ GrB_Matrix_nvals 
   3.23e-07 sec ]
 [ GrB_Matrix_nvals 
   1.19e-07 sec ]
 [ GxB_set 
   4.36e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4 mwork 8 (use mask) (intensity: 8.17e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.17e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000481 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000485 sec ]
 [ GrB_Matrix_nvals 
   1.61e-07 sec ]
 [ GrB_Matrix_nvals 
   5.35e-07 sec ]
 [ GxB_set 
   2.35e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 12 mwork 24 (use mask) (intensity: 2.45e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.28e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000468 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000494 sec ]
 [ GrB_Matrix_nvals 
   1.51e-07 sec ]
 [ GrB_Matrix_nvals 
   1.24e-07 sec ]
 [ GxB_set 
   3.11e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 24 mwork 72 (use mask) (intensity: 6.54e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.69e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000546 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000505 sec ]
 [ GrB_Matrix_nvals 
   1.15e-07 sec ]
 [ GrB_Matrix_nvals 
   7.4e-08 sec ]
 [ GxB_set 
   2.11e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 183 mwork 303 (use mask) (intensity: 3.31e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.01e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00154 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000509 sec ]
 [ GrB_Matrix_nvals 
   1.11e-07 sec ]
 [ GrB_Matrix_nvals 
   7.29e-08 sec ]
 [ GxB_set 
   2.23e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 395 mwork 2209 (use mask) (intensity: 1.77e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.00014 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000719 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000565 sec ]
 [ GrB_Matrix_nvals 
   1.72e-07 sec ]
 [ GrB_Matrix_nvals 
   1.03e-07 sec ]
 [ GxB_set 
   2.25e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 2956 mwork 19532 (use mask) (intensity: 1.53e-05 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.00132 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000961 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000918 sec ]
 [ GrB_Matrix_nvals 
   1.62e-07 sec ]
 [ GrB_Matrix_nvals 
   6.59e-08 sec ]
 [ GxB_set 
   2.69e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 26203 mwork 190996 (use mask) (intensity: 0.000148 workspace/(nnz(A)+nnz(B)): 0.252) (nthreads 3 coarse hash: 4) 
   0.00689 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00456 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00246 sec ]
 [ GrB_Matrix_nvals 
   2.91e-07 sec ]
 [ GrB_Matrix_nvals 
   1.04e-07 sec ]
 [ GxB_set 
   2.83e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 256839 mwork 1.94751e+06 (use mask) (nthreads 33 fine hash: 36) 
   0.0213 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0111 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0158 sec ]
 [ GrB_Matrix_nvals 
   3.48e-07 sec ]
 [ GrB_Matrix_nvals 
   2.24e-07 sec ]
 [ GxB_set 
   3.85e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 2.64993e+06 (use dense mask in-place) (nthreads 40 fine hash: 43) 
   0.0458 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0715 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.201 sec ]
 [ GrB_Matrix_nvals 
   5.25e-07 sec ]
 [ GrB_Matrix_nvals 
   1.52e-07 sec ]
 [ GxB_set 
   2.1e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 4.04712e+07 (use dense mask) (nthreads 40 fine: 134) 
   0.36 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0506 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.284 sec ]
 [ GrB_Matrix_nvals 
   7.92e-07 sec ]
 [ GrB_Matrix_nvals 
   4.49e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0533 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   3.03 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.138 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.181 sec ]
 [ GrB_Matrix_nvals 
   5.37e-07 sec ]
 [ GrB_Matrix_nvals 
   1.98e-07 sec ]
 [ GxB_set 
   5.01e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.474 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0666 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0289 sec ]
 [ GrB_Matrix_nvals 
   4.63e-07 sec ]
 [ GrB_Matrix_nvals 
   2.06e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0167 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 5.57527e+08 mwork 1030 (use mask) (nthreads 40 coarse hash: 1 fine: 160) 
   0.29 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000817 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000504 sec ]
 [ GrB_Matrix_nvals 
   3.86e-07 sec ]
 [ GrB_Matrix_nvals 
   7.1e-08 sec ]
 [ GxB_set 
   3.32e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 290971 mwork 17 (use mask) (intensity: 0.000198 workspace/(nnz(A)+nnz(B)): 0.335) (nthreads 4 coarse hash: 2 fine hash: 5) 
   0.00294 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00426 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.00895 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0984 sec ]
BC time 40:       8.9312 (sec)

Trial 5 : sources: [ 24946738 6479472 26077682 22023875 ]
 [ GxB_set (sparse to bitmap) 
   0.0277 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 57 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.02e-05 sec ]
 [ GrB_Matrix_nvals 
   8.64e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.52e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.33e-05 sec ]
 [ GxB_set 
   5.61e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.21499e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 65) 
   0.123 sec ]
 [ GrB_Matrix_nvals 
   2.37e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.259 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0159 sec ]
 [ GxB_set 
   6.38e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.28378e+08 (use dense mask) (nthreads 40 fine: 149) 
   0.988 sec ]
 [ GrB_Matrix_nvals 
   6.5e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0334 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0327 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0368 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   1.56 sec ]
 [ GrB_Matrix_nvals 
   4.95e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0505 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.053 sec ]
 [ GxB_set 
   6.8e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.739 sec ]
 [ GrB_Matrix_nvals 
   3.19e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0431 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0489 sec ]
 [ GxB_set 
   5.78e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.294 sec ]
 [ GrB_Matrix_nvals 
   3.22e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0438 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0363 sec ]
 [ GxB_set 
   9.13e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.0893 sec ]
 [ GrB_Matrix_nvals 
   4.21e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0393 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0158 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0185 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.75476e+07 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine: 156) 
   0.117 sec ]
 [ GrB_Matrix_nvals 
   4.13e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000761 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00256 sec ]
 [ GxB_set 
   3.88e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.73187e+06 (use dense mask in-place) (nthreads 26 coarse hash: 1 fine hash: 26) 
   0.0232 sec ]
 [ GrB_Matrix_nvals 
   4.25e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00265 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00132 sec ]
 [ GxB_set 
   3.2e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 138901 (use dense mask in-place) (nthreads 2 coarse hash: 1) 
   0.0104 sec ]
 [ GrB_Matrix_nvals 
   1.08e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000178 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000307 sec ]
 [ GxB_set 
   2.29e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 13357 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000957 sec ]
 [ GrB_Matrix_nvals 
   7.71e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.69e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.4e-05 sec ]
 [ GxB_set 
   1.47e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2728 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000197 sec ]
 [ GrB_Matrix_nvals 
   7.8e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.28e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.78e-05 sec ]
 [ GxB_set 
   1.7e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 614 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   6.35e-05 sec ]
 [ GrB_Matrix_nvals 
   4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.1e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.09e-06 sec ]
 [ GxB_set 
   1.18e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 848 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   5.81e-05 sec ]
 [ GrB_Matrix_nvals 
   4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.08e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.21e-06 sec ]
 [ GxB_set 
   1.13e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 159 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.38e-05 sec ]
 [ GrB_Matrix_nvals 
   4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   9.73e-06 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   7.84e-06 sec ]
 [ GxB_set 
   1.17e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 141 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.11e-05 sec ]
 [ GrB_Matrix_nvals 
   4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   9.58e-06 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   7.64e-06 sec ]
 [ GxB_set 
   9.41e-08 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   2.75e-05 sec ]
 [ GrB_Matrix_nvals 
   6.4e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0372 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000468 sec ]
 [ GrB_Matrix_nvals 
   2e-07 sec ]
 [ GrB_Matrix_nvals 
   1.21e-07 sec ]
 [ GxB_set 
   5.69e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1 mwork 2 (use mask) (intensity: 2.04e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   6.95e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00168 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000443 sec ]
 [ GrB_Matrix_nvals 
   1.73e-07 sec ]
 [ GrB_Matrix_nvals 
   1.03e-07 sec ]
 [ GxB_set 
   2.17e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 3 mwork 6 (use mask) (intensity: 6.13e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   6.83e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000395 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000433 sec ]
 [ GrB_Matrix_nvals 
   1.47e-07 sec ]
 [ GrB_Matrix_nvals 
   1.04e-07 sec ]
 [ GxB_set 
   2.09e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 9 mwork 20 (use mask) (intensity: 1.97e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.52e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000452 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000437 sec ]
 [ GrB_Matrix_nvals 
   1.13e-07 sec ]
 [ GrB_Matrix_nvals 
   1.21e-07 sec ]
 [ GxB_set 
   2.51e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 49 mwork 56 (use mask) (intensity: 7.15e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.78e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00117 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00045 sec ]
 [ GrB_Matrix_nvals 
   9.59e-08 sec ]
 [ GrB_Matrix_nvals 
   5.29e-08 sec ]
 [ GxB_set 
   2.08e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 70 mwork 407 (use mask) (intensity: 3.25e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.52e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000541 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000484 sec ]
 [ GrB_Matrix_nvals 
   9.8e-08 sec ]
 [ GrB_Matrix_nvals 
   2.15e-07 sec ]
 [ GxB_set 
   2.7e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 574 mwork 3353 (use mask) (intensity: 2.67e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000256 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000635 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000542 sec ]
 [ GrB_Matrix_nvals 
   1.54e-07 sec ]
 [ GrB_Matrix_nvals 
   1.08e-07 sec ]
 [ GxB_set 
   2.31e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4565 mwork 32748 (use mask) (intensity: 2.54e-05 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.00283 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000944 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00115 sec ]
 [ GrB_Matrix_nvals 
   1.64e-07 sec ]
 [ GrB_Matrix_nvals 
   9.1e-08 sec ]
 [ GxB_set 
   2.49e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 44497 mwork 313953 (use mask) (intensity: 0.000244 workspace/(nnz(A)+nnz(B)): 0.419) (nthreads 5 coarse hash: 1 fine hash: 6) 
   0.0081 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00664 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00364 sec ]
 [ GrB_Matrix_nvals 
   3.26e-07 sec ]
 [ GrB_Matrix_nvals 
   1.21e-07 sec ]
 [ GxB_set 
   4.21e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 419637 mwork 3.14296e+06 (use mask) (nthreads 40 coarse hash: 2 fine: 53) 
   0.0296 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00626 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0159 sec ]
 [ GrB_Matrix_nvals 
   3.51e-07 sec ]
 [ GrB_Matrix_nvals 
   2.25e-07 sec ]
 [ GxB_set 
   4.77e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 5.37825e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 82) 
   0.0921 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.221 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.196 sec ]
 [ GrB_Matrix_nvals 
   7.64e-07 sec ]
 [ GrB_Matrix_nvals 
   2.32e-07 sec ]
 [ GxB_set 
   2.41e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.43803e+08 (use dense mask) (nthreads 40 fine: 140) 
   0.484 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0325 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.23 sec ]
 [ GrB_Matrix_nvals 
   4.91e-07 sec ]
 [ GrB_Matrix_nvals 
   3.27e-07 sec ]
 [ GxB_set 
   2.06e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 5.01822e+08 (use dense mask) (nthreads 40 fine: 149) 
   0.986 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0352 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.262 sec ]
 [ GrB_Matrix_nvals 
   2.77e-07 sec ]
 [ GrB_Matrix_nvals 
   1.23e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0413 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   2.24 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.114 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.163 sec ]
 [ GrB_Matrix_nvals 
   3.96e-07 sec ]
 [ GrB_Matrix_nvals 
   2.01e-07 sec ]
 [ GxB_set 
   4.03e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.455 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0785 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0506 sec ]
 [ GrB_Matrix_nvals 
   2.41e-07 sec ]
 [ GrB_Matrix_nvals 
   3.86e-07 sec ]
 [ GxB_set 
   8.22e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 12 (sparse to bitmap) 
   0.0225 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0534 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.00753 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.104 sec ]
BC time 40:      10.7524 (sec)

Trial 6 : sources: [ 22081915 40034162 49496014 42847507 ]
 [ GxB_set (sparse to bitmap) 
   0.0278 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 34 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.46e-05 sec ]
 [ GrB_Matrix_nvals 
   6.84e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.59e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.01e-05 sec ]
 [ GxB_set 
   8.55e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 6108 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000386 sec ]
 [ GrB_Matrix_nvals 
   9.5e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000207 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000248 sec ]
 [ GxB_set 
   2.65e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.60582e+07 (use dense mask) (nthreads 40 fine: 133) 
   0.152 sec ]
 [ GrB_Matrix_nvals 
   2.85e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.00393 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0188 sec ]
 [ GxB_set 
   5.91e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 2.15819e+09 (use dense mask) (nthreads 40 fine: 159) 
   3.28 sec ]
 [ GrB_Matrix_nvals 
   4.66e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0572 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0492 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0533 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.587 sec ]
 [ GrB_Matrix_nvals 
   4.23e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0468 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0565 sec ]
 [ GxB_set 
   5.51e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.112 sec ]
 [ GrB_Matrix_nvals 
   3.53e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0241 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0335 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0225 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.1731e+07 (use dense mask) (nthreads 40 fine: 133) 
   0.252 sec ]
 [ GrB_Matrix_nvals 
   5.16e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.000262 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00346 sec ]
 [ GxB_set 
   7.28e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3.95654e+06 (use dense mask in-place) (nthreads 40 fine hash: 61) 
   0.0328 sec ]
 [ GrB_Matrix_nvals 
   7.29e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00565 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00266 sec ]
 [ GxB_set 
   2.98e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 333951 (use dense mask in-place) (nthreads 5 coarse hash: 3) 
   0.0138 sec ]
 [ GrB_Matrix_nvals 
   2.43e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00041 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000725 sec ]
 [ GxB_set 
   2.81e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 31797 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00222 sec ]
 [ GrB_Matrix_nvals 
   1.2e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   4.57e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   4.25e-05 sec ]
 [ GxB_set 
   2.14e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3875 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000317 sec ]
 [ GrB_Matrix_nvals 
   1.12e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.49e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.35e-05 sec ]
 [ GxB_set 
   1.44e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1346 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.75e-05 sec ]
 [ GrB_Matrix_nvals 
   9.8e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.17e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.7e-06 sec ]
 [ GxB_set 
   1.37e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1148 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.01e-05 sec ]
 [ GrB_Matrix_nvals 
   8.99e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.1e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.09e-06 sec ]
 [ GxB_set 
   1.23e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 558 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   5.12e-05 sec ]
 [ GrB_Matrix_nvals 
   5.4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.07e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.58e-06 sec ]
 [ GxB_set 
   1.26e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 296 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.83e-05 sec ]
 [ GrB_Matrix_nvals 
   5.52e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.03e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.15e-06 sec ]
 [ GxB_set 
   1.22e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 14 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   2.87e-05 sec ]
 [ GrB_Matrix_nvals 
   6.19e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0365 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000491 sec ]
 [ GrB_Matrix_nvals 
   3.62e-07 sec ]
 [ GrB_Matrix_nvals 
   1.27e-07 sec ]
 [ GxB_set 
   5.91e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 2 mwork 4 (use mask) (intensity: 4.09e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.19e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000422 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000436 sec ]
 [ GrB_Matrix_nvals 
   1.73e-07 sec ]
 [ GrB_Matrix_nvals 
   6.98e-08 sec ]
 [ GxB_set 
   2.52e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 8 mwork 16 (use mask) (intensity: 1.63e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.48e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000414 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000438 sec ]
 [ GrB_Matrix_nvals 
   1.1e-07 sec ]
 [ GrB_Matrix_nvals 
   9.31e-08 sec ]
 [ GxB_set 
   2.18e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 18 mwork 41 (use mask) (intensity: 4.02e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.5e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00047 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000446 sec ]
 [ GrB_Matrix_nvals 
   1.04e-07 sec ]
 [ GrB_Matrix_nvals 
   8.31e-08 sec ]
 [ GxB_set 
   2.23e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 95 mwork 141 (use mask) (intensity: 1.61e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   6.3e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000497 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000469 sec ]
 [ GrB_Matrix_nvals 
   1.01e-07 sec ]
 [ GrB_Matrix_nvals 
   8.8e-08 sec ]
 [ GxB_set 
   2.67e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 231 mwork 939 (use mask) (intensity: 7.97e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   9.35e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000611 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0005 sec ]
 [ GrB_Matrix_nvals 
   9.99e-08 sec ]
 [ GrB_Matrix_nvals 
   6.29e-08 sec ]
 [ GxB_set 
   2.75e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1195 mwork 8157 (use mask) (intensity: 6.37e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000532 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000843 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0015 sec ]
 [ GrB_Matrix_nvals 
   1.6e-07 sec ]
 [ GrB_Matrix_nvals 
   9.2e-08 sec ]
 [ GxB_set 
   2.68e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 11066 mwork 77338 (use mask) (intensity: 6.02e-05 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.00633 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00152 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00197 sec ]
 [ GrB_Matrix_nvals 
   1.56e-07 sec ]
 [ GrB_Matrix_nvals 
   1.35e-07 sec ]
 [ GxB_set 
   2.46e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 106175 mwork 751965 (use mask) (nthreads 13 coarse hash: 2 fine hash: 12) 
   0.0153 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0062 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00628 sec ]
 [ GrB_Matrix_nvals 
   3.52e-07 sec ]
 [ GrB_Matrix_nvals 
   2.07e-07 sec ]
 [ GxB_set 
   2.4e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.00689e+06 (use dense mask in-place) (nthreads 15 coarse hash: 2 fine hash: 14) 
   0.0596 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0345 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.171 sec ]
 [ GrB_Matrix_nvals 
   4.83e-07 sec ]
 [ GrB_Matrix_nvals 
   3.42e-07 sec ]
 [ GxB_set 
   2.57e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.24288e+07 (use dense mask in-place) (nthreads 40 fine hash: 162) 
   0.156 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.266 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.245 sec ]
 [ GrB_Matrix_nvals 
   4.47e-07 sec ]
 [ GrB_Matrix_nvals 
   1.74e-07 sec ]
 [ GxB_set 
   2.02e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 3.03779e+08 (use dense mask) (nthreads 40 fine: 146) 
   0.964 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0757 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.286 sec ]
 [ GrB_Matrix_nvals 
   5.42e-07 sec ]
 [ GrB_Matrix_nvals 
   2.06e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0532 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   1.67 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0914 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0692 sec ]
 [ GrB_Matrix_nvals 
   8.25e-07 sec ]
 [ GrB_Matrix_nvals 
   1.92e-07 sec ]
 [ GxB_set 
   5.11e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 398 (sparse to bitmap) 
   0.0499 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0533 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0208 sec ]
 [ GrB_Matrix_nvals 
   3.33e-07 sec ]
 [ GrB_Matrix_nvals 
   1.92e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0153 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 2.88659e+06 mwork 34 (use mask) (nthreads 40 coarse hash: 2 fine: 38 fine hash: 7) 
   0.0151 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00077 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.00748 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.102 sec ]
BC time 40:       9.3769 (sec)

Trial 7 : sources: [ 52409557 55445388 22028097 48766648 ]
 [ GxB_set (sparse to bitmap) 
   0.0271 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 29 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.56e-05 sec ]
 [ GrB_Matrix_nvals 
   9.2e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.45e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.9e-05 sec ]
 [ GxB_set 
   5.94e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 3370 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000229 sec ]
 [ GrB_Matrix_nvals 
   1.1e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000122 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000134 sec ]
 [ GxB_set 
   2.72e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 8.46947e+06 (use dense mask in-place) (nthreads 40 coarse hash: 2 fine hash: 130) 
   0.146 sec ]
 [ GrB_Matrix_nvals 
   3.22e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.349 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0146 sec ]
 [ GxB_set 
   6.18e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.08473e+09 (use dense mask) (nthreads 40 fine: 154) 
   1.79 sec ]
 [ GrB_Matrix_nvals 
   4.05e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0444 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0417 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0458 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   1.44 sec ]
 [ GrB_Matrix_nvals 
   6.17e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0498 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0583 sec ]
 [ GxB_set 
   6.25e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.207 sec ]
 [ GrB_Matrix_nvals 
   6.77e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0349 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.041 sec ]
 [ GxB_set 
   9.76e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.0771 sec ]
 [ GrB_Matrix_nvals 
   3.3e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) (bitmap to sparse) 
   0.0368 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0194 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0191 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.10869e+07 (use dense mask in-place) (nthreads 40 fine hash: 162) 
   0.0798 sec ]
 [ GrB_Matrix_nvals 
   4.33e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00962 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00226 sec ]
 [ GxB_set 
   2.81e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.0183e+06 (use dense mask in-place) (nthreads 15 coarse hash: 2 fine hash: 14) 
   0.0219 sec ]
 [ GrB_Matrix_nvals 
   3.91e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00137 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000923 sec ]
 [ GxB_set 
   2.73e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 90194 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00578 sec ]
 [ GrB_Matrix_nvals 
   7.5e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000121 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.23e-05 sec ]
 [ GxB_set 
   3.02e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 10019 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000726 sec ]
 [ GrB_Matrix_nvals 
   1.2e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.21e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.99e-05 sec ]
 [ GxB_set 
   1.27e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1391 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000123 sec ]
 [ GrB_Matrix_nvals 
   7.71e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.23e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.03e-05 sec ]
 [ GxB_set 
   1.29e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1452 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.9e-05 sec ]
 [ GrB_Matrix_nvals 
   7.4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.21e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.81e-06 sec ]
 [ GxB_set 
   1.5e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 829 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   5.7e-05 sec ]
 [ GrB_Matrix_nvals 
   7.29e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.09e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.76e-06 sec ]
 [ GxB_set 
   1.34e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 561 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.96e-05 sec ]
 [ GrB_Matrix_nvals 
   5.89e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.07e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.29e-06 sec ]
 [ GxB_set 
   1.35e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 162 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.52e-05 sec ]
 [ GrB_Matrix_nvals 
   4.4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.03e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.22e-06 sec ]
 [ GxB_set 
   1.38e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   2.81e-05 sec ]
 [ GrB_Matrix_nvals 
   6.31e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0347 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00181 sec ]
 [ GrB_Matrix_nvals 
   3.48e-07 sec ]
 [ GrB_Matrix_nvals 
   1.25e-07 sec ]
 [ GxB_set 
   5.66e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1 mwork 2 (use mask) (intensity: 2.04e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.09e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000441 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000579 sec ]
 [ GrB_Matrix_nvals 
   1.68e-07 sec ]
 [ GrB_Matrix_nvals 
   1.96e-07 sec ]
 [ GxB_set 
   2.55e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 6 mwork 12 (use mask) (intensity: 1.23e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.46e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000446 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000471 sec ]
 [ GrB_Matrix_nvals 
   1.07e-07 sec ]
 [ GrB_Matrix_nvals 
   1.15e-07 sec ]
 [ GxB_set 
   3e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 15 mwork 26 (use mask) (intensity: 2.79e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.39e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000486 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000476 sec ]
 [ GrB_Matrix_nvals 
   9.1e-08 sec ]
 [ GrB_Matrix_nvals 
   1.13e-07 sec ]
 [ GxB_set 
   2.72e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 52 mwork 64 (use mask) (intensity: 7.9e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.65e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000508 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000489 sec ]
 [ GrB_Matrix_nvals 
   8.99e-08 sec ]
 [ GrB_Matrix_nvals 
   5.37e-07 sec ]
 [ GxB_set 
   2.7e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 153 mwork 333 (use mask) (intensity: 3.31e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.09e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000661 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000499 sec ]
 [ GrB_Matrix_nvals 
   1.34e-07 sec ]
 [ GrB_Matrix_nvals 
   1.4e-07 sec ]
 [ GxB_set 
   2.35e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 432 mwork 2572 (use mask) (intensity: 2.05e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000167 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000721 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000555 sec ]
 [ GrB_Matrix_nvals 
   1.69e-07 sec ]
 [ GrB_Matrix_nvals 
   1.32e-07 sec ]
 [ GxB_set 
   2.24e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 3417 mwork 22500 (use mask) (intensity: 1.77e-05 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.00169 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000886 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000961 sec ]
 [ GrB_Matrix_nvals 
   1.86e-07 sec ]
 [ GrB_Matrix_nvals 
   1.86e-07 sec ]
 [ GxB_set 
   3e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 30046 mwork 221534 (use mask) (intensity: 0.000171 workspace/(nnz(A)+nnz(B)): 0.252) (nthreads 3 coarse hash: 4) 
   0.0111 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00448 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00287 sec ]
 [ GrB_Matrix_nvals 
   2.85e-07 sec ]
 [ GrB_Matrix_nvals 
   1.71e-07 sec ]
 [ GxB_set 
   4.02e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 301949 mwork 2.18535e+06 (use mask) (nthreads 37 coarse hash: 1 fine hash: 37) 
   0.0296 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0124 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0179 sec ]
 [ GrB_Matrix_nvals 
   3.95e-07 sec ]
 [ GrB_Matrix_nvals 
   1.32e-07 sec ]
 [ GxB_set 
   2.58e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 3.06922e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 47) 
   0.103 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0942 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.2 sec ]
 [ GrB_Matrix_nvals 
   4.89e-07 sec ]
 [ GrB_Matrix_nvals 
   3.1e-07 sec ]
 [ GxB_set 
   2.56e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 5.0287e+07 (use dense mask) (nthreads 40 fine: 134) 
   0.376 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0458 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.279 sec ]
 [ GrB_Matrix_nvals 
   6.11e-07 sec ]
 [ GrB_Matrix_nvals 
   2.44e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0499 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   2.61 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.134 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.182 sec ]
 [ GrB_Matrix_nvals 
   5.16e-07 sec ]
 [ GrB_Matrix_nvals 
   2.21e-07 sec ]
 [ GxB_set 
   4.58e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.864 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.079 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0525 sec ]
 [ GrB_Matrix_nvals 
   2.56e-07 sec ]
 [ GrB_Matrix_nvals 
   2.91e-07 sec ]
 [ GxB_set 
   4.04e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 82 (sparse to bitmap) 
   0.0251 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0555 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0202 sec ]
 [ GrB_Matrix_nvals 
   4.28e-07 sec ]
 [ GrB_Matrix_nvals 
   2.2e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0151 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 973481 mwork 29 (use mask) (nthreads 14 coarse hash: 2 fine hash: 14) 
   0.00486 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000954 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.00795 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0997 sec ]
BC time 40:      10.0488 (sec)

Trial 8 : sources: [ 44521241 60135542 28528671 9678012 ]
 [ GxB_set (sparse to bitmap) 
   0.0276 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 633 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000111 sec ]
 [ GrB_Matrix_nvals 
   8.51e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.72e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   6.21e-05 sec ]
 [ GxB_set 
   6.39e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.19245e+07 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 160) 
   0.18 sec ]
 [ GrB_Matrix_nvals 
   6.15e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.652 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.009 sec ]
 [ GxB_set 
   1.08e-06 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 8.27702e+08 (use dense mask) (nthreads 40 fine: 153) 
   1.23 sec ]
 [ GrB_Matrix_nvals 
   4.24e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0206 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0147 sec ]
 [ GxB_set 
   6.49e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.24546e+09 (use dense mask) (nthreads 40 fine: 156) 
   1.79 sec ]
 [ GrB_Matrix_nvals 
   4.67e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0463 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0442 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0483 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.734 sec ]
 [ GrB_Matrix_nvals 
   8.71e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0462 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.049 sec ]
 [ GxB_set 
   4.86e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.121 sec ]
 [ GrB_Matrix_nvals 
   3.34e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.026 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0332 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0237 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.9982e+07 (use dense mask) (nthreads 40 fine: 134) 
   0.265 sec ]
 [ GrB_Matrix_nvals 
   4.24e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.000325 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00405 sec ]
 [ GxB_set 
   3.44e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.86021e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 75) 
   0.0396 sec ]
 [ GrB_Matrix_nvals 
   4.51e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00672 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00285 sec ]
 [ GxB_set 
   2.86e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 411789 (use dense mask in-place) (nthreads 6 coarse hash: 4) 
   0.0163 sec ]
 [ GrB_Matrix_nvals 
   5.68e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000493 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000624 sec ]
 [ GxB_set 
   2.72e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 37249 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00247 sec ]
 [ GrB_Matrix_nvals 
   1.12e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   5.25e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   4.33e-05 sec ]
 [ GxB_set 
   2.11e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 5074 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000373 sec ]
 [ GrB_Matrix_nvals 
   1.04e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.59e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.43e-05 sec ]
 [ GxB_set 
   1.24e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 785 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.04e-05 sec ]
 [ GrB_Matrix_nvals 
   7.5e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.19e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.32e-06 sec ]
 [ GxB_set 
   1.41e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1406 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.17e-05 sec ]
 [ GrB_Matrix_nvals 
   7.71e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.15e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.81e-06 sec ]
 [ GxB_set 
   1.38e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 421 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.52e-05 sec ]
 [ GrB_Matrix_nvals 
   7.89e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.04e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.08e-06 sec ]
 [ GxB_set 
   1.23e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 423 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.15e-05 sec ]
 [ GrB_Matrix_nvals 
   4.7e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.03e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.87e-05 sec ]
 [ GxB_set 
   1.22e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 21 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   2.87e-05 sec ]
 [ GrB_Matrix_nvals 
   6.1e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0365 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000495 sec ]
 [ GrB_Matrix_nvals 
   3.57e-07 sec ]
 [ GrB_Matrix_nvals 
   2.73e-07 sec ]
 [ GxB_set 
   5.45e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 3 mwork 6 (use mask) (intensity: 6.13e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   6.95e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000454 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000463 sec ]
 [ GrB_Matrix_nvals 
   1.06e-07 sec ]
 [ GrB_Matrix_nvals 
   1.32e-07 sec ]
 [ GxB_set 
   2.37e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 9 mwork 18 (use mask) (intensity: 1.84e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.41e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000443 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000469 sec ]
 [ GrB_Matrix_nvals 
   1.07e-07 sec ]
 [ GrB_Matrix_nvals 
   1.12e-07 sec ]
 [ GxB_set 
   2.11e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 19 mwork 37 (use mask) (intensity: 3.81e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.57e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000504 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000474 sec ]
 [ GrB_Matrix_nvals 
   1.01e-07 sec ]
 [ GrB_Matrix_nvals 
   1.14e-07 sec ]
 [ GxB_set 
   2.09e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 116 mwork 171 (use mask) (intensity: 1.95e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   6.19e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0013 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000488 sec ]
 [ GrB_Matrix_nvals 
   1.69e-07 sec ]
 [ GrB_Matrix_nvals 
   1.16e-07 sec ]
 [ GxB_set 
   2.03e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 215 mwork 1101 (use mask) (intensity: 8.96e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   9.84e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000634 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00052 sec ]
 [ GrB_Matrix_nvals 
   1.3e-07 sec ]
 [ GrB_Matrix_nvals 
   6.31e-08 sec ]
 [ GxB_set 
   2.19e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1460 mwork 9609 (use mask) (intensity: 7.54e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000444 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000837 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000697 sec ]
 [ GrB_Matrix_nvals 
   1.65e-07 sec ]
 [ GrB_Matrix_nvals 
   1.12e-07 sec ]
 [ GxB_set 
   2.27e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 12996 mwork 92052 (use mask) (intensity: 7.15e-05 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.00675 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00158 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00224 sec ]
 [ GrB_Matrix_nvals 
   1.87e-07 sec ]
 [ GrB_Matrix_nvals 
   1.96e-07 sec ]
 [ GxB_set 
   2.69e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 125075 mwork 882864 (use mask) (nthreads 15 coarse hash: 1 fine hash: 17) 
   0.0113 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00854 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00732 sec ]
 [ GrB_Matrix_nvals 
   3.3e-07 sec ]
 [ GrB_Matrix_nvals 
   1.41e-07 sec ]
 [ GxB_set 
   2.12e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.18236e+06 (use dense mask in-place) (nthreads 18 coarse hash: 1 fine hash: 19) 
   0.0291 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0253 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.169 sec ]
 [ GrB_Matrix_nvals 
   4.87e-07 sec ]
 [ GrB_Matrix_nvals 
   2.58e-07 sec ]
 [ GxB_set 
   2.34e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.51637e+07 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 160) 
   0.224 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.248 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.247 sec ]
 [ GrB_Matrix_nvals 
   4.12e-07 sec ]
 [ GrB_Matrix_nvals 
   2.2e-07 sec ]
 [ GxB_set 
   1.87e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 3.99237e+08 (use dense mask) (nthreads 40 fine: 148) 
   1.14 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0749 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.261 sec ]
 [ GrB_Matrix_nvals 
   4.5e-07 sec ]
 [ GrB_Matrix_nvals 
   1.79e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0481 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   1.25 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0721 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.151 sec ]
 [ GrB_Matrix_nvals 
   5.2e-07 sec ]
 [ GrB_Matrix_nvals 
   1.81e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0338 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.24575e+09 mwork 6.51794e+06 (use mask) (nthreads 40 fine: 161) 
   1.31 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0172 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0191 sec ]
 [ GrB_Matrix_nvals 
   3.8e-07 sec ]
 [ GrB_Matrix_nvals 
   2.86e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0135 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 81 (sparse to bitmap) 
   0.026 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0546 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.00754 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0909 sec ]
BC time 40:      11.0876 (sec)

Trial 9 : sources: [ 40020306 31625735 37446892 51788952 ]
 [ GxB_set (sparse to bitmap) 
   0.0277 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 24 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.55e-05 sec ]
 [ GrB_Matrix_nvals 
   9.25e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.52e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.05e-05 sec ]
 [ GxB_set 
   7.05e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1339 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000114 sec ]
 [ GrB_Matrix_nvals 
   7.29e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   5e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   7.2e-05 sec ]
 [ GxB_set 
   2.3e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.9165e+06 (use dense mask in-place) (nthreads 29 coarse hash: 1 fine hash: 30) 
   0.0198 sec ]
 [ GrB_Matrix_nvals 
   2.04e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.0256 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00312 sec ]
 [ GxB_set 
   7.08e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 9.72577e+08 (use dense mask) (nthreads 40 fine: 154) 
   1.48 sec ]
 [ GrB_Matrix_nvals 
   4.65e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0447 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0458 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0516 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   1.07 sec ]
 [ GrB_Matrix_nvals 
   4.54e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0502 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0576 sec ]
 [ GxB_set 
   8.19e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.144 sec ]
 [ GrB_Matrix_nvals 
   5.13e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.026 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0418 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0262 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7.65812e+07 (use dense mask) (nthreads 40 fine: 137) 
   0.334 sec ]
 [ GrB_Matrix_nvals 
   4.59e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.000589 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0061 sec ]
 [ GxB_set 
   7.76e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7.26686e+06 (use dense mask in-place) (nthreads 40 fine hash: 112) 
   0.0541 sec ]
 [ GrB_Matrix_nvals 
   4.38e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00568 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00226 sec ]
 [ GxB_set 
   2.59e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 616896 (use dense mask in-place) (nthreads 9 coarse hash: 2 fine hash: 7) 
   0.0175 sec ]
 [ GrB_Matrix_nvals 
   2.34e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000814 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000828 sec ]
 [ GxB_set 
   2.66e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 56637 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00393 sec ]
 [ GrB_Matrix_nvals 
   1.4e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   7.55e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   6.18e-05 sec ]
 [ GxB_set 
   2.07e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 6386 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000508 sec ]
 [ GrB_Matrix_nvals 
   7.4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.71e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.65e-05 sec ]
 [ GxB_set 
   1.71e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 915 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.16e-05 sec ]
 [ GrB_Matrix_nvals 
   5.4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.18e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1e-05 sec ]
 [ GxB_set 
   1.21e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1713 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.31e-05 sec ]
 [ GrB_Matrix_nvals 
   5.89e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.13e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.3e-06 sec ]
 [ GxB_set 
   1.28e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 552 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   5.33e-05 sec ]
 [ GrB_Matrix_nvals 
   5.7e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.06e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.32e-06 sec ]
 [ GxB_set 
   1.28e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 564 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.86e-05 sec ]
 [ GrB_Matrix_nvals 
   6.4e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.05e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.32e-06 sec ]
 [ GxB_set 
   1.46e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 28 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.22e-05 sec ]
 [ GrB_Matrix_nvals 
   5.68e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0354 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000485 sec ]
 [ GrB_Matrix_nvals 
   3.41e-07 sec ]
 [ GrB_Matrix_nvals 
   1.41e-07 sec ]
 [ GxB_set 
   5.13e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4 mwork 8 (use mask) (intensity: 8.17e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.07e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000436 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000445 sec ]
 [ GrB_Matrix_nvals 
   1.03e-07 sec ]
 [ GrB_Matrix_nvals 
   5.7e-08 sec ]
 [ GxB_set 
   2.2e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 12 mwork 24 (use mask) (intensity: 2.45e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.41e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000434 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000474 sec ]
 [ GrB_Matrix_nvals 
   1.07e-07 sec ]
 [ GrB_Matrix_nvals 
   1.22e-07 sec ]
 [ GxB_set 
   2.45e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 24 mwork 51 (use mask) (intensity: 5.11e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.66e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000515 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000472 sec ]
 [ GrB_Matrix_nvals 
   9.62e-08 sec ]
 [ GrB_Matrix_nvals 
   1.43e-07 sec ]
 [ GxB_set 
   2.47e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 157 mwork 231 (use mask) (intensity: 2.64e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   6.46e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000524 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000493 sec ]
 [ GrB_Matrix_nvals 
   1.04e-07 sec ]
 [ GrB_Matrix_nvals 
   1.89e-07 sec ]
 [ GxB_set 
   2.46e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 290 mwork 1625 (use mask) (intensity: 1.3e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000112 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0007 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000536 sec ]
 [ GrB_Matrix_nvals 
   1.49e-07 sec ]
 [ GrB_Matrix_nvals 
   1.78e-07 sec ]
 [ GxB_set 
   2.44e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 2092 mwork 14354 (use mask) (intensity: 1.12e-05 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000872 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000996 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00196 sec ]
 [ GrB_Matrix_nvals 
   1.54e-07 sec ]
 [ GrB_Matrix_nvals 
   9.5e-08 sec ]
 [ GxB_set 
   2.59e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 19477 mwork 140485 (use mask) (intensity: 0.000109 workspace/(nnz(A)+nnz(B)): 0.168) (nthreads 2 coarse hash: 3) 
   0.00678 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0056 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00211 sec ]
 [ GrB_Matrix_nvals 
   2.65e-07 sec ]
 [ GrB_Matrix_nvals 
   1.02e-07 sec ]
 [ GxB_set 
   2.43e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 191713 mwork 1.3679e+06 (use mask) (nthreads 23 fine hash: 27) 
   0.0163 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0138 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00983 sec ]
 [ GrB_Matrix_nvals 
   3.01e-07 sec ]
 [ GrB_Matrix_nvals 
   2.64e-07 sec ]
 [ GxB_set 
   3.29e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.82966e+06 (use dense mask in-place) (nthreads 27 fine hash: 29) 
   0.0324 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.04 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.19 sec ]
 [ GrB_Matrix_nvals 
   4.78e-07 sec ]
 [ GrB_Matrix_nvals 
   2.25e-07 sec ]
 [ GxB_set 
   1.99e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 2.40883e+07 (use dense mask in-place) (nthreads 40 fine hash: 162) 
   0.283 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.396 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.276 sec ]
 [ GrB_Matrix_nvals 
   8.12e-07 sec ]
 [ GrB_Matrix_nvals 
   5.25e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0512 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   2.96 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.141 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.179 sec ]
 [ GrB_Matrix_nvals 
   3.5e-07 sec ]
 [ GrB_Matrix_nvals 
   3.76e-07 sec ]
 [ GxB_set 
   5.61e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   0.671 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0625 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0312 sec ]
 [ GrB_Matrix_nvals 
   4.35e-07 sec ]
 [ GrB_Matrix_nvals 
   4.44e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0175 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 9.42352e+08 mwork 1330 (use mask) (nthreads 40 fine: 161) 
   0.444 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000878 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000532 sec ]
 [ GrB_Matrix_nvals 
   3.43e-07 sec ]
 [ GrB_Matrix_nvals 
   1.99e-07 sec ]
 [ GxB_set 
   3.71e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 237000 mwork 24 (use mask) (intensity: 0.000161 workspace/(nnz(A)+nnz(B)): 0.252) (nthreads 3 coarse hash: 2 fine hash: 3) 
   0.0026 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00305 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.00771 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0985 sec ]
BC time 40:       9.5830 (sec)

Trial 10 : sources: [ 52584255 20346696 48387909 37337427 ]
 [ GxB_set (sparse to bitmap) 
   0.0277 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 71 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.93e-05 sec ]
 [ GrB_Matrix_nvals 
   5.34e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.62e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.34e-05 sec ]
 [ GxB_set 
   6.52e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 144141 (use dense mask in-place) (nthreads 2 coarse hash: 2) 
   0.0115 sec ]
 [ GrB_Matrix_nvals 
   1.7e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00534 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00253 sec ]
 [ GxB_set 
   3.73e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.47742e+08 (use dense mask) (nthreads 40 fine: 140) 
   0.38 sec ]
 [ GrB_Matrix_nvals 
   4.67e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0193 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0182 sec ]
 [ GxB_set 
   6.35e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.95685e+09 (use dense mask) (nthreads 40 fine: 158) 
   2.43 sec ]
 [ GrB_Matrix_nvals 
   4.43e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0502 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.047 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0514 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.72 sec ]
 [ GrB_Matrix_nvals 
   5.32e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0471 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0539 sec ]
 [ GxB_set 
   9.03e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.123 sec ]
 [ GrB_Matrix_nvals 
   3.32e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0232 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0342 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0234 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.9938e+07 (use dense mask) (nthreads 40 fine: 135) 
   0.261 sec ]
 [ GrB_Matrix_nvals 
   4.47e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.00047 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00399 sec ]
 [ GxB_set 
   4.28e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4.68157e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 71) 
   0.0483 sec ]
 [ GrB_Matrix_nvals 
   4.35e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00721 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00317 sec ]
 [ GxB_set 
   3.23e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 408160 (use dense mask in-place) (nthreads 6 coarse hash: 3 fine hash: 3) 
   0.0183 sec ]
 [ GrB_Matrix_nvals 
   7.78e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000512 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000495 sec ]
 [ GxB_set 
   3.06e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 38456 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00247 sec ]
 [ GrB_Matrix_nvals 
   1.16e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   5.34e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   4.24e-05 sec ]
 [ GxB_set 
   2.06e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 4558 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000348 sec ]
 [ GrB_Matrix_nvals 
   1.14e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.54e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.47e-05 sec ]
 [ GxB_set 
   1.29e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1101 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   8.23e-05 sec ]
 [ GrB_Matrix_nvals 
   9.59e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.19e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.51e-06 sec ]
 [ GxB_set 
   1.31e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1433 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.41e-05 sec ]
 [ GrB_Matrix_nvals 
   9.69e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.12e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.66e-06 sec ]
 [ GxB_set 
   1.5e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 555 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   5.07e-05 sec ]
 [ GrB_Matrix_nvals 
   5.49e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.07e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.17e-06 sec ]
 [ GxB_set 
   1.19e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 430 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000146 sec ]
 [ GrB_Matrix_nvals 
   8.2e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.21e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.05e-06 sec ]
 [ GxB_set 
   1.52e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 21 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.28e-05 sec ]
 [ GrB_Matrix_nvals 
   8.41e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0358 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000475 sec ]
 [ GrB_Matrix_nvals 
   3.16e-07 sec ]
 [ GrB_Matrix_nvals 
   1.16e-07 sec ]
 [ GxB_set 
   6.19e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 3 mwork 6 (use mask) (intensity: 6.13e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   7.14e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00042 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000435 sec ]
 [ GrB_Matrix_nvals 
   1.36e-07 sec ]
 [ GrB_Matrix_nvals 
   8.2e-08 sec ]
 [ GxB_set 
   2.58e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 10 mwork 20 (use mask) (intensity: 2.04e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.44e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000413 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000439 sec ]
 [ GrB_Matrix_nvals 
   9.8e-08 sec ]
 [ GrB_Matrix_nvals 
   1.2e-07 sec ]
 [ GxB_set 
   2.37e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 21 mwork 47 (use mask) (intensity: 4.63e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.43e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000479 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000445 sec ]
 [ GrB_Matrix_nvals 
   8.99e-08 sec ]
 [ GrB_Matrix_nvals 
   1.17e-07 sec ]
 [ GxB_set 
   2.29e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 127 mwork 171 (use mask) (intensity: 2.03e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   6.36e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00049 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000464 sec ]
 [ GrB_Matrix_nvals 
   9.41e-08 sec ]
 [ GrB_Matrix_nvals 
   7.59e-08 sec ]
 [ GxB_set 
   2.24e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 247 mwork 1107 (use mask) (intensity: 9.22e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000101 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000621 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000511 sec ]
 [ GrB_Matrix_nvals 
   1.32e-07 sec ]
 [ GrB_Matrix_nvals 
   1.37e-07 sec ]
 [ GxB_set 
   2.05e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1438 mwork 9587 (use mask) (intensity: 7.51e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000585 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000867 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000697 sec ]
 [ GrB_Matrix_nvals 
   1.84e-07 sec ]
 [ GrB_Matrix_nvals 
   6.31e-08 sec ]
 [ GxB_set 
   2.53e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 13127 mwork 91444 (use mask) (intensity: 7.12e-05 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.00695 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00159 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00222 sec ]
 [ GrB_Matrix_nvals 
   1.95e-07 sec ]
 [ GrB_Matrix_nvals 
   1.23e-07 sec ]
 [ GxB_set 
   2.76e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 126864 mwork 893775 (use mask) (nthreads 15 coarse hash: 1 fine hash: 16) 
   0.0126 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0072 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00689 sec ]
 [ GrB_Matrix_nvals 
   3.14e-07 sec ]
 [ GrB_Matrix_nvals 
   1.88e-07 sec ]
 [ GxB_set 
   2.4e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.19871e+06 (use dense mask in-place) (nthreads 18 coarse hash: 1 fine hash: 18) 
   0.0471 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.033 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.17 sec ]
 [ GrB_Matrix_nvals 
   7.04e-07 sec ]
 [ GrB_Matrix_nvals 
   1.47e-07 sec ]
 [ GxB_set 
   2.31e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 1.5254e+07 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 157) 
   0.315 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.33 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.252 sec ]
 [ GrB_Matrix_nvals 
   9.84e-07 sec ]
 [ GrB_Matrix_nvals 
   2.31e-07 sec ]
 [ GxB_set 
   2.85e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 4.10533e+08 (use dense mask) (nthreads 40 fine: 147) 
   1.12 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0735 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.276 sec ]
 [ GrB_Matrix_nvals 
   4.98e-07 sec ]
 [ GrB_Matrix_nvals 
   2.2e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0505 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   1.69 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0931 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.133 sec ]
 [ GrB_Matrix_nvals 
   1.11e-06 sec ]
 [ GrB_Matrix_nvals 
   2.38e-07 sec ]
 [ GxB_set 
   5.37e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1225 (sparse to bitmap) 
   0.135 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0582 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0264 sec ]
 [ GrB_Matrix_nvals 
   5.42e-07 sec ]
 [ GrB_Matrix_nvals 
   1.33e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0156 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 4.0952e+07 mwork 71 (use mask) (nthreads 40 coarse hash: 1 fine: 160) 
   0.0463 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000637 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.00753 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0989 sec ]
BC time 40:       9.5266 (sec)

Trial 11 : sources: [ 50501084 30130061 41185893 56495703 ]
 [ GxB_set (sparse to bitmap) 
   0.0273 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 52 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   7.42e-05 sec ]
 [ GrB_Matrix_nvals 
   7.74e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.8e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.14e-05 sec ]
 [ GxB_set 
   4.59e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 14401 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000869 sec ]
 [ GrB_Matrix_nvals 
   6.1e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000526 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000411 sec ]
 [ GxB_set 
   2.09e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 6.61269e+07 (use dense mask) (nthreads 40 fine: 136) 
   0.165 sec ]
 [ GrB_Matrix_nvals 
   2.38e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.00261 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0113 sec ]
 [ GxB_set 
   5.62e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.47451e+09 (use dense mask) (nthreads 40 fine: 156) 
   2.03 sec ]
 [ GrB_Matrix_nvals 
   4.41e-07 sec ]
 [ GrB_apply (shallow-op) (sparse to bitmap) 
   0.0484 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0434 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0472 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   1.01 sec ]
 [ GrB_Matrix_nvals 
   4.36e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.051 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0592 sec ]
 [ GxB_set 
   4.72e-07 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (B<!B>=S'*B) 
   0.169 sec ]
 [ GrB_Matrix_nvals 
   2.98e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 
   0.0307 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0379 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0278 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 8.94597e+07 (use dense mask) (nthreads 40 fine: 136) 
   0.331 sec ]
 [ GrB_Matrix_nvals 
   4.63e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.000556 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0072 sec ]
 [ GxB_set 
   5.77e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 8.35742e+06 (use dense mask in-place) (nthreads 40 coarse hash: 1 fine hash: 125) 
   0.0903 sec ]
 [ GrB_Matrix_nvals 
   6.07e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.00694 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00259 sec ]
 [ GxB_set 
   3.83e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 749355 (use dense mask in-place) (nthreads 11 coarse hash: 2 fine hash: 10) 
   0.0187 sec ]
 [ GrB_Matrix_nvals 
   5.23e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.000959 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.000757 sec ]
 [ GxB_set 
   2.6e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 66695 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.00416 sec ]
 [ GrB_Matrix_nvals 
   1.25e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   8.6e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   6.07e-05 sec ]
 [ GxB_set 
   2.24e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7506 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000542 sec ]
 [ GrB_Matrix_nvals 
   1.12e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.87e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1.74e-05 sec ]
 [ GxB_set 
   1.33e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1401 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   0.000109 sec ]
 [ GrB_Matrix_nvals 
   1.11e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.26e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   1e-05 sec ]
 [ GxB_set 
   1.36e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1133 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   6.8e-05 sec ]
 [ GrB_Matrix_nvals 
   5.98e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.18e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   9.67e-06 sec ]
 [ GxB_set 
   1.24e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 832 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   5.75e-05 sec ]
 [ GrB_Matrix_nvals 
   6.89e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.14e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.8e-06 sec ]
 [ GxB_set 
   1.24e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 427 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   4.57e-05 sec ]
 [ GrB_Matrix_nvals 
   4.8e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.1e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   8.63e-06 sec ]
 [ GxB_set 
   1.56e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 155 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   3.49e-05 sec ]
 [ GrB_Matrix_nvals 
   4.68e-08 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   1.03e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   7.94e-06 sec ]
 [ GxB_set 
   1.3e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 7 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   2.87e-05 sec ]
 [ GrB_Matrix_nvals 
   5.8e-08 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.0358 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000468 sec ]
 [ GrB_Matrix_nvals 
   3.6e-07 sec ]
 [ GrB_Matrix_nvals 
   6.8e-08 sec ]
 [ GxB_set 
   5.14e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1 mwork 2 (use mask) (intensity: 2.04e-09 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   6.86e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000406 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00154 sec ]
 [ GrB_Matrix_nvals 
   1.59e-07 sec ]
 [ GrB_Matrix_nvals 
   1.94e-07 sec ]
 [ GxB_set 
   2.06e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 5 mwork 10 (use mask) (intensity: 1.02e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.38e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000408 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000438 sec ]
 [ GrB_Matrix_nvals 
   1.07e-07 sec ]
 [ GrB_Matrix_nvals 
   1.26e-07 sec ]
 [ GxB_set 
   2.38e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 13 mwork 22 (use mask) (intensity: 2.38e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.42e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00045 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00159 sec ]
 [ GrB_Matrix_nvals 
   1.21e-07 sec ]
 [ GrB_Matrix_nvals 
   1.23e-07 sec ]
 [ GxB_set 
   2.63e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 49 mwork 49 (use mask) (intensity: 6.67e-08 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   5.69e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000474 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000448 sec ]
 [ GrB_Matrix_nvals 
   1.01e-07 sec ]
 [ GrB_Matrix_nvals 
   1.85e-07 sec ]
 [ GxB_set 
   2.46e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 111 mwork 247 (use mask) (intensity: 2.44e-07 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   6.44e-05 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000509 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000466 sec ]
 [ GrB_Matrix_nvals 
   1.08e-07 sec ]
 [ GrB_Matrix_nvals 
   3.77e-07 sec ]
 [ GxB_set 
   2.49e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 335 mwork 1831 (use mask) (intensity: 1.48e-06 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.000128 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000636 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000549 sec ]
 [ GrB_Matrix_nvals 
   1.8e-07 sec ]
 [ GrB_Matrix_nvals 
   8.38e-08 sec ]
 [ GxB_set 
   2.33e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 2469 mwork 16393 (use mask) (intensity: 1.28e-05 workspace/(nnz(A)+nnz(B)): 0.0419) (nthreads 1 coarse hash: 1) 
   0.00114 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00093 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.000851 sec ]
 [ GrB_Matrix_nvals 
   1.79e-07 sec ]
 [ GrB_Matrix_nvals 
   1.11e-07 sec ]
 [ GxB_set 
   2.66e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 22977 mwork 159883 (use mask) (intensity: 0.000125 workspace/(nnz(A)+nnz(B)): 0.168) (nthreads 2 coarse hash: 3) 
   0.00743 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.00406 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.00225 sec ]
 [ GrB_Matrix_nvals 
   3.37e-07 sec ]
 [ GrB_Matrix_nvals 
   4.8e-08 sec ]
 [ GxB_set 
   1.8e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 214840 mwork 1.57922e+06 (use mask) (nthreads 27 coarse hash: 1 fine hash: 28) 
   0.0178 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0129 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) masker:(S:H{S}=S) 
   0.0114 sec ]
 [ GrB_Matrix_nvals 
   3.3e-07 sec ]
 [ GrB_Matrix_nvals 
   1.26e-07 sec ]
 [ GxB_set 
   2.58e-07 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 2.15473e+06 (use dense mask in-place) (nthreads 32 coarse hash: 1 fine hash: 33) 
   0.0657 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.066 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.187 sec ]
 [ GrB_Matrix_nvals 
   4.66e-07 sec ]
 [ GrB_Matrix_nvals 
   2.55e-07 sec ]
 [ GxB_set 
   2.27e-06 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{B}=S*S) axbwork 3.26511e+07 (use dense mask) (nthreads 40 fine: 133) 
   0.31 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.0402 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) masker:(B:H{B}=B) (bitmap to sparse) 
   0.278 sec ]
 [ GrB_Matrix_nvals 
   5.33e-07 sec ]
 [ GrB_Matrix_nvals 
   2.15e-07 sec ]
 [ GxB_set (sparse to bitmap) 
   0.0483 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (B{B}=S'*B) 
   2.39 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.133 sec ]
 [ GrB_eWiseMult emult:(B<B>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct,replace> = A 
   0.189 sec ]
 [ GrB_Matrix_nvals 
   6.2e-07 sec ]
 [ GrB_Matrix_nvals 
   3.8e-07 sec ]
 [ GxB_set 
   4.63e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 1280 (sparse to bitmap) 
   1.01 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0831 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.052 sec ]
 [ GrB_Matrix_nvals 
   3.18e-07 sec ]
 [ GrB_Matrix_nvals 
   2.44e-07 sec ]
 [ GxB_set 
   4.78e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product dot3 (S{S}=S'*B) nthreads 40 ntasks 923 (sparse to bitmap) 
   0.0518 sec ]
 [ GrB_eWiseMult emult:(B<.>=B.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0522 sec ]
 [ GrB_eWiseMult emult:(S<S>=F.*B) (C<M>=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit4:whole C<M,struct,replace> = A 
   0.0215 sec ]
 [ GrB_Matrix_nvals 
   4.93e-07 sec ]
 [ GrB_Matrix_nvals 
   2.19e-07 sec ]
 [ GxB_set (bitmap to sparse) 
   0.0154 sec ]
 [ GrB_mxm C<M>=A*B, saxpy (S{S}=S*S) axbwork 1.1266e+07 mwork 52 (use mask) (nthreads 40 coarse hash: 2 fine: 158) 
   0.0189 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) emult:(S<.>=S.*B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z 
   0.000613 sec ]
 [ GrB_assign (C empty) (pending: 0) Method 21: (C full) = scalar 
   0.00869 sec ]
 [ GrB_reduce C=A*B, saxpy (B=F*F) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z packed) 
   0.0926 sec ]
BC time 40:       9.4947 (sec)

Trial 12 : sources: [ 45663305 33359460 48143058 33291513 ]
 [ GxB_set (sparse to bitmap) 
   0.0279 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic with typecast) (hyper to sparse) C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 33 (use dense mask in-place) (nthreads 1 coarse hash: 1) 
   9.54e-05 sec ]
 [ GrB_Matrix_nvals 
   5.95e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   2.52e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   2.08e-05 sec ]
 [ GxB_set 
   4.87e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.10618e+06 (use dense mask in-place) (nthreads 16 coarse hash: 1 fine hash: 17) 
   0.053 sec ]
 [ GrB_Matrix_nvals 
   2.02e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 
   0.103 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.00462 sec ]
 [ GxB_set 
   3.9e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.45854e+08 (use dense mask) (nthreads 40 fine: 140) 
   0.373 sec ]
 [ GrB_Matrix_nvals 
   4.14e-07 sec ]
 [ GrB_apply (shallow-op) 
   0.0048 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   0.0113 sec ]
 [ GxB_set 
   7.13e-07 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!B>=S*S) axbwork 1.45981e+09 (use dense mask) (nthreads 40 fine: 157) 