Script started on Sat 18 Jul 2020 10:48:55 AM CDT

[0;36mhypersparse $[0m ./do_gap_all
threads to test:  40 20 10 1
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 1.39e-05 sec ]
 [ GxB_set 1.99e-05 sec ]
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
 [ *_setElement wait (zombies: 0, pending: 64) 4.81e-05 sec ]
read time: 65.864 sec
 [ GrB_apply (shallow-op) generic 2.12 sec ]
 [ GrB_Matrix_nvals 1.11e-06 sec ]
 [ GrB_Matrix_nvals 1.26e-07 sec ]
 [ GrB_transpose (transpose) 68.9 sec ]
 [ GrB_Matrix_nvals 6.64e-07 sec ]
 [ GrB_Matrix_nvals 6.33e-08 sec ]
 [ GrB_eWiseMult emult 4.46 sec ]
 [ GrB_Matrix_nvals 4.39e-07 sec ]
 [ GrB_reduce 0.121 sec ]
A is symmetric
transpose time: 73.4417

========== input graph: nodes: 134217726 edges: 64

Trial 1 : sources: [ 2338012 31997659 23590940 43400604 ]

 [ GrB_assign (C empty) Method 21: (C full) = scalar calloc 0.244 sec ]
 [ GrB_mxm wait (zombies: 0, pending: 4) generic (hyper to sparse) (M full) C<!M>=A*B, saxpy axbflops 2587 Mwork 5.36871e+08 (discard mask) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) (mask later) mask 0.000326 sec ]
 [ GrB_Matrix_nvals 5.94e-07 sec ]
 [ GrB_apply (shallow-op) 3.19e-05 sec ]
 [ GrB_assign (C full) (C full) Method 23: (C full) += Z 0.000149 sec ]
 [ GrB_mxm (M full) C<!M>=A*B, saxpy axbflops 3.72225e+07 Mwork 5.36871e+08 (use mask) nthreads 40 ntasks 162 coarse: (gus: 0 hash: 0) fine: (gus: 162 hash: 0) 0.251 sec ]
 [ GrB_Matrix_nvals 6.16e-07 sec ]
 [ GrB_apply (shallow-op) 0.00333 sec ]
 [ GrB_assign (C full) (C full) Method 23: (C full) += Z 0.0175 sec ]
 [ GrB_mxm (M full) C<!M>=A*B, saxpy axbflops 6.41067e+09 Mwork 5.36871e+08 (use mask) nthreads 40 ntasks 162 coarse: (gus: 0 hash: 0) fine: (gus: 162 hash: 0) 11.5 sec ]
 [ GrB_Matrix_nvals 4.97e-07 sec ]
 [ GrB_apply (shallow-op) 0.0597 sec ]
 [ GrB_assign (C full) (C full) Method 23: (C full) += Z 0.0983 sec ]
 [ GrB_mxm (M full) C<!M>=A*B, saxpy axbflops 1.03031e+10 Mwork 5.36871e+08 (use mask) nthreads 40 ntasks 161 coarse: (gus: 0 hash: 0) fine: (gus: 161 hash: 0) 9.26 sec ]
 [ GrB_Matrix_nvals 5.95e-07 sec ]
 [ GrB_apply (shallow-op) 0.0248 sec ]
 [ GrB_assign (C full) (C full) Method 23: (C full) += Z 0.0648 sec ]
 [ GrB_mxm (M full) C<!M>=A*B, saxpy axbflops 1.41549e+08 Mwork 5.36871e+08 (use mask) nthreads 40 ntasks 162 coarse: (gus: 0 hash: 0) fine: (gus: 162 hash: 0) 0.744 sec ]
 [ GrB_Matrix_nvals 7.22e-07 sec ]
 [ GrB_apply (shallow-op) 0.000583 sec ]
 [ GrB_assign (C full) (C full) Method 23: (C full) += Z 0.00246 sec ]
 [ GrB_mxm (M full) C<!M>=A*B, saxpy axbflops 380572 Mwork 5.36871e+08 (discard mask) nthreads 5 ntasks 5 coarse: (gus: 0 hash: 2) fine: (gus: 0 hash: 3) (mask later) (C<!M>=Z via assign) (C cleared early) (C empty) Method 14: C(:,:)<!M> = Z ; using S 0.0807 sec ]
 [ GrB_Matrix_nvals wait (zombies: 0, pending: 1022) (hyper to sparse) 2.64e-05 sec ]
 [ GrB_apply (shallow-op) 1.07e-05 sec ]
 [ GrB_assign (C full) (C full) Method 23: (C full) += Z 4.45e-05 sec ]
 [ GrB_mxm (M full) C<!M>=A*B, saxpy axbflops 1029 Mwork 5.36871e+08 (discard mask) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) (mask later) mask 0.000376 sec ]
 [ GrB_Matrix_nvals 1.51e-07 sec ]
 [ GrB_apply (shallow-op) 7.95e-06 sec ]
 [ GrB_assign (C full) (C full) Method 23: (C full) += Z 1.22e-05 sec ]
 [ GrB_mxm (M full) C<!M>=A*B, saxpy axbflops 7 Mwork 4.02653e+08 (discard mask) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) (mask later) (C<!M>=Z via assign) (C cleared early) (C empty) Method 14: C(:,:)<!M> = Z ; using S 0.000139 sec ]
 [ GrB_Matrix_nvals 1.55e-07 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0781 sec ]
 [ GrB_eWiseMult (A full) (B full) (mask is easy) masked_emult 0.0018 sec ]
 [ GrB_mxm C<M>=A*B, saxpy axbflops 7 Mwork 1007 (discard mask) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) (mask later) (C<M>=Z via assign) (C cleared early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000622 sec ]
 [ GrB_eWiseMult wait (zombies: 0, pending: 7) (hyper to sparse) (C full) (B full) emult (C+=Z via assign) (C full) Method 23: (C full) += Z 0.000849 sec ]
 [ GrB_eWiseMult (A full) (B full) (mask is easy) masked_emult 0.000586 sec ]
 [ GrB_mxm C<M>=A*B, saxpy axbflops 1029 Mwork 377880 (discard mask) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) (mask later) mask 0.00184 sec ]
 [ GrB_eWiseMult (C full) (B full) emult (C+=Z via assign) (C full) Method 23: (C full) += Z 0.000871 sec ]
 [ GrB_eWiseMult (A full) (B full) (mask is easy) masked_emult 0.00254 sec ]
 [ GrB_mxm C<M>=A*B, saxpy axbflops 380572 Mwork 6.67667e+07 (discard mask) nthreads 5 ntasks 5 coarse: (gus: 0 hash: 2) fine: (gus: 0 hash: 3) (mask later) (C<M>=Z via assign) (C cleared early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.155 sec ]
 [ GrB_eWiseMult wait (zombies: 0, pending: 376734) (hyper to sparse) (C full) (B full) emult (C+=Z via assign) (C full) Method 23: (C full) += Z 0.00764 sec ]
 [ GrB_eWiseMult (A full) (B full) (mask is easy) masked_emult 0.0963 sec ]
 [ GrB_mxm C<M>=A*B, saxpy axbflops 1.41549e+08 Mwork 1.74511e+08 (use mask) nthreads 40 ntasks 162 coarse: (gus: 0 hash: 0) fine: (gus: 162 hash: 0) 1.08 sec ]
 [ GrB_eWiseMult (C full) (B full) emult (C+=Z via assign) (C full) Method 23: (C full) += Z 0.0977 sec ]
 [ GrB_eWiseMult (A full) (B full) (mask is easy) masked_emult 0.172 sec ]
 [ GrB_mxm C<M>=A*B, saxpy axbflops 1.03031e+10 Mwork 1.04727e+07 (use mask) nthreads 40 ntasks 163 coarse: (gus: 0 hash: 0) fine: (gus: 163 hash: 0) 12.7 sec ]
 [ GrB_eWiseMult (C full) (B full) emult (C+=Z via assign) (C full) Method 23: (C full) += Z 0.0341 sec ]
 [ GrB_eWiseMult (A full) (B full) (mask is easy) masked_emult 0.0251 sec ]
 [ GrB_mxm C<M>=A*B, saxpy axbflops 3.81898e+09 Mwork 2587 (use mask) nthreads 40 ntasks 156 coarse: (gus: 3 hash: 0) fine: (gus: 153 hash: 0) 5.2 sec ]
 [ GrB_eWiseMult (C full) (B full) emult (C+=Z via assign) (C full) Method 23: (C full) += Z 0.00137 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0185 sec ]
 [ GrB_reduce (C+=Z via assign) (C full) Method 23: (C full) += Z (Z dense) 1.59 sec ]
Batch v4 time 40:      43.7351 (sec)


