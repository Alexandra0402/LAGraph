
hypersparse $ ./do_hpec21_tcc
 
======================================================================
benchmarks using LAGraph+GraphBLAS: Triangle Centrality
======================================================================
./do_hpec21_tcc: line 18: KIND: command not found
SuiteSparse:GraphBLAS v5.1.6 [July 31, 2021]
# of trials: 3
threads to test:  40
matrix: /raid/matrices/as-Skitter/as-Skitter.mtx
[.mtx]
Reading matrix market file: /raid/matrices/as-Skitter/as-Skitter.mtx
read time: 5.42041
 [ GxB_select (iso select) 
   0.0145 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   0.265 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   0.00021 sec ]
 [ GrB_reduce (wait:A 2319807 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 5.58, intensity: 5.17: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.0346 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.00546 sec ]
 [ GrB_reduce (A full) 
   0.000376 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00405 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 5.58, intensity: 5.17: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.0184 sec ]
 [ GrB_apply (in-place-op) 
   0.000378 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00826 sec ]
 [ GrB_apply (in-place-op) 
   0.00161 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.00043 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.00137 sec ]
 [ GrB_apply (in-place-op) 
   0.000101 sec ]
# of triangles: 2.87699e+07

start trial 0
 [ GxB_select (iso select) 
   0.0152 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   0.262 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   4.22e-05 sec ]
 [ GrB_reduce (wait:A 2319807 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 5.58, intensity: 5.17: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.0333 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.00444 sec ]
 [ GrB_reduce (A full) 
   0.00188 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00466 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 5.58, intensity: 5.17: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.0197 sec ]
 [ GrB_apply (in-place-op) 
   0.000309 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00811 sec ]
 [ GrB_apply (in-place-op) 
   0.00216 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.000435 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.00129 sec ]
 [ GrB_apply (in-place-op) 
   0.000111 sec ]
# of triangles: 2.87699e+07
trial  0:     0.353843 sec rate  62.71

start trial 1
 [ GxB_select (iso select) 
   0.0142 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   0.263 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   2.36e-05 sec ]
 [ GrB_reduce (wait:A 2319807 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 5.58, intensity: 5.17: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.0329 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.00522 sec ]
 [ GrB_reduce (A full) 
   0.000124 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00361 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 5.58, intensity: 5.17: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.0173 sec ]
 [ GrB_apply (in-place-op) 
   0.000313 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00826 sec ]
 [ GrB_apply (in-place-op) 
   0.0022 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.00028 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.00138 sec ]
 [ GrB_apply (in-place-op) 
   9.83e-05 sec ]
# of triangles: 2.87699e+07
trial  1:     0.348994 sec rate  63.58

start trial 2
 [ GxB_select (iso select) 
   0.0151 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   0.262 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   0.000207 sec ]
 [ GrB_reduce (wait:A 2319807 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 5.58, intensity: 5.17: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.0326 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.00529 sec ]
 [ GrB_reduce (A full) 
   0.00014 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00406 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 5.58, intensity: 5.17: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.0189 sec ]
 [ GrB_apply (in-place-op) 
   0.000325 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00858 sec ]
 [ GrB_apply (in-place-op) 
   0.00225 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.000451 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.00144 sec ]
 [ GrB_apply (in-place-op) 
   0.000101 sec ]
# of triangles: 2.87699e+07
trial  2:     0.352077 sec rate  63.03
nthreads:  40 time:     0.351638 rate:  63.11
Avg: TCentrality threads: 40  time:      0.352 sec, matrix: /raid/matrices/as-Skitter/as-Skitter.mtx
SuiteSparse:GraphBLAS v5.1.6 [July 31, 2021]
# of trials: 3
threads to test:  40
matrix: /raid/matrices/com-LiveJournal/com-LiveJournal.mtx
[.mtx]
Reading matrix market file: /raid/matrices/com-LiveJournal/com-LiveJournal.mtx
read time: 17.5419
 [ GxB_select (iso select) 
   0.0343 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   0.993 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   3.66e-05 sec ]
 [ GrB_reduce (wait:A 5809704 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 4.34, intensity: 7.22: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.0724 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.00703 sec ]
 [ GrB_reduce (A full) 
   0.000351 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00721 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 4.34, intensity: 7.22: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.0338 sec ]
 [ GrB_apply (in-place-op) 
   0.00179 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0185 sec ]
 [ GrB_apply (in-place-op) 
   0.00407 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.00207 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.0044 sec ]
 [ GrB_apply (in-place-op) 
   0.000251 sec ]
# of triangles: 1.7782e+08

start trial 0
 [ GxB_select (iso select) 
   0.0345 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   0.994 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   0.000209 sec ]
 [ GrB_reduce (wait:A 5809704 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 4.34, intensity: 7.22: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.0758 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.00618 sec ]
 [ GrB_reduce (A full) 
   0.000338 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00721 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 4.34, intensity: 7.22: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.0341 sec ]
 [ GrB_apply (in-place-op) 
   0.000625 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0183 sec ]
 [ GrB_apply (in-place-op) 
   0.00145 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.00141 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.00558 sec ]
 [ GrB_apply (in-place-op) 
   0.000251 sec ]
# of triangles: 1.7782e+08
trial  0:     1.181065 sec rate  58.73

start trial 1
 [ GxB_select (iso select) 
   0.0367 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   0.993 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   3.67e-05 sec ]
 [ GrB_reduce (wait:A 5809704 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 4.34, intensity: 7.22: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.0754 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.0061 sec ]
 [ GrB_reduce (A full) 
   0.000373 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00729 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 4.34, intensity: 7.22: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.0326 sec ]
 [ GrB_apply (in-place-op) 
   0.000646 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0184 sec ]
 [ GrB_apply (in-place-op) 
   0.00182 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.00141 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.0068 sec ]
 [ GrB_apply (in-place-op) 
   0.000254 sec ]
# of triangles: 1.7782e+08
trial  1:     1.182254 sec rate  58.67

start trial 2
 [ GxB_select (iso select) 
   0.0368 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   0.994 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   3.88e-05 sec ]
 [ GrB_reduce (wait:A 5809704 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 4.34, intensity: 7.22: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.0713 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.00766 sec ]
 [ GrB_reduce (A full) 
   0.000337 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.00716 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 4.34, intensity: 7.22: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.0323 sec ]
 [ GrB_apply (in-place-op) 
   0.00174 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0186 sec ]
 [ GrB_apply (in-place-op) 
   0.00144 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.00138 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.00652 sec ]
 [ GrB_apply (in-place-op) 
   0.000272 sec ]
# of triangles: 1.7782e+08
trial  2:     1.180162 sec rate  58.77
nthreads:  40 time:     1.181160 rate:  58.72
Avg: TCentrality threads: 40  time:      1.181 sec, matrix: /raid/matrices/com-LiveJournal/com-LiveJournal.mtx
SuiteSparse:GraphBLAS v5.1.6 [July 31, 2021]
# of trials: 3
threads to test:  40
matrix: /raid/matrices/com-Orkut/com-Orkut.mtx
[.mtx]
Reading matrix market file: /raid/matrices/com-Orkut/com-Orkut.mtx
read time: 58.4579
 [ GxB_select (iso select) 
   0.0896 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   9.49 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   4.32e-05 sec ]
 [ GrB_reduce (wait:A 15988540 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 1.14, intensity: 32.9: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.209 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.0138 sec ]
 [ GrB_reduce (A full) 
   0.00036 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0229 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 1.14, intensity: 32.9: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.102 sec ]
 [ GrB_apply (in-place-op) 
   0.000534 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0553 sec ]
 [ GrB_apply (in-place-op) 
   0.000453 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.000866 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.00412 sec ]
 [ GrB_apply (in-place-op) 
   0.000136 sec ]
# of triangles: 6.27584e+08

start trial 0
 [ GxB_select (iso select) 
   0.0804 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   9.52 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   0.00025 sec ]
 [ GrB_reduce (wait:A 15988540 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 1.14, intensity: 32.9: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.207 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.0143 sec ]
 [ GrB_reduce (A full) 
   0.000759 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0217 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 1.14, intensity: 32.9: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.101 sec ]
 [ GrB_apply (in-place-op) 
   0.000322 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0549 sec ]
 [ GrB_apply (in-place-op) 
   0.000876 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.000893 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.0036 sec ]
 [ GrB_apply (in-place-op) 
   0.000145 sec ]
# of triangles: 6.27584e+08
trial  0:    10.008465 sec rate  23.42

start trial 1
 [ GxB_select (iso select) 
   0.0805 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   9.51 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   4.37e-05 sec ]
 [ GrB_reduce (wait:A 15988540 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 1.14, intensity: 32.9: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.21 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.0143 sec ]
 [ GrB_reduce (A full) 
   0.00032 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0221 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 1.14, intensity: 32.9: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.102 sec ]
 [ GrB_apply (in-place-op) 
   0.000339 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0549 sec ]
 [ GrB_apply (in-place-op) 
   0.00172 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.000855 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.00496 sec ]
 [ GrB_apply (in-place-op) 
   0.00014 sec ]
# of triangles: 6.27584e+08
trial  1:     9.998905 sec rate  23.44

start trial 2
 [ GxB_select (iso select) 
   0.0804 sec ]
 [ GrB_mxm (iso mask: struct) C<M>=A'*B, masked_dot_product (dot3) (S{S}=S'*S) nthreads 40 ntasks 1280 
   9.62 sec ]
 [ GrB_assign (iso assign) (pending: 0) Method 21: (C full) = scalar (sparse to full) 
   3.64e-05 sec ]
 [ GrB_reduce (wait:A 15988540 zombies, 0 pending) C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 1.14, intensity: 32.9: atomic) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.226 sec ]
 [ GrB_reduce C=A'*B, dot_product (dot4) (F+=S'*F) (C in place) 
   0.0154 sec ]
 [ GrB_reduce (A full) 
   0.00351 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0232 sec ]
 [ GrB_mxv C=A*B, saxpy (B=S*F) (bitmap saxpy) (fine, threads: 40, relwspace: 1.14, intensity: 32.9: atomic) (C+=Z via assign) (pending: 0) Method: bitmap_subassign Method:bit5:whole C += A 
   0.102 sec ]
 [ GrB_apply (in-place-op) 
   0.000329 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (B=S'*F) 
   0.0554 sec ]
 [ GrB_apply (in-place-op) 
   0.00215 sec ]
 [ GrB_Vector_dup (iso dup) 
   0.0016 sec ]
 [ GrB_eWiseAdd add:(F<.>=Bf+B) (C+=Z via assign) (pending: 0) Method 23: (C full) += Z (Z bitmap/as-if-full) 
   0.009 sec ]
 [ GrB_apply (in-place-op) 
   0.000687 sec ]
# of triangles: 6.27584e+08
trial  2:    10.141911 sec rate  23.11
nthreads:  40 time:    10.049760 rate:  23.32
Avg: TCentrality threads: 40  time:     10.050 sec, matrix: /raid/matrices/com-Orkut/com-Orkut.mtx
