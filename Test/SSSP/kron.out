matrix: /raid/hyper/gapbs/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /raid/hyper/gapbs/GAP/GAP-kron/GAP-kron.grb
sources: /raid/hyper/gapbs/GAP/GAP-kron/GAP-kron_sources.mtx
read time: 37.1835 sec

  134217726x134217726 GraphBLAS int32_t matrix, sparse by row:
  A, 4223264644 entries

    (1,83111928)   84
    (2,113772338)   43
    (9,26920261)   168
    (9,33335674)   144
    (9,90905511)   183
    (9,92964069)   143
    (9,126874301)   149
    (11,3075467)   7
    (11,11283179)   223
    (11,14136330)   205
    (11,18241662)   216
    (11,21256905)   201
    (11,26197037)   116
    (11,34992956)   58
    (11,49762924)   255
    (11,54231301)   7
    (11,55275316)   181
    (11,55896288)   250
    (11,56613538)   19
    (11,69378808)   233
    (11,76391974)   143
    (11,77970070)   97
    (11,80121717)   45
    (11,113872174)   215
    (11,115829864)   9
    (11,125066355)   241
    (11,129708509)   64
    (11,131285585)   134
    (11,132549336)   65
    (14,11049596)   160
    ...

  64x1 GraphBLAS double matrix, hypersparse by row:
  SourceNodes, no entries
  pending tuples: 64 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  double size: 8
    row: 0 col: 0    2338013
    row: 1 col: 0    31997660
    row: 2 col: 0    23590941
    row: 3 col: 0    43400605
    row: 4 col: 0    75337938
    row: 5 col: 0    169868
    row: 6 col: 0    104041221
    row: 7 col: 0    94177943
    row: 8 col: 0    32871358
    row: 9 col: 0    56230003
    row: 10 col: 0    69883038
    row: 11 col: 0    9346346
    row: 12 col: 0    48915359
    row: 13 col: 0    122571174
    row: 14 col: 0    6183280
    row: 15 col: 0    86323664
    row: 16 col: 0    106725781
    row: 17 col: 0    92389939
    row: 18 col: 0    16210739
    row: 19 col: 0    59816701
    row: 20 col: 0    111669930
    row: 21 col: 0    102831412
    row: 22 col: 0    113384801
    row: 23 col: 0    43872565
    row: 24 col: 0    80508828
    row: 25 col: 0    26105649
    row: 26 col: 0    8807517
    row: 27 col: 0    118452456
    row: 28 col: 0    121818860
    row: 29 col: 0    42361929
    row: 30 col: 0    29493054
    row: 31 col: 0    98461504
    row: 32 col: 0    71931338
    row: 33 col: 0    103808469
    row: 34 col: 0    4092346
    row: 35 col: 0    115276242
    row: 36 col: 0    4649344
    row: 37 col: 0    76656190
    row: 38 col: 0    31312002
    row: 39 col: 0    111334128
    row: 40 col: 0    100962919
    row: 41 col: 0    41823216
    row: 42 col: 0    22631241
    row: 43 col: 0    42848462
    row: 44 col: 0    79485149
    row: 45 col: 0    106818743
    row: 46 col: 0    73347975
    row: 47 col: 0    78848446
    row: 48 col: 0    109920511
    row: 49 col: 0    121492134
    row: 50 col: 0    101037297
    row: 51 col: 0    15438601
    row: 52 col: 0    4584785
    row: 53 col: 0    124503846
    row: 54 col: 0    87241744
    row: 55 col: 0    108297009
    row: 56 col: 0    33955083
    row: 57 col: 0    79934824
    row: 58 col: 0    8608482
    row: 59 col: 0    82435064
    row: 60 col: 0    46579272
    row: 61 col: 0    515422
    row: 62 col: 0    121530468
    row: 63 col: 0    127978737
  pending operator: implicit 2nd


========== input graph: nodes: 134217726 edges: 4223264644
Starting Single Source Shortest Paths Tests
 - nthreads: 40

Trial 0 : sources: 2338013
 - Start Test: Bellman-Ford Single Source Shortest Paths
BF_pure_c     time: 6.106212e+02 (sec), rate: 6.91634 (1e6 edges/sec)
 - Start Test: delta-stepping Single Source Shortest Paths (apply operator)
