threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 1.37e-05 sec ]
 [ GxB_set 0.0234 sec ]
 [ GrB_Matrix_nvals 1.27e-05 sec ]
delta: 32
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 4.24e-05 sec ]
read time: 48.7367 sec
 [ GrB_apply (shallow-op) 6.11 sec ]
 [ GrB_Matrix_nvals 5.48e-07 sec ]
 [ GrB_Matrix_nvals 9.31e-08 sec ]
 [ GrB_apply (A full) (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_isone_double)) 2.63e-05 sec ]
 [ GrB_reduce (A full) 1.85e-05 sec ]
 [ GrB_Matrix_extractTuples (A full) 2.54e-05 sec ]
A is symmetric
transpose time: 6.50063e-07
input graph: nodes: 134217726 edges: 4223264644 max nthreads 40
# of source nodes: 64

 [ GxB_set (vector option) (sparse to bitmap) 0.00522 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 2.57e-05 sec ]
 [ GxB_select 1.45 sec ]
 [ GxB_select 2.65 sec ]
delta: 32
 [ GrB_Matrix_nvals 5.09e-07 sec ]
AL nnz: 0.537148 billion
 [ GrB_Matrix_nvals 5.4e-08 sec ]
AH nnz: 3.68612 billion
 [ GrB_assign (wait: 0 zombies, 1 pending) (hyper to sparse) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0171 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 5.49e-05 sec ]
 [ GrB_Vector_nvals 3.58e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 342 mwork 0 (nthreads 1 fine hash: 1) 0.000112 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) (hyper to sparse) Method 05: C(:,:)<M> = scalar ; no S 3.36e-05 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000854 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 2.32e-05 sec ]
 [ GxB_select masker:(S:S<S>=S) 7.86e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 7.01e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 629939 mwork 0 (nthreads 9 fine hash: 10) 0.00955 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.63e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0476 sec ]
 [ GrB_assign (wait: 0 zombies, 342 pending) (generic build with typecast) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00425 sec ]
 [ GxB_select masker:(S:S<S>=S) 0.00445 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00621 sec ]
 [ GrB_Vector_nvals 5.35e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.52641e+08 mwork 0 (nthreads 40 fine: 160) (sparse to bitmap) 0.468 sec ]
 [ GrB_assign (wait: 0 zombies, 337 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00421 sec ]
 [ GrB_Vector_nvals 4.06e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0489 sec ]
 [ GrB_assign (wait: 0 zombies, 495024 pending) (generic build with typecast) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.0819 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S<B>=B) 0.147 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0362 sec ]
 [ GrB_Vector_nvals 5.25e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 1.25 sec ]
 [ GrB_assign (wait: 0 zombies, 273908 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.0604 sec ]
 [ GrB_Vector_nvals 5.2e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0482 sec ]
 [ GrB_assign (wait: 0 zombies, 18911347 pending) (generic build with typecast) add:(S<.>=S+H) (sparse to bitmap) Method:bit2:whole C<M,bitmap> = scalar 0.0584 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A 0.134 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0374 sec ]
 [ GrB_Vector_nvals 4.19e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 1.08 sec ]
 [ GrB_assign (wait: 0 zombies, 13172495 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.145 sec ]
 [ GrB_Vector_nvals 3.13e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0473 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.028 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A 0.133 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0359 sec ]
 [ GrB_Vector_nvals 3.78e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.495 sec ]
 [ GrB_assign (wait: 0 zombies, 13475107 pending) add:(S<.>=S+H) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = scalar 0.058 sec ]
 [ GrB_Vector_nvals 5.05e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0451 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0216 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A 0.128 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0323 sec ]
 [ GrB_Vector_nvals 3.84e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.134 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap,struct> = scalar 0.0166 sec ]
 [ GrB_Vector_nvals 3.04e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0447 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0145 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A 0.117 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0163 sec ]
 [ GrB_Vector_nvals 3.87e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0376 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap,struct> = scalar 0.0108 sec ]
 [ GrB_Vector_nvals 2.91e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0348 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0107 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A (bitmap to sparse) 0.119 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0119 sec ]
 [ GrB_Vector_nvals 6.09e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 97525 mwork 0 (nthreads 1 fine hash: 1) 0.0134 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 0.00132 sec ]
 [ GrB_Vector_nvals 1.7e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (C bitmap) (B bitmap) add:(S<S>=S+B) 0.00806 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000709 sec ]
 [ GxB_select masker:(S:S<S>=S) 0.002 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00104 sec ]
 [ GrB_Vector_nvals 2.14e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3114 mwork 0 (nthreads 1 fine hash: 1) 0.000464 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 6.36e-05 sec ]
 [ GrB_Vector_nvals 1.62e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00128 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 3.45e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000259 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 9.23e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 35 pending) (hyper to sparse) 1.96e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 68 mwork 0 (nthreads 1 fine hash: 1) 5.43e-05 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 1.43e-05 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000683 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.34e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000107 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.5e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.0372 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 8.91 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0722 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0486 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0499 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap,struct> = A 0.0214 sec ]
 [ GrB_Vector_nvals 4.75e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.102 sec ]
 [ GxB_select (wait: 0 zombies, 33663226 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.131 sec ]
 [ GrB_Vector_nvals 2.59e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0733 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00655 sec ]
 [ GrB_Vector_nvals 2.94e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0382 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0118 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A (bitmap to sparse) 0.12 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0112 sec ]
 [ GrB_Vector_nvals 4.68e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 65956 mwork 0 (nthreads 1 fine hash: 1) 0.0187 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 0.00208 sec ]
 [ GrB_Vector_nvals 2.18e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (C bitmap) (B bitmap) add:(S<S>=S+B) 0.00607 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.0003 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0041 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000638 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 225 pending) (hyper to sparse) 1.55e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 230 mwork 0 (nthreads 1 fine hash: 1) 0.000106 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 2.05e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000828 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.41e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000113 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.88e-05 sec ]
 [ GrB_Vector_nvals 1.7e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.034 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.245 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0456 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0155 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0151 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap,struct> = A 0.0146 sec ]
 [ GrB_Vector_nvals 2.83e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0946 sec ]
 [ GxB_select (wait: 0 zombies, 23154741 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.127 sec ]
 [ GrB_Vector_nvals 2.22e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0505 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00743 sec ]
 [ GrB_Vector_nvals 4.45e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (B bitmap) add:(S<S>=S+B) 0.00175 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.00224 sec ]
 [ GxB_select (C bitmap) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,replace> = A (bitmap to sparse) 0.0223 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00344 sec ]
 [ GrB_Vector_nvals 1.94e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12326 mwork 0 (nthreads 1 fine hash: 1) 0.00361 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 0.000604 sec ]
 [ GrB_Vector_nvals 1.56e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00212 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 5.97e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000879 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000215 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 14 pending) (hyper to sparse) 2.05e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14 mwork 0 (nthreads 1 fine hash: 1) 5.05e-05 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 1.39e-05 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000556 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.33e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000109 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.66e-05 sec ]
 [ GrB_Vector_nvals 1.64e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.0317 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.13 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0448 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0122 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0131 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap,struct> = A 0.012 sec ]
 [ GrB_Vector_nvals 3.5e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0876 sec ]
 [ GxB_select (wait: 0 zombies, 16696103 pending) (hyper to sparse) 0.00778 sec ]
 [ GrB_Vector_nvals 2.76e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 18997 mwork 0 (nthreads 1 fine hash: 1) 0.106 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00364 sec ]
 [ GrB_Vector_nvals 7.47e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (C bitmap) (B bitmap) add:(S<S>=S+B) 0.00269 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.00103 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.00145 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00071 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 4389 pending) (hyper to sparse) 2.08e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4407 mwork 0 (nthreads 1 fine hash: 1) 0.00138 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.00288 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00122 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 2.91e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000341 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000105 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 5 pending) (hyper to sparse) 1.67e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 4.45e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 4027 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00352 sec ]
 [ GrB_Vector_nvals 3.82e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000526 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.76e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000119 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.62e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 4 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0141 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.09695e+07 mwork 0 (nthreads 40 fine: 160) 0.111 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0163 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.0036 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000473 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A 0.00877 sec ]
 [ GrB_Vector_nvals 4.97e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0825 sec ]
 [ GxB_select (wait: 0 zombies, 12007189 pending) (hyper to sparse) 0.00628 sec ]
 [ GrB_Vector_nvals 2.76e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7974 mwork 0 (nthreads 1 fine hash: 1) 0.0866 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00328 sec ]
 [ GrB_Vector_nvals 6.78e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00168 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000527 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000647 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000457 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 2024 pending) (hyper to sparse) 2.23e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2026 mwork 0 (nthreads 1 fine hash: 1) 0.00073 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.0013 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000993 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 2.07e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000216 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 6.97e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 1.69e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.39e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 1895 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00159 sec ]
 [ GrB_Vector_nvals 3e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000477 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.55e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000113 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.53e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0109 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6.70697e+06 mwork 0 (nthreads 40 fine: 103) 0.0919 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0147 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00308 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000332 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A 0.00808 sec ]
 [ GrB_Vector_nvals 4.99e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0784 sec ]
 [ GxB_select (wait: 0 zombies, 8319471 pending) (hyper to sparse) 0.0038 sec ]
 [ GrB_Vector_nvals 2.64e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4184 mwork 0 (nthreads 1 fine hash: 1) 0.0733 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00316 sec ]
 [ GrB_Vector_nvals 3.58e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00135 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000312 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000379 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000289 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1134 pending) (hyper to sparse) 2.02e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1136 mwork 0 (nthreads 1 fine hash: 1) 0.000462 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000763 sec ]
 [ GrB_Vector_nvals 2.4e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000862 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.77e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.00014 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 5.61e-05 sec ]
 [ GrB_Vector_nvals 1.88e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 1080 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0126 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4.54339e+06 mwork 0 (nthreads 40 fine: 70) 0.0727 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0125 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00293 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000297 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A 0.00775 sec ]
 [ GrB_Vector_nvals 5.18e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.076 sec ]
 [ GxB_select (wait: 0 zombies, 5277051 pending) (hyper to sparse) 0.00238 sec ]
 [ GrB_Vector_nvals 3.76e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2432 mwork 0 (nthreads 1 fine hash: 1) 0.0644 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00301 sec ]
 [ GrB_Vector_nvals 4.17e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00198 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000202 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000277 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00019 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 649 pending) (hyper to sparse) 1.91e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 649 mwork 0 (nthreads 1 fine hash: 1) 0.000297 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000476 sec ]
 [ GrB_Vector_nvals 1.77e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00083 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.59e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000129 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.64e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 623 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0119 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.2853e+06 mwork 0 (nthreads 40 fine: 51) 0.0699 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0129 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00278 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000271 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A 0.00754 sec ]
 [ GrB_Vector_nvals 4.56e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0751 sec ]
 [ GxB_select (wait: 0 zombies, 2691482 pending) (hyper to sparse) 0.0012 sec ]
 [ GrB_Vector_nvals 3.33e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1531 mwork 0 (nthreads 1 fine hash: 1) 0.0571 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.0029 sec ]
 [ GrB_Vector_nvals 6.09e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00245 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000153 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000297 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000177 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 432 pending) (hyper to sparse) 2.52e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 432 mwork 0 (nthreads 1 fine hash: 1) 0.000274 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000385 sec ]
 [ GrB_Vector_nvals 2.55e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00149 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 2.12e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000162 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 5.86e-05 sec ]
 [ GrB_Vector_nvals 1.55e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 414 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00888 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.47992e+06 mwork 0 (nthreads 37 fine: 38) 0.0704 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00921 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00272 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000242 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A 0.0071 sec ]
 [ GrB_Vector_nvals 7.9e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0705 sec ]
 [ GxB_select (wait: 0 zombies, 443871 pending) (hyper to sparse) 0.000559 sec ]
 [ GrB_Vector_nvals 3.43e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 501 mwork 0 (nthreads 1 fine hash: 1) 0.0106 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.000218 sec ]
 [ GrB_Vector_nvals 1.64e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00204 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 3.86e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.00015 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 5.72e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 91 pending) (hyper to sparse) 1.8e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 91 mwork 0 (nthreads 1 fine hash: 1) 8.04e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 5.89e-05 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000694 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.35e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000109 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.57e-05 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 91 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00264 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 398528 mwork 0 (nthreads 6 fine hash: 7) 0.033 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0352 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00136 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.00031 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A (bitmap to sparse) 0.0171 sec ]
 [ GrB_Vector_nvals 5.07e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.242 sec ]
 [ GxB_select (wait: 0 zombies, 52865 pending) (hyper to sparse) 0.000513 sec ]
 [ GrB_Vector_nvals 2.64e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 25 mwork 0 (nthreads 1 fine hash: 1) 0.00139 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 3.24e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000549 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 2.25e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000122 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.12e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 6 pending) (hyper to sparse) 1.57e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 4.45e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.35e-05 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0015 sec ]
 [ GrB_assign (wait: 0 zombies, 8 pending) (generic build with typecast) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.000213 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000101 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.4e-05 sec ]
 [ GrB_Vector_nvals 2.1e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 6 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.001 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 24520 mwork 0 (nthreads 1 fine hash: 1) 0.0074 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00281 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00036 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000193 sec ]
 [ GrB_assign (wait: 0 zombies, 48 pending) (generic build with typecast) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.0032 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_assign (wait: 24431 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.229 sec ]
 [ GxB_select (wait: 0 zombies, 28490 pending) (hyper to sparse) 0.000295 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 0.000865 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 2.98e-05 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000528 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.74e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000118 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.03e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 2 pending) (hyper to sparse) 1.56e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.2e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.08e-05 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000454 sec ]
 [ GrB_assign (wait: 0 zombies, 3 pending) (generic build with typecast) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.000144 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 9.92e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.37e-05 sec ]
 [ GrB_Vector_nvals 1.58e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000595 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12298 mwork 0 (nthreads 1 fine hash: 1) 0.00407 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00182 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000214 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000105 sec ]
 [ GrB_assign (wait: 0 zombies, 31 pending) (generic build with typecast) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.00178 sec ]
 [ GrB_Vector_nvals 2.18e-07 sec ]
 [ GrB_assign (wait: 12253 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.214 sec ]
 [ GxB_select (wait: 0 zombies, 16271 pending) (hyper to sparse) 0.000187 sec ]
 [ GrB_Vector_nvals 3.04e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000569 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 2.5e-05 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000503 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 3.16e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06n: C(:,:)<M> = Z ; no S 3.9e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.88e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 2 pending) (hyper to sparse) 1.48e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.15e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.08e-05 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000462 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) (generic build with typecast) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.000115 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000104 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.36e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000419 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7229 mwork 0 (nthreads 1 fine hash: 1) 0.00251 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00141 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000143 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 6.65e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 19 pending) (generic build with typecast) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.00105 sec ]
 [ GrB_Vector_nvals 1.96e-07 sec ]
 [ GrB_assign (wait: 7206 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.208 sec ]
 [ GxB_select (wait: 0 zombies, 9086 pending) (hyper to sparse) 0.000126 sec ]
 [ GrB_Vector_nvals 2.87e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.00039 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 2.2e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000481 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.7e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000116 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.04e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 1.49e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.12e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.04e-05 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000411 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) (generic build with typecast) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.000107 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 9.77e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.34e-05 sec ]
 [ GrB_Vector_nvals 1.73e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000304 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4506 mwork 0 (nthreads 1 fine hash: 1) 0.00167 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0012 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00012 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 4.59e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 9 pending) (generic build with typecast) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.000626 sec ]
 [ GrB_Vector_nvals 2.14e-07 sec ]
 [ GrB_assign (wait: 4497 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.195 sec ]
 [ GxB_select (wait: 0 zombies, 4600 pending) (hyper to sparse) 8.41e-05 sec ]
 [ GrB_Vector_nvals 2.85e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.00026 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.95e-05 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000471 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.61e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000114 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.98e-05 sec ]
 [ GrB_Vector_nvals 1.62e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000158 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2656 mwork 0 (nthreads 1 fine hash: 1) 0.00105 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00109 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 7.99e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.000109 sec ]
 [ GrB_assign (wait: 0 zombies, 5 pending) (generic build with typecast) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.000383 sec ]
 [ GrB_Vector_nvals 3.35e-07 sec ]
 [ GrB_assign (wait: 2651 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.16 sec ]
 [ GxB_select (wait: 0 zombies, 1955 pending) (hyper to sparse) 5.93e-05 sec ]
 [ GrB_Vector_nvals 3.58e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000159 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.86e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000502 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.58e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000116 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.98e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 1.51e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.07e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.06e-05 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000426 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) (generic build with typecast) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 8.67e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 9.93e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.34e-05 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000156 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1403 mwork 0 (nthreads 1 fine hash: 1) 0.000592 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00101 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 7.57e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 2.31e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 6 pending) (generic build with typecast) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.000242 sec ]
 [ GrB_Vector_nvals 2.22e-07 sec ]
 [ GrB_assign (wait: 1399 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.109 sec ]
 [ GxB_select (wait: 0 zombies, 564 pending) (hyper to sparse) 4.55e-05 sec ]
 [ GrB_Vector_nvals 2.85e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 9.03e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.77e-05 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000456 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.13e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000112 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.97e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 4.13e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 497 mwork 0 (nthreads 1 fine hash: 1) 0.000246 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000831 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.5e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.53e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.000172 sec ]
 [ GrB_Vector_nvals 2.44e-07 sec ]
 [ GrB_assign (wait: 497 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0667 sec ]
 [ GxB_select (wait: 0 zombies, 68 pending) (hyper to sparse) 4.23e-05 sec ]
 [ GrB_Vector_nvals 1.86e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.87e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.64e-05 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.89e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 39 mwork 0 (nthreads 1 fine hash: 1) 5.67e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000635 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.14e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 9.55e-06 sec ]
 [ GrB_assign Method 06s: C(:,:)<M> = Z ; using S 9.52e-05 sec ]
 [ GrB_Vector_nvals 1.88e-07 sec ]
 [ GrB_assign (wait: 39 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0577 sec ]
 [ GxB_select (wait: 0 zombies, 29 pending) (hyper to sparse) 4.09e-05 sec ]
 [ GrB_Vector_nvals 1.86e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.44e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.6e-05 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.74e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.33e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000564 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.07e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 9.91e-06 sec ]
 [ GrB_assign Method 06s: C(:,:)<M> = Z ; using S 9.08e-05 sec ]
 [ GrB_Vector_nvals 1.86e-07 sec ]
 [ GrB_assign (wait: 13 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0534 sec ]
 [ GxB_select (wait: 0 zombies, 16 pending) (hyper to sparse) 4.15e-05 sec ]
 [ GrB_Vector_nvals 1.81e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.41e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.54e-05 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.75e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.39e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000566 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.13e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 9.76e-06 sec ]
 [ GrB_assign Method 06s: C(:,:)<M> = Z ; using S 9.09e-05 sec ]
 [ GrB_Vector_nvals 1.86e-07 sec ]
 [ GrB_assign (wait: 13 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0443 sec ]
 [ GxB_select (wait: 0 zombies, 3 pending) (hyper to sparse) 4.05e-05 sec ]
 [ GrB_Vector_nvals 1.56e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.3e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.56e-05 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.67e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 3.72e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000485 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.99e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 9.51e-06 sec ]
 [ GrB_assign Method 06s: C(:,:)<M> = Z ; using S 8.95e-05 sec ]
 [ GrB_Vector_nvals 1.81e-07 sec ]
 [ GrB_assign (wait: 2 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.042 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.87e-05 sec ]
 [ GrB_Vector_nvals 5.14e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.13e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.13e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000371 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.76e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 9.62e-06 sec ]
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 8.68e-06 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.042 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.9e-05 sec ]
 [ GrB_Vector_nvals 1.73e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.21e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.58e-05 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.61e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.63e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00045 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 9.5e-06 sec ]
 [ GrB_assign Method 06s: C(:,:)<M> = Z ; using S 8.91e-05 sec ]
 [ GrB_Vector_nvals 1.83e-07 sec ]
phase 0 :     0.0053 sec
phase 1 :     1.4530 sec
phase 2 :     2.6461 sec
phase 3 :     2.6288 sec
phase 4 :     4.0340 sec
phase 5 :     1.7784 sec
phase 6 :     0.1672 sec
phase 7 :     9.7502 sec
phase 8 :     0.5653 sec
phase 9 :     0.3418 sec
sssp14:  threads: 40 trial:  0 source   2338012 time:    23.3702 sec
 [ GxB_set (vector option) (sparse to bitmap) 0.00174 sec ]
 [ GxB_set (vector option) 1.78e-06 sec ]
 [ GxB_set (vector option) 1.92e-07 sec ]
 [ GxB_set (vector option) 1.81e-07 sec ]
 [ GxB_set (vector option) 1.83e-07 sec ]
 [ GxB_set (vector option) (sparse to bitmap) 0.0024 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0189 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.00274 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 2.37e-05 sec ]
 [ GrB_Matrix_nvals 9.18e-07 sec ]
 [ GxB_select 1.45 sec ]
 [ GrB_Matrix_nvals 5.87e-07 sec ]
 [ GxB_select 2.65 sec ]
 [ GrB_Matrix_nvals 3.67e-07 sec ]
delta: 32
 [ GrB_Matrix_nvals 9.5e-08 sec ]
AL nnz: 0.537148 billion
 [ GrB_Matrix_nvals 5.77e-08 sec ]
AH nnz: 3.68612 billion
 [ GrB_assign (C empty) Method 06n: C(:,:)<M> = Z ; no S 0.0157 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.25e-05 sec ]
 [ GrB_Vector_nvals 3.07e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 342 mwork 0 (nthreads 1 fine hash: 1) 6.97e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 1 pending) (hyper to sparse) add:(S<.>=S+S) (generic add: pair) 9.06e-05 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B full) add:(S<S>=S+F) 0.000821 sec ]
 [ GxB_select 3.02e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.68e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.3e-05 sec ]
 [ GrB_apply (C full) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign (full to bitmap) Method:bit4:whole C<M,struct> = A 0.00189 sec ]
 [ GrB_Vector_nvals 6.71e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 629939 mwork 0 (nthreads 9 fine hash: 10) 0.0099 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.15e-05 sec ]
 [ GrB_Vector_nvals 1.64e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0499 sec ]
 [ GxB_select 0.000541 sec ]
 [ GrB_Vector_nvals 5.42e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00165 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00455 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00592 sec ]
 [ GrB_Vector_nvals 6.43e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.52641e+08 mwork 0 (nthreads 40 fine: 160) 0.432 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000569 sec ]
 [ GrB_Vector_nvals 4.25e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0307 sec ]
 [ GxB_select 0.0084 sec ]
 [ GrB_Vector_nvals 4.21e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00719 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0263 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.0376 sec ]
 [ GrB_Vector_nvals 3.71e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4.83016e+08 mwork 0 (nthreads 40 fine: 160) 1.37 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.014 sec ]
 [ GrB_Vector_nvals 5.46e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0362 sec ]
 [ GxB_select 0.0133 sec ]
 [ GrB_Vector_nvals 4.9e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00793 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0457 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.0427 sec ]
 [ GrB_Vector_nvals 3.41e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4.13217e+08 mwork 0 (nthreads 40 fine: 160) 1.21 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0258 sec ]
 [ GrB_Vector_nvals 5.46e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0351 sec ]
 [ GxB_select 0.011 sec ]
 [ GrB_Vector_nvals 4.47e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00696 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0402 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.0397 sec ]
 [ GrB_Vector_nvals 5.68e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.61133e+08 mwork 0 (nthreads 40 fine: 160) 0.576 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0285 sec ]
 [ GrB_Vector_nvals 5.55e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0279 sec ]
 [ GxB_select 0.00479 sec ]
 [ GrB_Vector_nvals 2.83e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00506 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0219 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.0315 sec ]
 [ GrB_Vector_nvals 5.55e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.5478e+07 mwork 0 (nthreads 40 fine: 160) 0.177 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0234 sec ]
 [ GrB_Vector_nvals 3.95e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0208 sec ]
 [ GxB_select 0.00138 sec ]
 [ GrB_Vector_nvals 2.83e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00191 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00774 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.0118 sec ]
 [ GrB_Vector_nvals 6.39e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.04752e+06 mwork 0 (nthreads 31 fine hash: 32) 0.0257 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.021 sec ]
 [ GrB_Vector_nvals 3.05e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.134 sec ]
 [ GxB_select 0.000432 sec ]
 [ GrB_Vector_nvals 2.33e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000707 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00132 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00451 sec ]
 [ GrB_Vector_nvals 3.28e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 97525 mwork 0 (nthreads 1 fine hash: 1) 0.0128 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.017 sec ]
 [ GrB_Vector_nvals 2.44e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00849 sec ]
 [ GxB_select 0.000264 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.52e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000881 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000693 sec ]
 [ GrB_Vector_nvals 2.12e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3114 mwork 0 (nthreads 1 fine hash: 1) 0.000612 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0146 sec ]
 [ GrB_Vector_nvals 3.54e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00126 sec ]
 [ GxB_select 2.48e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.8e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.61e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 8.02e-05 sec ]
 [ GrB_Vector_nvals 1.66e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 68 mwork 0 (nthreads 1 fine hash: 1) 7.38e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0137 sec ]
 [ GrB_Vector_nvals 4.71e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000678 sec ]
 [ GxB_select 1.43e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.48e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.82e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.25e-05 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0291 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.57893e+09 mwork 0 (nthreads 40 fine: 160) 9.23 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0558 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.0664 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0163 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00746 sec ]
 [ GrB_reduce (A full) 4.96e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0845 sec ]
 [ GxB_select (wait: 0 zombies, 33663226 pending) (hyper to sparse) 0.0163 sec ]
 [ GrB_Vector_nvals 3.89e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.26883e+06 mwork 0 (nthreads 40 fine: 50) 0.118 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00554 sec ]
 [ GrB_Vector_nvals 4.71e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0133 sec ]
 [ GxB_select 0.000579 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000939 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0013 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00574 sec ]
 [ GrB_Vector_nvals 6.97e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 65956 mwork 0 (nthreads 1 fine hash: 1) 0.0179 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00759 sec ]
 [ GrB_Vector_nvals 4.25e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00649 sec ]
 [ GxB_select 0.00018 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.17e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000622 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000458 sec ]
 [ GrB_Vector_nvals 2.38e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 230 mwork 0 (nthreads 1 fine hash: 1) 0.000148 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00532 sec ]
 [ GrB_Vector_nvals 3.63e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00137 sec ]
 [ GxB_select 1.56e-05 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.48e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.99e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.55e-05 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0159 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5.75736e+07 mwork 0 (nthreads 40 fine: 160) 0.277 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0228 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00843 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00129 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00527 sec ]
 [ GrB_reduce (A full) 3.58e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0749 sec ]
 [ GxB_select (wait: 0 zombies, 23154741 pending) (hyper to sparse) 0.0108 sec ]
 [ GrB_Vector_nvals 6.91e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 64163 mwork 0 (nthreads 1 fine hash: 1) 0.141 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00373 sec ]
 [ GrB_Vector_nvals 6.52e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0064 sec ]
 [ GxB_select 0.000393 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000298 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00122 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00141 sec ]
 [ GrB_Vector_nvals 2.22e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12326 mwork 0 (nthreads 1 fine hash: 1) 0.00366 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00371 sec ]
 [ GrB_Vector_nvals 5.16e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00215 sec ]
 [ GxB_select 4.55e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.71e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00016 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00015 sec ]
 [ GrB_Vector_nvals 1.79e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14 mwork 0 (nthreads 1 fine hash: 1) 6.35e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00327 sec ]
 [ GrB_Vector_nvals 3.48e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000588 sec ]
 [ GxB_select 1.43e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0136 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.11405e+07 mwork 0 (nthreads 40 fine: 160) 0.165 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0188 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00513 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000722 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00441 sec ]
 [ GrB_reduce (A full) 3.4e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0698 sec ]
 [ GxB_select (wait: 0 zombies, 16696103 pending) (hyper to sparse) 0.00774 sec ]
 [ GrB_Vector_nvals 4.1e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 18997 mwork 0 (nthreads 1 fine hash: 1) 0.107 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00266 sec ]
 [ GrB_Vector_nvals 4.58e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00269 sec ]
 [ GxB_select 0.000142 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000155 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000462 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000632 sec ]
 [ GrB_Vector_nvals 2.63e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4407 mwork 0 (nthreads 1 fine hash: 1) 0.00151 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00252 sec ]
 [ GrB_Vector_nvals 4.12e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00138 sec ]
 [ GxB_select 2.58e-05 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.46e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000103 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 8.62e-05 sec ]
 [ GrB_Vector_nvals 1.9e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 5.63e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00238 sec ]
 [ GrB_Vector_nvals 5.07e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00053 sec ]
 [ GxB_select 1.36e-05 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0123 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.09695e+07 mwork 0 (nthreads 40 fine: 160) 0.11 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0163 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00364 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000449 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00402 sec ]
 [ GrB_reduce (A full) 3.56e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0649 sec ]
 [ GxB_select (wait: 0 zombies, 12007189 pending) (hyper to sparse) 0.00551 sec ]
 [ GrB_Vector_nvals 3.52e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7974 mwork 0 (nthreads 1 fine hash: 1) 0.0872 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00215 sec ]
 [ GrB_Vector_nvals 6.13e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0017 sec ]
 [ GxB_select 7.19e-05 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.85e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000244 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000341 sec ]
 [ GrB_Vector_nvals 2.4e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2026 mwork 0 (nthreads 1 fine hash: 1) 0.000746 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00199 sec ]
 [ GrB_Vector_nvals 2.76e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0011 sec ]
 [ GxB_select 1.8e-05 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.22e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.2e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 6.59e-05 sec ]
 [ GrB_Vector_nvals 2.14e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 5.3e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00182 sec ]
 [ GrB_Vector_nvals 2.24e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000482 sec ]
 [ GxB_select 1.27e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0117 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6.70697e+06 mwork 0 (nthreads 40 fine: 103) 0.0918 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0145 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00312 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000297 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00378 sec ]
 [ GrB_reduce (A full) 3.67e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0612 sec ]
 [ GxB_select (wait: 0 zombies, 8319471 pending) (hyper to sparse) 0.00395 sec ]
 [ GrB_Vector_nvals 3.84e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4184 mwork 0 (nthreads 1 fine hash: 1) 0.0749 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00195 sec ]
 [ GrB_Vector_nvals 5.35e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00249 sec ]
 [ GxB_select 4.75e-05 sec ]
 [ GrB_Vector_nvals 2.2e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.99e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000166 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000222 sec ]
 [ GrB_Vector_nvals 1.83e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1136 mwork 0 (nthreads 1 fine hash: 1) 0.000482 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00167 sec ]
 [ GrB_Vector_nvals 1.86e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00102 sec ]
 [ GxB_select 1.51e-05 sec ]
 [ GrB_Vector_nvals 1.94e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.16e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.44e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 5.56e-05 sec ]
 [ GrB_Vector_nvals 1.49e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0111 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4.54339e+06 mwork 0 (nthreads 40 fine: 70) 0.0729 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0125 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00289 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000247 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0044 sec ]
 [ GrB_reduce (A full) 3.6e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0595 sec ]
 [ GxB_select (wait: 0 zombies, 5277051 pending) (hyper to sparse) 0.00243 sec ]
 [ GrB_Vector_nvals 3.97e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2432 mwork 0 (nthreads 1 fine hash: 1) 0.067 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00277 sec ]
 [ GrB_Vector_nvals 5.89e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00125 sec ]
 [ GxB_select 3.47e-05 sec ]
 [ GrB_Vector_nvals 1.81e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.47e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000122 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000153 sec ]
 [ GrB_Vector_nvals 2.81e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 649 mwork 0 (nthreads 1 fine hash: 1) 0.000303 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00116 sec ]
 [ GrB_Vector_nvals 1.56e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000999 sec ]
 [ GxB_select 1.34e-05 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.011 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.2853e+06 mwork 0 (nthreads 40 fine: 51) 0.0734 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0115 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00273 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000221 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00349 sec ]
 [ GrB_reduce (A full) 0.00163 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0582 sec ]
 [ GxB_select (wait: 0 zombies, 2691482 pending) (hyper to sparse) 0.00118 sec ]
 [ GrB_Vector_nvals 3.76e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1531 mwork 0 (nthreads 1 fine hash: 1) 0.0573 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00133 sec ]
 [ GrB_Vector_nvals 3.35e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00191 sec ]
 [ GxB_select 2.67e-05 sec ]
 [ GrB_Vector_nvals 1.4e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.58e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000104 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000126 sec ]
 [ GrB_Vector_nvals 1.92e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 432 mwork 0 (nthreads 1 fine hash: 1) 0.00021 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000975 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00232 sec ]
 [ GxB_select 1.16e-05 sec ]
 [ GrB_Vector_nvals 1.84e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00976 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.47992e+06 mwork 0 (nthreads 37 fine: 38) 0.0708 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00919 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00259 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000223 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00334 sec ]
 [ GrB_reduce (A full) 0.000158 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0552 sec ]
 [ GxB_select (wait: 0 zombies, 443871 pending) (hyper to sparse) 0.000552 sec ]
 [ GrB_Vector_nvals 3.63e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 501 mwork 0 (nthreads 1 fine hash: 1) 0.0101 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000342 sec ]
 [ GrB_Vector_nvals 3.04e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00597 sec ]
 [ GxB_select 1.94e-05 sec ]
 [ GrB_Vector_nvals 2.35e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.97e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.92e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 5.57e-05 sec ]
 [ GrB_Vector_nvals 2.2e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 91 mwork 0 (nthreads 1 fine hash: 1) 0.000111 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000914 sec ]
 [ GrB_Vector_nvals 1.96e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00314 sec ]
 [ GxB_select 1.42e-05 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00256 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 398528 mwork 0 (nthreads 6 fine hash: 7) 0.0322 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0379 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00235 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000249 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000995 sec ]
 [ GrB_reduce (A full) 0.00399 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0556 sec ]
 [ GxB_select (wait: 0 zombies, 52865 pending) (hyper to sparse) 0.000516 sec ]
 [ GrB_Vector_nvals 3.74e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 25 mwork 0 (nthreads 1 fine hash: 1) 0.00139 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000128 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000566 sec ]
 [ GxB_select 1.18e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.38e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 5.85e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.31e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 4.33e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000211 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000522 sec ]
 [ GxB_select 9.94e-06 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000895 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 24520 mwork 0 (nthreads 1 fine hash: 1) 0.00741 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0028 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000352 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.26e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000303 sec ]
 [ GrB_reduce (A full) 5.2e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0566 sec ]
 [ GxB_select (wait: 0 zombies, 28490 pending) (hyper to sparse) 0.000291 sec ]
 [ GrB_Vector_nvals 3.52e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 0.000827 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000119 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000515 sec ]
 [ GxB_select 1.04e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.33e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.25e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.09e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.12e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00012 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000474 sec ]
 [ GxB_select 9.38e-06 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00055 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12298 mwork 0 (nthreads 1 fine hash: 1) 0.00399 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00182 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000209 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.76e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000183 sec ]
 [ GrB_reduce (A full) 5.49e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0549 sec ]
 [ GxB_select (wait: 0 zombies, 16271 pending) (hyper to sparse) 0.000186 sec ]
 [ GrB_Vector_nvals 3.15e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000547 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000103 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000975 sec ]
 [ GxB_select 9.9e-06 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.26e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.46e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.07e-05 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.08e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.95e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000486 sec ]
 [ GxB_select 9.42e-06 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000368 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7229 mwork 0 (nthreads 1 fine hash: 1) 0.00245 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00143 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00014 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.15e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00012 sec ]
 [ GrB_reduce (A full) 6.59e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0543 sec ]
 [ GxB_select (wait: 0 zombies, 9086 pending) (hyper to sparse) 0.000125 sec ]
 [ GrB_Vector_nvals 3.45e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.0004 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.86e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000633 sec ]
 [ GxB_select 1.04e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.37e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.31e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.13e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.08e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.08e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000426 sec ]
 [ GxB_select 9.35e-06 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000257 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4506 mwork 0 (nthreads 1 fine hash: 1) 0.00163 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0012 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000104 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.28e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.67e-05 sec ]
 [ GrB_reduce (A full) 9.43e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0535 sec ]
 [ GxB_select (wait: 0 zombies, 4600 pending) (hyper to sparse) 8.48e-05 sec ]
 [ GrB_Vector_nvals 3.3e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000256 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.07e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000587 sec ]
 [ GxB_select 1.07e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.36e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000107 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 3.95e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000167 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2656 mwork 0 (nthreads 1 fine hash: 1) 0.00103 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00109 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 7.82e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.75e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.9e-05 sec ]
 [ GrB_reduce (A full) 9.54e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0482 sec ]
 [ GxB_select (wait: 0 zombies, 1955 pending) (hyper to sparse) 5.99e-05 sec ]
 [ GrB_Vector_nvals 3.26e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000158 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.31e-05 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000481 sec ]
 [ GxB_select 1.06e-05 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.42e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.29e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.05e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 5.33e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 5.99e-05 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000434 sec ]
 [ GxB_select 9.48e-06 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000109 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1403 mwork 0 (nthreads 1 fine hash: 1) 0.000584 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000992 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 6.11e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.31e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.15e-05 sec ]
 [ GrB_reduce (A full) 9.58e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0379 sec ]
 [ GxB_select (wait: 0 zombies, 564 pending) (hyper to sparse) 4.77e-05 sec ]
 [ GrB_Vector_nvals 5.25e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 8.85e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.91e-05 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000417 sec ]
 [ GxB_select 1.05e-05 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 5.11e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 497 mwork 0 (nthreads 1 fine hash: 1) 0.000242 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000835 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 5.12e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.08e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.08e-05 sec ]
 [ GrB_reduce (A full) 9.62e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.03 sec ]
 [ GxB_select (wait: 0 zombies, 68 pending) (hyper to sparse) 4.21e-05 sec ]
 [ GrB_Vector_nvals 3.26e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 6.38e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.1e-05 sec ]
 [ GrB_Vector_nvals 1.4e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.45e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 39 mwork 0 (nthreads 1 fine hash: 1) 5.92e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000612 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.17e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.36e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.77e-06 sec ]
 [ GrB_reduce (A full) 0.000316 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 29 pending) (hyper to sparse) 4.19e-05 sec ]
 [ GrB_Vector_nvals 3.37e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.49e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.05e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.21e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.52e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000554 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.14e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.27e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.26e-06 sec ]
 [ GrB_reduce (A full) 0.00128 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 16 pending) (hyper to sparse) 4.06e-05 sec ]
 [ GrB_Vector_nvals 5.68e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.43e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.13e-05 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.25e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.59e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000561 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.09e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.18e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.08e-06 sec ]
 [ GrB_reduce (A full) 0.00141 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 3 pending) (hyper to sparse) 4.18e-05 sec ]
 [ GrB_Vector_nvals 3.3e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.2e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.95e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.15e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 3.84e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00048 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.03e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.65e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.74e-06 sec ]
 [ GrB_reduce (A full) 0.00275 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.029 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.94e-05 sec ]
 [ GrB_Vector_nvals 3.28e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.15e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.42e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000384 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.65e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.85e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.76e-06 sec ]
 [ GrB_reduce (A full) 0.00279 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0289 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.93e-05 sec ]
 [ GrB_Vector_nvals 3.33e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.13e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.04e-05 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.15e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.76e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000434 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.01e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.88e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.91e-06 sec ]
 [ GrB_reduce (A full) 0.00478 sec ]
phase 0 :     0.0260 sec
phase 1 :     1.4525 sec
phase 2 :     2.6476 sec
phase 3 :     1.1318 sec
phase 4 :     4.5012 sec
phase 5 :     0.8291 sec
phase 6 :     0.1200 sec
phase 7 :    10.1461 sec
phase 8 :     0.3910 sec
phase 9 :     0.2148 sec
sssp15:  threads: 40 trial:  0 source   2338012 time:    21.4601 sec
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0177 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0024 sec ]
 [ GxB_select 1.44 sec ]
 [ GxB_select 2.64 sec ]
 [ GrB_Matrix_nvals 4.71e-07 sec ]
 [ GrB_Matrix_nvals 5.23e-07 sec ]
 [ GrB_Matrix_nvals 4.84e-08 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 2.38e-05 sec ]
 [ GrB_assign (C empty) Method 06n: C(:,:)<M> = Z ; no S 0.0156 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.04e-05 sec ]
 [ GrB_Vector_nvals 4.54e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 342 mwork 0 (nthreads 1 fine hash: 1) 7.04e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 1 pending) (hyper to sparse) add:(S<.>=S+S) (generic add: pair) 8.95e-05 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B full) add:(S<S>=S+F) 0.000797 sec ]
 [ GxB_select 1.28e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.39e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.14e-05 sec ]
 [ GrB_apply (C full) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign (full to bitmap) Method:bit4:whole C<M,struct> = A 0.00185 sec ]
 [ GrB_Vector_nvals 4.53e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 629939 mwork 0 (nthreads 9 fine hash: 10) 0.00925 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.71e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.05 sec ]
 [ GxB_select 0.000463 sec ]
 [ GrB_Vector_nvals 2.68e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00108 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00319 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00571 sec ]
 [ GrB_Vector_nvals 3.95e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.52641e+08 mwork 0 (nthreads 40 fine: 160) (sparse to bitmap) 0.46 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00082 sec ]
 [ GrB_Vector_nvals 4.28e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0467 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0447 sec ]
 [ GrB_Vector_nvals 4.1e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0171 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.141 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct> = A 0.0334 sec ]
 [ GrB_Vector_nvals 1.19e-06 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 1.27 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0363 sec ]
 [ GrB_Vector_nvals 4.71e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0463 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0493 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0256 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.143 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct> = A 0.0351 sec ]
 [ GrB_Vector_nvals 5.42e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 1.07 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0467 sec ]
 [ GrB_Vector_nvals 4.69e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0451 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0474 sec ]
 [ GrB_Vector_nvals 2.91e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.02 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.142 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct> = A 0.0348 sec ]
 [ GrB_Vector_nvals 4.81e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.502 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0503 sec ]
 [ GrB_Vector_nvals 4.86e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0445 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0444 sec ]
 [ GrB_Vector_nvals 2.91e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00938 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.138 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct> = A 0.0294 sec ]
 [ GrB_Vector_nvals 5.7e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.134 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0446 sec ]
 [ GrB_Vector_nvals 6.54e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0442 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0405 sec ]
 [ GrB_Vector_nvals 2.31e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00558 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.121 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct> = A 0.0125 sec ]
 [ GrB_Vector_nvals 5.63e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0383 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0413 sec ]
 [ GrB_Vector_nvals 3.89e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.035 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0471 sec ]
 [ GrB_Vector_nvals 3.19e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000628 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0928 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00364 sec ]
 [ GrB_Vector_nvals 4.81e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 97525 mwork 0 (nthreads 1 fine hash: 1) 0.0124 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0372 sec ]
 [ GrB_Vector_nvals 3.07e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00815 sec ]
 [ GxB_select 0.000261 sec ]
 [ GrB_Vector_nvals 1.7e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.59e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000878 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000653 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3114 mwork 0 (nthreads 1 fine hash: 1) 0.000605 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0367 sec ]
 [ GrB_Vector_nvals 3.87e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00122 sec ]
 [ GxB_select 2.39e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.7e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.46e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 9.18e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 68 mwork 0 (nthreads 1 fine hash: 1) 7.34e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0355 sec ]
 [ GrB_Vector_nvals 4.51e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000679 sec ]
 [ GxB_select 1.35e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.52e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.65e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.28e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.0374 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 8.69 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0619 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0501 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0447 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0239 sec ]
 [ GrB_reduce (A full) 3.5e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0845 sec ]
 [ GxB_select (wait: 0 zombies, 33663226 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.128 sec ]
 [ GrB_Vector_nvals 3.74e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0711 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0347 sec ]
 [ GrB_Vector_nvals 4.1e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0371 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0482 sec ]
 [ GrB_Vector_nvals 7.02e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000948 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0934 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00507 sec ]
 [ GrB_Vector_nvals 4.02e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 65956 mwork 0 (nthreads 1 fine hash: 1) 0.0174 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0331 sec ]
 [ GrB_Vector_nvals 3.8e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00612 sec ]
 [ GxB_select 0.000177 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.17e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000585 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000431 sec ]
 [ GrB_Vector_nvals 1.86e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 230 mwork 0 (nthreads 1 fine hash: 1) 0.000145 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0311 sec ]
 [ GrB_Vector_nvals 2.24e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000765 sec ]
 [ GxB_select 1.48e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.48e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.79e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.48e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.0351 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.242 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0448 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0156 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00889 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0128 sec ]
 [ GrB_reduce (A full) 3.43e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0752 sec ]
 [ GxB_select (wait: 0 zombies, 23154741 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.124 sec ]
 [ GrB_Vector_nvals 3.56e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0496 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0339 sec ]
 [ GrB_Vector_nvals 4.28e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00185 sec ]
 [ GxB_select 0.000384 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000301 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00121 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00131 sec ]
 [ GrB_Vector_nvals 1.96e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12326 mwork 0 (nthreads 1 fine hash: 1) 0.00355 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0284 sec ]
 [ GrB_Vector_nvals 2.24e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00205 sec ]
 [ GxB_select 4.47e-05 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.53e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000156 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000144 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14 mwork 0 (nthreads 1 fine hash: 1) 6.3e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.028 sec ]
 [ GrB_Vector_nvals 2.12e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000581 sec ]
 [ GxB_select 1.45e-05 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.0316 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.127 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0438 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0122 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00736 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00993 sec ]
 [ GrB_reduce (A full) 3.47e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0684 sec ]
 [ GxB_select (wait: 0 zombies, 16696103 pending) (hyper to sparse) 0.00883 sec ]
 [ GrB_Vector_nvals 4.41e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 18997 mwork 0 (nthreads 1 fine hash: 1) 0.105 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00256 sec ]
 [ GrB_Vector_nvals 3.11e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00278 sec ]
 [ GxB_select 0.000142 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000153 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00045 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000604 sec ]
 [ GrB_Vector_nvals 1.55e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4407 mwork 0 (nthreads 1 fine hash: 1) 0.00148 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00289 sec ]
 [ GrB_Vector_nvals 3.2e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00136 sec ]
 [ GxB_select 2.5e-05 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.41e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.82e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 8.46e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 5.64e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00251 sec ]
 [ GrB_Vector_nvals 4.71e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000499 sec ]
 [ GxB_select 1.4e-05 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0141 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.09695e+07 mwork 0 (nthreads 40 fine: 160) 0.109 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0178 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00359 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000407 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00396 sec ]
 [ GrB_reduce (A full) 3.56e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0655 sec ]
 [ GxB_select (wait: 0 zombies, 12007189 pending) (hyper to sparse) 0.00558 sec ]
 [ GrB_Vector_nvals 3.8e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7974 mwork 0 (nthreads 1 fine hash: 1) 0.0861 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0021 sec ]
 [ GrB_Vector_nvals 2.16e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00165 sec ]
 [ GxB_select 7.15e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.62e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000241 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000345 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2026 mwork 0 (nthreads 1 fine hash: 1) 0.00073 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00198 sec ]
 [ GrB_Vector_nvals 1.58e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00136 sec ]
 [ GxB_select 1.74e-05 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.31e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.04e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 6.3e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 5.34e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00176 sec ]
 [ GrB_Vector_nvals 1.84e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000468 sec ]
 [ GxB_select 1.21e-05 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0103 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6.70697e+06 mwork 0 (nthreads 40 fine: 103) 0.0926 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0144 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00311 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000323 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00364 sec ]
 [ GrB_reduce (A full) 3.51e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0622 sec ]
 [ GxB_select (wait: 0 zombies, 8319471 pending) (hyper to sparse) 0.00376 sec ]
 [ GrB_Vector_nvals 4.47e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4184 mwork 0 (nthreads 1 fine hash: 1) 0.0729 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00194 sec ]
 [ GrB_Vector_nvals 4.08e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00136 sec ]
 [ GxB_select 4.57e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.84e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000165 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000218 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1136 mwork 0 (nthreads 1 fine hash: 1) 0.000462 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0017 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0011 sec ]
 [ GxB_select 1.46e-05 sec ]
 [ GrB_Vector_nvals 1.83e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.25e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.06e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 5.25e-05 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0111 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4.54339e+06 mwork 0 (nthreads 40 fine: 70) 0.0751 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0125 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00291 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000247 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00484 sec ]
 [ GrB_reduce (A full) 3.65e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.06 sec ]
 [ GxB_select (wait: 0 zombies, 5277051 pending) (hyper to sparse) 0.00249 sec ]
 [ GrB_Vector_nvals 3.5e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2432 mwork 0 (nthreads 1 fine hash: 1) 0.0639 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00152 sec ]
 [ GrB_Vector_nvals 2.72e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00172 sec ]
 [ GxB_select 4.46e-05 sec ]
 [ GrB_Vector_nvals 1.79e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.3e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000124 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00015 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 649 mwork 0 (nthreads 1 fine hash: 1) 0.000297 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00106 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00848 sec ]
 [ GxB_select 1.4e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0128 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.2853e+06 mwork 0 (nthreads 40 fine: 51) 0.0713 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.011 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00281 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00022 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0035 sec ]
 [ GrB_reduce (A full) 0.00108 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0582 sec ]
 [ GxB_select (wait: 0 zombies, 2691482 pending) (hyper to sparse) 0.00119 sec ]
 [ GrB_Vector_nvals 3.69e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1531 mwork 0 (nthreads 1 fine hash: 1) 0.0574 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0013 sec ]
 [ GrB_Vector_nvals 4.27e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00246 sec ]
 [ GxB_select 2.77e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.23e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000103 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000111 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 432 mwork 0 (nthreads 1 fine hash: 1) 0.000215 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000953 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00225 sec ]
 [ GxB_select 1.31e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00986 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.47992e+06 mwork 0 (nthreads 37 fine: 38) 0.0706 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00922 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00332 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000197 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00331 sec ]
 [ GrB_reduce (A full) 0.00163 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0554 sec ]
 [ GxB_select (wait: 0 zombies, 443871 pending) (hyper to sparse) 0.000528 sec ]
 [ GrB_Vector_nvals 4.64e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 501 mwork 0 (nthreads 1 fine hash: 1) 0.00903 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000344 sec ]
 [ GrB_Vector_nvals 2.63e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00355 sec ]
 [ GxB_select 2.57e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.9e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.6e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 5.53e-05 sec ]
 [ GrB_Vector_nvals 1.96e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 91 mwork 0 (nthreads 1 fine hash: 1) 8.14e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000581 sec ]
 [ GrB_Vector_nvals 2.01e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00401 sec ]
 [ GxB_select 1.21e-05 sec ]
 [ GrB_Vector_nvals 1.51e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00263 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 398528 mwork 0 (nthreads 6 fine hash: 7) 0.0324 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0355 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00132 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00027 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00118 sec ]
 [ GrB_reduce (A full) 0.00563 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0553 sec ]
 [ GxB_select (wait: 0 zombies, 52865 pending) (hyper to sparse) 0.000527 sec ]
 [ GrB_Vector_nvals 3.76e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 25 mwork 0 (nthreads 1 fine hash: 1) 0.00142 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000128 sec ]
 [ GrB_Vector_nvals 1.66e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000529 sec ]
 [ GxB_select 1.16e-05 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.46e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.6e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.3e-05 sec ]
 [ GrB_Vector_nvals 1.68e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 4.5e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000215 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000501 sec ]
 [ GxB_select 9.16e-06 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00092 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 24520 mwork 0 (nthreads 1 fine hash: 1) 0.00756 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00281 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00036 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.44e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000304 sec ]
 [ GrB_reduce (A full) 5.19e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0545 sec ]
 [ GxB_select (wait: 0 zombies, 28490 pending) (hyper to sparse) 0.000295 sec ]
 [ GrB_Vector_nvals 3.61e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 0.000846 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000121 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000494 sec ]
 [ GxB_select 1.06e-05 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.44e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.55e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.16e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.22e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000121 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000467 sec ]
 [ GxB_select 9.59e-06 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000553 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12298 mwork 0 (nthreads 1 fine hash: 1) 0.00408 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00183 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000214 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.66e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000187 sec ]
 [ GrB_reduce (A full) 5.49e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0542 sec ]
 [ GxB_select (wait: 0 zombies, 16271 pending) (hyper to sparse) 0.000188 sec ]
 [ GrB_Vector_nvals 3.37e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000575 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000103 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000475 sec ]
 [ GxB_select 1.09e-05 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.37e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.54e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.16e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.18e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000112 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000454 sec ]
 [ GxB_select 9.57e-06 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000373 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7229 mwork 0 (nthreads 1 fine hash: 1) 0.00251 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00143 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000144 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.13e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000122 sec ]
 [ GrB_reduce (A full) 6.65e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0541 sec ]
 [ GxB_select (wait: 0 zombies, 9086 pending) (hyper to sparse) 0.000127 sec ]
 [ GrB_Vector_nvals 4.92e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000381 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.87e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000465 sec ]
 [ GxB_select 1.05e-05 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.3e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.41e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.17e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.07e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000415 sec ]
 [ GxB_select 9.23e-06 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000265 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4506 mwork 0 (nthreads 1 fine hash: 1) 0.00167 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00119 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000106 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.27e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.78e-05 sec ]
 [ GrB_reduce (A full) 9.49e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0535 sec ]
 [ GxB_select (wait: 0 zombies, 4600 pending) (hyper to sparse) 8.44e-05 sec ]
 [ GrB_Vector_nvals 3.33e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000259 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.21e-05 sec ]
 [ GrB_Vector_nvals 1.4e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000465 sec ]
 [ GxB_select 9.97e-06 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.26e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000111 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.03e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000167 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2656 mwork 0 (nthreads 1 fine hash: 1) 0.00105 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00109 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 8.02e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.73e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.13e-05 sec ]
 [ GrB_reduce (A full) 9.6e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0497 sec ]
 [ GxB_select (wait: 0 zombies, 1955 pending) (hyper to sparse) 5.95e-05 sec ]
 [ GrB_Vector_nvals 3.41e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000161 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.67e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000472 sec ]
 [ GxB_select 1.03e-05 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.27e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.43e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.05e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.16e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.08e-05 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000438 sec ]
 [ GxB_select 9.98e-06 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000105 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1403 mwork 0 (nthreads 1 fine hash: 1) 0.000595 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00099 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 6.17e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.32e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.99e-05 sec ]
 [ GrB_reduce (A full) 9.59e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0389 sec ]
 [ GxB_select (wait: 0 zombies, 564 pending) (hyper to sparse) 4.61e-05 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 9.06e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.28e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000416 sec ]
 [ GxB_select 1.05e-05 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 5.09e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 497 mwork 0 (nthreads 1 fine hash: 1) 0.000243 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00086 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 5.15e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.12e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.93e-05 sec ]
 [ GrB_reduce (A full) 9.67e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0305 sec ]
 [ GxB_select (wait: 0 zombies, 68 pending) (hyper to sparse) 4.23e-05 sec ]
 [ GrB_Vector_nvals 4.73e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.88e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.16e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.4e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 39 mwork 0 (nthreads 1 fine hash: 1) 5.83e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000627 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 5.64e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.36e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.86e-06 sec ]
 [ GrB_reduce (A full) 0.000315 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0294 sec ]
 [ GxB_select (wait: 0 zombies, 29 pending) (hyper to sparse) 4.1e-05 sec ]
 [ GrB_Vector_nvals 3.45e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.41e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.15e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.3e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.69e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000557 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.08e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.57e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.31e-06 sec ]
 [ GrB_reduce (A full) 0.00127 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 16 pending) (hyper to sparse) 4.03e-05 sec ]
 [ GrB_Vector_nvals 3.56e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.49e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.07e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.22e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.55e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000538 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.1e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.56e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.19e-06 sec ]
 [ GrB_reduce (A full) 0.00135 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 3 pending) (hyper to sparse) 3.94e-05 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.26e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.15e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.23e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 3.91e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000489 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.07e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.68e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.91e-06 sec ]
 [ GrB_reduce (A full) 0.00277 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.07e-05 sec ]
 [ GrB_Vector_nvals 4.86e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.17e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.13e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000385 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.71e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.15e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.73e-06 sec ]
 [ GrB_reduce (A full) 0.00277 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0298 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.88e-05 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.18e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.13e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.2e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.82e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000417 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.05e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.88e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.94e-06 sec ]
 [ GrB_reduce (A full) 0.0048 sec ]
sssp12c: threads: 40 trial:  0 source   2338012 time:    22.1229 sec

40: SSSP12c time:      22.122884 sec  rate:   190.90 (delta 32)
40: SSSP14  time:      23.370151 sec  rate:   180.71 (delta 32)
40: SSSP15  time:      21.460104 sec  rate:   196.80 (delta 32)
