SuiteSparse:GraphBLAS Jan 22, 2020 (DRAFT20)
threads to test:  8 4
matrix: /home/davis/com-Orkut.grb
[.grb]
Reading binary file: /home/davis/com-Orkut.grb
 [ GxB_Matrix_import_CSR 1e-05 sec ]
 [ GxB_set 2.66e-06 sec ]
 [ GrB_Matrix_nvals 9.84e-07 sec ]
delta: 2
 [ GrB_Matrix_nvals 6.5e-08 sec ]
read time: 0.920135 sec
 [ GrB_apply (shallow-op) 0.258 sec ]
 [ GrB_Matrix_nvals 3.46e-07 sec ]
input graph: nodes: 3072441 edges: 234370166 max nthreads 8

---------------------- sssp11: nthreads 8
 [ GrB_assign Method 21: (C dense) = scalar 0.00613 sec ]
 [ GxB_select 0.336 sec ]
 [ GxB_select 0.0877 sec ]
 [ GrB_Matrix_nvals 5.21e-07 sec ]
 [ GrB_Matrix_nvals 2.57e-07 sec ]
 [ GrB_Matrix_nvals 4.8e-08 sec ]
 [ GrB_Vector_nvals wait (zombies: 0, pending: 1) 1.04e-05 sec ]
 [ GxB_select 1.11e-05 sec ]
 [ GrB_Vector_nvals 4.31e-08 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 132 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 5.26e-05 sec ]
 [ GrB_eWiseAdd wait (zombies: 0, pending: 1) add generic 2.5e-05 sec ]
 [ GrB_Vector_nvals 4.89e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 3.82e-05 sec ]
 [ GxB_select 9.57e-06 sec ]
 [ GrB_Vector_nvals 4.39e-08 sec ]
 [ GxB_select mask 1.49e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 2.78e-05 sec ]
 [ GrB_Vector_nvals 4.8e-08 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 13379 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.000636 sec ]
 [ GrB_eWiseAdd add generic 1.1e-05 sec ]
 [ GrB_Vector_nvals 7.5e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 6.54e-05 sec ]
 [ GxB_select 1.65e-05 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 3.12e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.0005 sec ]
 [ GrB_Vector_nvals 5.7e-08 sec ]
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 8.32e-05 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 133) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 1.89e-05 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 1.79e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 7.14e-06 sec ]
 [ GxB_select 0.000955 sec ]
 [ GrB_Vector_nvals 7.39e-08 sec ]
 [ GxB_select 1.94e-05 sec ]
 [ GrB_Vector_nvals 2.81e-08 sec ]
 [ GxB_select 1.42e-05 sec ]
 [ GrB_Vector_nvals 2.6e-08 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 1.11425e+06 Mwork 0 nthreads 8 ntasks 18 coarse: (gus: 0 hash: 0) fine: (gus: 18 hash: 0) 0.00506 sec ]
 [ GrB_eWiseAdd add generic 3.68e-05 sec ]
 [ GrB_Vector_nvals 2.26e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.000974 sec ]
 [ GxB_select 0.000344 sec ]
 [ GrB_Vector_nvals 2.24e-07 sec ]
 [ GxB_select mask 0.00121 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.0026 sec ]
 [ GrB_Vector_nvals 1.73e-07 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 3.51864e+07 Mwork 0 nthreads 8 ntasks 32 coarse: (gus: 0 hash: 0) fine: (gus: 32 hash: 0) 0.147 sec ]
 [ GrB_eWiseAdd add generic 0.000948 sec ]
 [ GrB_Vector_nvals 5.21e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.00396 sec ]
 [ GxB_select 0.00244 sec ]
 [ GrB_Vector_nvals 3.48e-07 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 0.00103 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.0157 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.0105 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 335763) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.000743 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 7.57e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.39e-05 sec ]
 [ GxB_select 0.00393 sec ]
 [ GrB_Vector_nvals 2.46e-07 sec ]
 [ GxB_select 0.00274 sec ]
 [ GrB_Vector_nvals 1.92e-07 sec ]
 [ GxB_select 0.00304 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 1.53337e+08 Mwork 0 nthreads 8 ntasks 32 coarse: (gus: 0 hash: 0) fine: (gus: 32 hash: 0) 0.911 sec ]
 [ GrB_eWiseAdd add generic 0.00274 sec ]
 [ GrB_Vector_nvals 4.85e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.00529 sec ]
 [ GxB_select 0.00473 sec ]
 [ GrB_Vector_nvals 7.17e-07 sec ]
 [ GxB_select mask 0.0124 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.0101 sec ]
 [ GrB_Vector_nvals 6.44e-07 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 4.4703e+07 Mwork 0 nthreads 8 ntasks 32 coarse: (gus: 0 hash: 0) fine: (gus: 32 hash: 0) 0.193 sec ]
 [ GrB_eWiseAdd add generic 0.00586 sec ]
 [ GrB_Vector_nvals 3.67e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.00306 sec ]
 [ GxB_select 0.000503 sec ]
 [ GrB_Vector_nvals 3.24e-07 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 0.000674 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.000832 sec ]
 [ GrB_Vector_nvals 1e-07 sec ]
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.0331 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 2732536) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.00445 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 2.75e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.25e-05 sec ]
 [ GxB_select 0.00523 sec ]
 [ GrB_Vector_nvals 2.35e-07 sec ]
 [ GxB_select 0.0029 sec ]
 [ GrB_Vector_nvals 1.65e-07 sec ]
 [ GxB_select 1.38e-05 sec ]
 [ GrB_Vector_nvals 2.81e-08 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 15408 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.00129 sec ]
 [ GrB_eWiseAdd add generic 2.38e-05 sec ]
 [ GrB_Vector_nvals 9.9e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 7.64e-05 sec ]
 [ GxB_select 1.51e-05 sec ]
 [ GrB_Vector_nvals 4.9e-08 sec ]
 [ GxB_select mask 3.07e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.4e-05 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 26 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 1.77e-05 sec ]
 [ GrB_eWiseAdd add generic 2.36e-05 sec ]
 [ GrB_Vector_nvals 7e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 2.54e-05 sec ]
 [ GxB_select 3.98e-06 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.00147 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 4009) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 4.03e-05 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 2.16e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 2.22e-05 sec ]
 [ GxB_select 0.00128 sec ]
 [ GxB_select 5.81e-06 sec ]
 [ GrB_Vector_nvals 1.28e-07 sec ]

 sssp11: done

 [ GrB_Matrix_nvals 4.35e-07 sec ]
 [ GrB_apply (transpose-op) generic 0.0108 sec ]
 [ GrB_reduce 2.11e-05 sec ]
 [ GrB_Matrix_extractTuples 0.00608 sec ]

---------------------- sssp12: nthreads 8
 [ GrB_assign Method 21: (C dense) = scalar 0.00496 sec ]
 [ GxB_select 0.355 sec ]
 [ GxB_select 0.0895 sec ]
 [ GrB_Matrix_nvals 4.84e-07 sec ]
 [ GrB_Matrix_nvals 2.83e-07 sec ]
 [ GrB_Matrix_nvals 1.12e-07 sec ]
 [ GrB_Vector_nvals wait (zombies: 0, pending: 1) 1.21e-05 sec ]

============================= outer: 0
 [ GxB_select 9.14e-06 sec ]
 [ GrB_Vector_nvals 4.51e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 132 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 2.41e-05 sec ]
 [ GrB_eWiseAdd wait (zombies: 0, pending: 1) add generic 2.19e-05 sec ]
 [ GrB_Vector_nvals 4.49e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 3.32e-05 sec ]
 [ GxB_select 4.9e-06 sec ]
 [ GrB_Vector_nvals 4.39e-08 sec ]
 [ GxB_select mask 1.49e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 3.35e-05 sec ]
 [ GrB_Vector_nvals 7.7e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 13379 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.000631 sec ]
 [ GrB_eWiseAdd add generic 1.13e-05 sec ]
 [ GrB_Vector_nvals 7.4e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 6.61e-05 sec ]
 [ GxB_select 1.62e-05 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 2.83e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.000502 sec ]
 [ GrB_Vector_nvals 5.6e-08 sec ]

=============== next outer:
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 8.28e-05 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 133) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 1.92e-05 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 1.81e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 7.3e-06 sec ]
 [ GxB_select 0.000953 sec ]
 [ GrB_Vector_nvals 8.59e-08 sec ]
 [ GxB_select 1.81e-05 sec ]
 [ GrB_Vector_nvals 4.51e-08 sec ]

============================= outer: 1
 [ GxB_select 1.42e-05 sec ]
 [ GrB_Vector_nvals 3.1e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 1.11425e+06 Mwork 0 nthreads 8 ntasks 18 coarse: (gus: 0 hash: 0) fine: (gus: 18 hash: 0) 0.00511 sec ]
 [ GrB_eWiseAdd add generic 3.6e-05 sec ]
 [ GrB_Vector_nvals 2.19e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.000863 sec ]
 [ GxB_select 0.000351 sec ]
 [ GrB_Vector_nvals 2.79e-07 sec ]
 [ GxB_select mask 0.00113 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.00253 sec ]
 [ GrB_Vector_nvals 2.7e-07 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 3.51864e+07 Mwork 0 nthreads 8 ntasks 32 coarse: (gus: 0 hash: 0) fine: (gus: 32 hash: 0) 0.147 sec ]
 [ GrB_eWiseAdd add generic 0.000921 sec ]
 [ GrB_Vector_nvals 5.91e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.00393 sec ]
 [ GxB_select 0.00252 sec ]
 [ GrB_Vector_nvals 3.04e-07 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 0.000964 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.0158 sec ]
 [ GrB_Vector_nvals 4.34e-07 sec ]

=============== next outer:
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.0105 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 335763) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.000692 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 7.8e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.36e-05 sec ]
 [ GxB_select 0.00362 sec ]
 [ GrB_Vector_nvals 2.41e-07 sec ]
 [ GxB_select 0.00301 sec ]
 [ GrB_Vector_nvals 2.24e-07 sec ]

============================= outer: 2
 [ GxB_select 0.0032 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 1.53337e+08 Mwork 0 nthreads 8 ntasks 32 coarse: (gus: 0 hash: 0) fine: (gus: 32 hash: 0) 0.987 sec ]
 [ GrB_eWiseAdd add generic 0.00295 sec ]
 [ GrB_Vector_nvals 9.23e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.00579 sec ]
 [ GxB_select 0.00256 sec ]
 [ GrB_Vector_nvals 3.79e-07 sec ]
 [ GxB_select mask 0.012 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.0111 sec ]
 [ GrB_Vector_nvals 6.2e-07 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 4.4703e+07 Mwork 0 nthreads 8 ntasks 32 coarse: (gus: 0 hash: 0) fine: (gus: 32 hash: 0) 0.183 sec ]
 [ GrB_eWiseAdd add generic 0.00608 sec ]
 [ GrB_Vector_nvals 5.74e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.00308 sec ]
 [ GxB_select 0.00057 sec ]
 [ GrB_Vector_nvals 1.91e-07 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 0.000722 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.000872 sec ]
 [ GrB_Vector_nvals 1.99e-07 sec ]

=============== next outer:
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.035 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 2732536) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.00446 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 2.54e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.23e-05 sec ]
 [ GxB_select 0.00523 sec ]
 [ GrB_Vector_nvals 2.71e-07 sec ]
 [ GxB_select 0.00325 sec ]
 [ GrB_Vector_nvals 1.94e-07 sec ]

============================= outer: 3
 [ GxB_select 1.43e-05 sec ]
 [ GrB_Vector_nvals 4.99e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 15408 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.00133 sec ]
 [ GrB_eWiseAdd add generic 2.29e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 7.7e-05 sec ]
 [ GxB_select 1.5e-05 sec ]
 [ GrB_Vector_nvals 3.29e-08 sec ]
 [ GxB_select mask 3.06e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.29e-05 sec ]
 [ GrB_Vector_nvals 6.4e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 26 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 1.67e-05 sec ]
 [ GrB_eWiseAdd add generic 2.32e-05 sec ]
 [ GrB_Vector_nvals 6.1e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 2.54e-05 sec ]
 [ GxB_select 3.92e-06 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]

=============== next outer:
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.0015 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 4009) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 5.48e-05 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 2.21e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 8.77e-06 sec ]
 [ GxB_select 0.00131 sec ]
 [ GxB_select 5.8e-06 sec ]
 [ GrB_Vector_nvals 2.17e-07 sec ]

 sssp12: done
 [ GrB_Matrix_nvals 5.97e-07 sec ]
 [ GrB_apply (transpose-op) generic 0.00936 sec ]
 [ GrB_reduce 7.95e-06 sec ]
 [ GrB_Matrix_extractTuples 0.00569 sec ]
 [ GrB_Matrix_nvals 8.89e-07 sec ]
 [ GrB_Matrix_extractTuples 0.516 sec ]
BF source: 766515 (zero-based)
 8: BF      time:       8.585648 sec  rate:    27.30
 8: SSSP11  time:       1.950299 sec  rate:   120.17 (delta 2)
 8: SSSP12  time:       2.034872 sec  rate:   115.18 (delta 2)

---------------------- sssp11: nthreads 4
 [ GrB_assign Method 21: (C dense) = scalar 0.0106 sec ]
 [ GxB_select 0.352 sec ]
 [ GxB_select 0.101 sec ]
 [ GrB_Matrix_nvals 4.21e-07 sec ]
 [ GrB_Matrix_nvals 2.52e-07 sec ]
 [ GrB_Matrix_nvals 1.15e-07 sec ]
 [ GrB_Vector_nvals wait (zombies: 0, pending: 1) 1.01e-05 sec ]
 [ GxB_select 8.52e-06 sec ]
 [ GrB_Vector_nvals 2.7e-08 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 132 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 2.42e-05 sec ]
 [ GrB_eWiseAdd wait (zombies: 0, pending: 1) add generic 2.59e-05 sec ]
 [ GrB_Vector_nvals 4.6e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 3.3e-05 sec ]
 [ GxB_select 4.43e-06 sec ]
 [ GrB_Vector_nvals 3.5e-08 sec ]
 [ GxB_select mask 1.08e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 2.56e-05 sec ]
 [ GrB_Vector_nvals 6.1e-08 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 13379 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.000614 sec ]
 [ GrB_eWiseAdd add generic 8.18e-06 sec ]
 [ GrB_Vector_nvals 4.61e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 7.45e-05 sec ]
 [ GxB_select 1.42e-05 sec ]
 [ GrB_Vector_nvals 3.9e-08 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 2.98e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.000327 sec ]
 [ GrB_Vector_nvals 8e-08 sec ]
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 9.22e-05 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 133) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 1.63e-05 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 1.75e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 5.89e-06 sec ]
 [ GxB_select 0.00109 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GxB_select 1.96e-05 sec ]
 [ GrB_Vector_nvals 2.9e-08 sec ]
 [ GxB_select 1.24e-05 sec ]
 [ GrB_Vector_nvals 3.1e-08 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 1.11425e+06 Mwork 0 nthreads 4 ntasks 16 coarse: (gus: 0 hash: 0) fine: (gus: 16 hash: 0) 0.0058 sec ]
 [ GrB_eWiseAdd add generic 2.78e-05 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.000754 sec ]
 [ GxB_select 0.000269 sec ]
 [ GrB_Vector_nvals 1.78e-07 sec ]
 [ GxB_select mask 0.00127 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.00273 sec ]
 [ GrB_Vector_nvals 4.29e-07 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 3.51864e+07 Mwork 0 nthreads 4 ntasks 16 coarse: (gus: 0 hash: 0) fine: (gus: 16 hash: 0) 0.17 sec ]
 [ GrB_eWiseAdd add generic 0.000954 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.00382 sec ]
 [ GxB_select 0.00338 sec ]
 [ GrB_Vector_nvals 2.43e-07 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 0.00106 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.0205 sec ]
 [ GrB_Vector_nvals 4.7e-07 sec ]
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.0138 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 335763) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.000663 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 2.54e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.03e-05 sec ]
 [ GxB_select 0.00418 sec ]
 [ GrB_Vector_nvals 1.2e-07 sec ]
 [ GxB_select 0.00307 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GxB_select 0.00301 sec ]
 [ GrB_Vector_nvals 1e-07 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 1.53337e+08 Mwork 0 nthreads 4 ntasks 16 coarse: (gus: 0 hash: 0) fine: (gus: 16 hash: 0) 0.892 sec ]
 [ GrB_eWiseAdd add generic 0.00292 sec ]
 [ GrB_Vector_nvals 5.59e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.00533 sec ]
 [ GxB_select 0.00306 sec ]
 [ GrB_Vector_nvals 2.28e-07 sec ]
 [ GxB_select mask 0.0127 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.0138 sec ]
 [ GrB_Vector_nvals 5.44e-07 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 4.4703e+07 Mwork 0 nthreads 4 ntasks 16 coarse: (gus: 0 hash: 0) fine: (gus: 16 hash: 0) 0.21 sec ]
 [ GrB_eWiseAdd add generic 0.0078 sec ]
 [ GrB_Vector_nvals 2.95e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.0028 sec ]
 [ GxB_select 0.000663 sec ]
 [ GrB_Vector_nvals 2.21e-07 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 0.000819 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.000693 sec ]
 [ GrB_Vector_nvals 2.01e-07 sec ]
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.0447 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 2732536) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.00466 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 2.33e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 9.31e-06 sec ]
 [ GxB_select 0.00498 sec ]
 [ GrB_Vector_nvals 1.35e-07 sec ]
 [ GxB_select 0.00291 sec ]
 [ GrB_Vector_nvals 1.76e-07 sec ]
 [ GxB_select 1.87e-05 sec ]
 [ GrB_Vector_nvals 3.31e-08 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 15408 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.00122 sec ]
 [ GrB_eWiseAdd add generic 2.15e-05 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 8.35e-05 sec ]
 [ GxB_select 1.38e-05 sec ]
 [ GrB_Vector_nvals 6.19e-08 sec ]
 [ GxB_select mask 2.5e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.63e-05 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_vxm C=A*B, saxpy axbflops 26 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 1.43e-05 sec ]
 [ GrB_eWiseAdd add generic 1.65e-05 sec ]
 [ GrB_Vector_nvals 5.1e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 2.25e-05 sec ]
 [ GxB_select 2.97e-06 sec ]
 [ GrB_Vector_nvals 5.1e-08 sec ]
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.00127 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 4009) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 3.1e-05 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 1.95e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 6.82e-06 sec ]
 [ GxB_select 0.00125 sec ]
 [ GxB_select 4.19e-06 sec ]
 [ GrB_Vector_nvals 1.5e-07 sec ]

 sssp11: done


---------------------- sssp12: nthreads 4
 [ GrB_assign Method 21: (C dense) = scalar 0.00867 sec ]
 [ GxB_select 0.352 sec ]
 [ GxB_select 0.101 sec ]
 [ GrB_Matrix_nvals 3.03e-07 sec ]
 [ GrB_Matrix_nvals 5.18e-07 sec ]
 [ GrB_Matrix_nvals 3.9e-08 sec ]
 [ GrB_Vector_nvals wait (zombies: 0, pending: 1) 9.41e-06 sec ]

============================= outer: 0
 [ GxB_select 8.24e-06 sec ]
 [ GrB_Vector_nvals 4.3e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 132 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 1.92e-05 sec ]
 [ GrB_eWiseAdd wait (zombies: 0, pending: 1) add generic 1.85e-05 sec ]
 [ GrB_Vector_nvals 3.9e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 3.03e-05 sec ]
 [ GxB_select 3.96e-06 sec ]
 [ GrB_Vector_nvals 3.6e-08 sec ]
 [ GxB_select mask 9.88e-06 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.75e-05 sec ]
 [ GrB_Vector_nvals 3.81e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 13379 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.000618 sec ]
 [ GrB_eWiseAdd add generic 8.19e-06 sec ]
 [ GrB_Vector_nvals 6.19e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 7.19e-05 sec ]
 [ GxB_select 1.37e-05 sec ]
 [ GrB_Vector_nvals 6.2e-08 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 2.23e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.000345 sec ]
 [ GrB_Vector_nvals 6.6e-08 sec ]

=============== next outer:
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 8.95e-05 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 133) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 1.67e-05 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 1.71e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 7.09e-06 sec ]
 [ GxB_select 0.00111 sec ]
 [ GrB_Vector_nvals 1.24e-07 sec ]
 [ GxB_select 1.5e-05 sec ]
 [ GrB_Vector_nvals 4.69e-08 sec ]

============================= outer: 1
 [ GxB_select 1.21e-05 sec ]
 [ GrB_Vector_nvals 3e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 1.11425e+06 Mwork 0 nthreads 4 ntasks 16 coarse: (gus: 0 hash: 0) fine: (gus: 16 hash: 0) 0.00576 sec ]
 [ GrB_eWiseAdd add generic 3.44e-05 sec ]
 [ GrB_Vector_nvals 1.69e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.000758 sec ]
 [ GxB_select 0.000255 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GxB_select mask 0.00131 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.00271 sec ]
 [ GrB_Vector_nvals 3.93e-07 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 3.51864e+07 Mwork 0 nthreads 4 ntasks 16 coarse: (gus: 0 hash: 0) fine: (gus: 16 hash: 0) 0.169 sec ]
 [ GrB_eWiseAdd add generic 0.000946 sec ]
 [ GrB_Vector_nvals 3.06e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.00382 sec ]
 [ GxB_select 0.00338 sec ]
 [ GrB_Vector_nvals 1.81e-07 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 0.00107 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.0204 sec ]
 [ GrB_Vector_nvals 3.9e-07 sec ]

=============== next outer:
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.0137 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 335763) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.000591 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 2.51e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.4e-05 sec ]
 [ GxB_select 0.00421 sec ]
 [ GrB_Vector_nvals 1.63e-07 sec ]
 [ GxB_select 0.00307 sec ]
 [ GrB_Vector_nvals 2.14e-07 sec ]

============================= outer: 2
 [ GxB_select 0.00297 sec ]
 [ GrB_Vector_nvals 3.19e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 1.53337e+08 Mwork 0 nthreads 4 ntasks 16 coarse: (gus: 0 hash: 0) fine: (gus: 16 hash: 0) 0.898 sec ]
 [ GrB_eWiseAdd add generic 0.00293 sec ]
 [ GrB_Vector_nvals 7.02e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.00534 sec ]
 [ GxB_select 0.00322 sec ]
 [ GrB_Vector_nvals 1.52e-07 sec ]
 [ GxB_select mask 0.0127 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.0137 sec ]
 [ GrB_Vector_nvals 4.41e-07 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 4.4703e+07 Mwork 0 nthreads 4 ntasks 16 coarse: (gus: 0 hash: 0) fine: (gus: 16 hash: 0) 0.221 sec ]
 [ GrB_eWiseAdd add generic 0.00783 sec ]
 [ GrB_Vector_nvals 3.84e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 0.00277 sec ]
 [ GxB_select 0.00066 sec ]
 [ GrB_Vector_nvals 2.81e-07 sec ]
 [ GxB_select (C<M>=Z via assign) Method 06s: C(:,:)<M> = Z ; using S 0.000772 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 0.000694 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]

=============== next outer:
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.0448 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 2732536) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.00465 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 3.4e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.06e-05 sec ]
 [ GxB_select 0.00508 sec ]
 [ GrB_Vector_nvals 3.02e-07 sec ]
 [ GxB_select 0.00296 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]

============================= outer: 3
 [ GxB_select 1.27e-05 sec ]
 [ GrB_Vector_nvals 3.4e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 15408 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 0.00119 sec ]
 [ GrB_eWiseAdd add generic 1.74e-05 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 7.81e-05 sec ]
 [ GxB_select 1.29e-05 sec ]
 [ GrB_Vector_nvals 6.3e-08 sec ]
 [ GxB_select mask 2.35e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.06e-05 sec ]
 [ GrB_Vector_nvals 8.3e-08 sec ]

=============== inner:
 [ GrB_vxm C=A*B, saxpy axbflops 26 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 1.36e-05 sec ]
 [ GrB_eWiseAdd add generic 1.57e-05 sec ]
 [ GrB_Vector_nvals 5.9e-08 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 2.19e-05 sec ]
 [ GxB_select 2.78e-06 sec ]
 [ GrB_Vector_nvals 5.2e-08 sec ]

=============== next outer:
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 0.00126 sec ]
 [ GrB_vxm wait (zombies: 0, pending: 4009) C=A*B, saxpy axbflops 0 Mwork 0 nthreads 1 ntasks 1 coarse: (gus: 0 hash: 1) fine: (gus: 0 hash: 0) 3.57e-05 sec ]
 [ GrB_eWiseAdd (B dense) (mask is easy) masked_add 1.98e-05 sec ]
 [ GrB_apply (shallow-op) (C<M>=Z via assign) (C dense) Method 06n: C(:,:)<M> = Z ; no S 1.61e-05 sec ]
 [ GxB_select 0.00134 sec ]
 [ GxB_select 4.77e-06 sec ]
 [ GrB_Vector_nvals 1.35e-07 sec ]

 sssp12: done
 [ GrB_Matrix_nvals 8.37e-07 sec ]
 [ GrB_Matrix_extractTuples 0.479 sec ]
BF source: 766515 (zero-based)
 4: BF      time:       9.962728 sec  rate:    23.52
 4: SSSP11  time:       2.043990 sec  rate:   114.66 (delta 2)
 4: SSSP12  time:       2.056477 sec  rate:   113.97 (delta 2)
