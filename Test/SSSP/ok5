threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 1.43e-05 sec ]
 [ GxB_set 0.0212 sec ]
 [ GrB_Matrix_nvals 1.29e-05 sec ]
delta: 32
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 5.01e-05 sec ]
read time: 35.1004 sec
 [ GrB_apply (shallow-op) 2.81 sec ]
 [ GrB_Matrix_nvals 5.61e-07 sec ]
 [ GrB_Matrix_nvals 1.49e-07 sec ]
 [ GrB_apply (A full) (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_isone_double)) 2.8e-05 sec ]
 [ GrB_reduce (A full) 1.99e-05 sec ]
 [ GrB_Matrix_extractTuples (A full) 2.56e-05 sec ]
A is symmetric
transpose time: 7.86036e-07
input graph: nodes: 134217726 edges: 4223264644 max nthreads 40
# of source nodes: 64

 [ GxB_set (vector option) (sparse to bitmap) 0.00517 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 2.5e-05 sec ]
 [ GxB_select 1.46 sec ]
 [ GxB_select 2.64 sec ]
delta: 32
 [ GrB_Matrix_nvals 4.45e-07 sec ]
AL nnz: 0.537148 billion
 [ GrB_Matrix_nvals 8.75e-08 sec ]
AH nnz: 3.68612 billion
 [ GrB_assign (wait: 0 zombies, 1 pending) (hyper to sparse) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0163 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 5.23e-05 sec ]
 [ GrB_Vector_nvals 4.51e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 342 mwork 0 (nthreads 1 fine hash: 1) 0.000112 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) (hyper to sparse) Method 05: C(:,:)<M> = scalar ; no S 3.43e-05 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000856 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 2.32e-05 sec ]
 [ GxB_select masker:(S:S<S>=S) 8.03e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 7.1e-05 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 629939 mwork 0 (nthreads 9 fine hash: 10) 0.0104 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 2.48e-05 sec ]
 [ GrB_Vector_nvals 2.74e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0486 sec ]
 [ GrB_assign (wait: 0 zombies, 342 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00457 sec ]
 [ GxB_select masker:(S:S<S>=S) 0.00449 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00593 sec ]
 [ GrB_Vector_nvals 6.15e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.52641e+08 mwork 0 (nthreads 40 fine: 160) (sparse to bitmap) 0.473 sec ]
 [ GrB_assign (wait: 0 zombies, 337 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00351 sec ]
 [ GrB_Vector_nvals 4.28e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0449 sec ]
 [ GrB_assign (wait: 0 zombies, 495024 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.0816 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S<B>=B) 0.145 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0351 sec ]
 [ GrB_Vector_nvals 4.73e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 1.26 sec ]
 [ GrB_assign (wait: 0 zombies, 273908 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.0623 sec ]
 [ GrB_Vector_nvals 6.02e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.048 sec ]
 [ GrB_assign (wait: 0 zombies, 18911347 pending) add:(S<.>=S+H) (sparse to bitmap) Method:bit2:whole C<M,bitmap> = scalar 0.0548 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A 0.131 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0364 sec ]
 [ GrB_Vector_nvals 6.03e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 1.11 sec ]
 [ GrB_assign (wait: 0 zombies, 13172495 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.145 sec ]
 [ GrB_Vector_nvals 5.7e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0477 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0291 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A 0.129 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0372 sec ]
 [ GrB_Vector_nvals 5.22e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.497 sec ]
 [ GrB_assign (wait: 0 zombies, 13475107 pending) add:(S<.>=S+H) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = scalar 0.0542 sec ]
 [ GrB_Vector_nvals 5.85e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.047 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0214 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A 0.124 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0339 sec ]
 [ GrB_Vector_nvals 5.4e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.135 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap,struct> = scalar 0.0167 sec ]
 [ GrB_Vector_nvals 4.34e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0441 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0145 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A 0.114 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0153 sec ]
 [ GrB_Vector_nvals 6e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0389 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap,struct> = scalar 0.0108 sec ]
 [ GrB_Vector_nvals 5.23e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0346 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0117 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A (bitmap to sparse) 0.117 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0118 sec ]
 [ GrB_Vector_nvals 1.12e-06 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 97525 mwork 0 (nthreads 1 fine hash: 1) 0.0131 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 0.0013 sec ]
 [ GrB_Vector_nvals 4.21e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (C bitmap) (B bitmap) add:(S<S>=S+B) 0.00808 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.00071 sec ]
 [ GxB_select masker:(S:S<S>=S) 0.00199 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00106 sec ]
 [ GrB_Vector_nvals 1.94e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3114 mwork 0 (nthreads 1 fine hash: 1) 0.000464 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 6.34e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00127 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 3.32e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000254 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 8.97e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 35 pending) (hyper to sparse) 1.93e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 68 mwork 0 (nthreads 1 fine hash: 1) 5.51e-05 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 1.43e-05 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000661 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.26e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000105 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.4e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.0378 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 8.64 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0776 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0769 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0693 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap,struct> = A 0.0336 sec ]
 [ GrB_Vector_nvals 4.3e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.105 sec ]
 [ GxB_select (wait: 0 zombies, 33663226 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.143 sec ]
 [ GrB_Vector_nvals 4.58e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0735 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.0141 sec ]
 [ GrB_Vector_nvals 5.33e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.039 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0148 sec ]
 [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,replace> = A (bitmap to sparse) 0.126 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0113 sec ]
 [ GrB_Vector_nvals 6.72e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 65956 mwork 0 (nthreads 1 fine hash: 1) 0.0185 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 0.00205 sec ]
 [ GrB_Vector_nvals 1.96e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (C bitmap) (B bitmap) add:(S<S>=S+B) 0.00609 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.0003 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.00404 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000638 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 225 pending) (hyper to sparse) 1.59e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 230 mwork 0 (nthreads 1 fine hash: 1) 0.000102 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 2.05e-05 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000697 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.4e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000115 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.89e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.0338 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.237 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0463 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0186 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0196 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap,struct> = A 0.0211 sec ]
 [ GrB_Vector_nvals 1.04e-06 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0958 sec ]
 [ GxB_select (wait: 0 zombies, 23154741 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.143 sec ]
 [ GrB_Vector_nvals 3.89e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.063 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00636 sec ]
 [ GrB_Vector_nvals 5.7e-07 sec ]
 [ GrB_eWiseAdd (C bitmap) (B bitmap) add:(S<S>=S+B) 0.0038 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.00238 sec ]
 [ GxB_select (C bitmap) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,replace> = A (bitmap to sparse) 0.0307 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00356 sec ]
 [ GrB_Vector_nvals 3.84e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12326 mwork 0 (nthreads 1 fine hash: 1) 0.00364 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 0.000597 sec ]
 [ GrB_Vector_nvals 1.77e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00188 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 5.74e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000879 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000208 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 14 pending) (hyper to sparse) 1.92e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14 mwork 0 (nthreads 1 fine hash: 1) 4.98e-05 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = scalar 1.3e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00053 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.2e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000104 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.32e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.0375 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.128 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.049 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.017 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap> = scalar 0.0199 sec ]
 [ GrB_assign Method:bit2:whole C<M,bitmap,struct> = A 0.0158 sec ]
 [ GrB_Vector_nvals 5.16e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0928 sec ]
 [ GxB_select (wait: 0 zombies, 16696103 pending) (hyper to sparse) 0.00775 sec ]
 [ GrB_Vector_nvals 4.19e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 18997 mwork 0 (nthreads 1 fine hash: 1) 0.105 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00507 sec ]
 [ GrB_Vector_nvals 9.46e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (C bitmap) (B bitmap) add:(S<S>=S+B) 0.00269 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.00103 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.00143 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000706 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 4389 pending) (hyper to sparse) 2.06e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4407 mwork 0 (nthreads 1 fine hash: 1) 0.00138 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.00275 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00119 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 2.94e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000336 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000102 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 5 pending) (hyper to sparse) 1.72e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 4.58e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 4027 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00237 sec ]
 [ GrB_Vector_nvals 2.05e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00139 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.61e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000113 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.44e-05 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 4 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0251 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.09695e+07 mwork 0 (nthreads 40 fine: 160) 0.134 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0183 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.0139 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.00447 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A 0.0166 sec ]
 [ GrB_Vector_nvals 3.82e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0895 sec ]
 [ GxB_select (wait: 0 zombies, 12007189 pending) (hyper to sparse) 0.0173 sec ]
 [ GrB_Vector_nvals 4.32e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7974 mwork 0 (nthreads 1 fine hash: 1) 0.089 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00683 sec ]
 [ GrB_Vector_nvals 5.94e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00802 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000514 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000634 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000441 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 2024 pending) (hyper to sparse) 2.31e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2026 mwork 0 (nthreads 1 fine hash: 1) 0.000734 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.00166 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00689 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 2.08e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000207 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 6.76e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 1.61e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.48e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 1895 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00868 sec ]
 [ GrB_Vector_nvals 2.42e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00819 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.47e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000111 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.35e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0157 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6.70697e+06 mwork 0 (nthreads 40 fine: 103) 0.118 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0171 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.0033 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000357 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A 0.00953 sec ]
 [ GrB_Vector_nvals 9e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0792 sec ]
 [ GxB_select (wait: 0 zombies, 8319471 pending) (hyper to sparse) 0.011 sec ]
 [ GrB_Vector_nvals 3.63e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4184 mwork 0 (nthreads 1 fine hash: 1) 0.0729 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00538 sec ]
 [ GrB_Vector_nvals 4.14e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00619 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000301 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000438 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000278 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1134 pending) (hyper to sparse) 2.18e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1136 mwork 0 (nthreads 1 fine hash: 1) 0.00045 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.00105 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00772 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 2.32e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000145 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 5.7e-05 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 1080 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0232 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4.54339e+06 mwork 0 (nthreads 40 fine: 70) 0.0835 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0135 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00388 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000303 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A 0.0156 sec ]
 [ GrB_Vector_nvals 4.84e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0817 sec ]
 [ GxB_select (wait: 0 zombies, 5277051 pending) (hyper to sparse) 0.015 sec ]
 [ GrB_Vector_nvals 3.84e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2432 mwork 0 (nthreads 1 fine hash: 1) 0.069 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00317 sec ]
 [ GrB_Vector_nvals 3.87e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00842 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.00019 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000277 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000185 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 649 pending) (hyper to sparse) 1.9e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 649 mwork 0 (nthreads 1 fine hash: 1) 0.000287 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000644 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.007 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.58e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000124 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.66e-05 sec ]
 [ GrB_Vector_nvals 1.49e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 623 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0134 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.2853e+06 mwork 0 (nthreads 40 fine: 51) 0.08 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0168 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00472 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000277 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A 0.00884 sec ]
 [ GrB_Vector_nvals 4.53e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0817 sec ]
 [ GxB_select (wait: 0 zombies, 2691482 pending) (hyper to sparse) 0.0143 sec ]
 [ GrB_Vector_nvals 3.35e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1531 mwork 0 (nthreads 1 fine hash: 1) 0.0582 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00448 sec ]
 [ GrB_Vector_nvals 3.82e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00913 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000131 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000221 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000135 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 432 pending) (hyper to sparse) 1.97e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 432 mwork 0 (nthreads 1 fine hash: 1) 0.000214 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000419 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00508 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 2.09e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000137 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.41e-05 sec ]
 [ GrB_Vector_nvals 2.66e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 414 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0116 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.47992e+06 mwork 0 (nthreads 37 fine: 38) 0.0693 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00954 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.0026 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000247 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A 0.00726 sec ]
 [ GrB_Vector_nvals 3.87e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0742 sec ]
 [ GxB_select (wait: 0 zombies, 443871 pending) (hyper to sparse) 0.000563 sec ]
 [ GrB_Vector_nvals 3.82e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 501 mwork 0 (nthreads 1 fine hash: 1) 0.0114 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.000224 sec ]
 [ GrB_Vector_nvals 3.52e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00839 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 5.05e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000231 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 6.27e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 91 pending) (hyper to sparse) 2e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 91 mwork 0 (nthreads 1 fine hash: 1) 8.9e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 7.33e-05 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00771 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 1.52e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000118 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.85e-05 sec ]
 [ GrB_Vector_nvals 2.27e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 91 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00445 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 398528 mwork 0 (nthreads 6 fine hash: 7) 0.0332 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0368 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00153 sec ]
 [ GrB_assign Method:bit4:whole C<M> = scalar 0.000315 sec ]
 [ GrB_assign Method:bit4:whole C<M,struct> = A (bitmap to sparse) 0.0212 sec ]
 [ GrB_Vector_nvals 8.4e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.25 sec ]
 [ GxB_select (wait: 0 zombies, 52865 pending) (hyper to sparse) 0.000534 sec ]
 [ GrB_Vector_nvals 3.58e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 25 mwork 0 (nthreads 1 fine hash: 1) 0.00138 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 3.98e-05 sec ]
 [ GrB_Vector_nvals 1.66e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00287 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 2.19e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.00012 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.24e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 6 pending) (hyper to sparse) 1.61e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 4.7e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.3e-05 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000645 sec ]
 [ GrB_assign (wait: 0 zombies, 8 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.0002 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 9.86e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.41e-05 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 6 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000929 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 24520 mwork 0 (nthreads 1 fine hash: 1) 0.00723 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00293 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00035 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000192 sec ]
 [ GrB_assign (wait: 0 zombies, 48 pending) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.00318 sec ]
 [ GrB_Vector_nvals 1.96e-07 sec ]
 [ GrB_assign (wait: 24431 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.24 sec ]
 [ GxB_select (wait: 0 zombies, 28490 pending) (hyper to sparse) 0.000296 sec ]
 [ GrB_Vector_nvals 4.04e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 0.000821 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 3.06e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00211 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.85e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000118 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.06e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 2 pending) (hyper to sparse) 1.56e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.34e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.14e-05 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000641 sec ]
 [ GrB_assign (wait: 0 zombies, 3 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.000136 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 9.83e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.36e-05 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000548 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12298 mwork 0 (nthreads 1 fine hash: 1) 0.00396 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00568 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00021 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.00011 sec ]
 [ GrB_assign (wait: 0 zombies, 31 pending) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.00176 sec ]
 [ GrB_Vector_nvals 1.96e-07 sec ]
 [ GrB_assign (wait: 12253 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.225 sec ]
 [ GxB_select (wait: 0 zombies, 16271 pending) (hyper to sparse) 0.000187 sec ]
 [ GrB_Vector_nvals 3.32e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000546 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 2.35e-05 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000654 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.71e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06n: C(:,:)<M> = Z ; no S 3.88e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.94e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 2 pending) (hyper to sparse) 1.51e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.3e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.1e-05 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000678 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.000108 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000105 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.31e-05 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000385 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7229 mwork 0 (nthreads 1 fine hash: 1) 0.00247 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00175 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000149 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 7.62e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 19 pending) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.00108 sec ]
 [ GrB_Vector_nvals 2.25e-07 sec ]
 [ GrB_assign (wait: 7206 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.214 sec ]
 [ GxB_select (wait: 0 zombies, 9086 pending) (hyper to sparse) 0.000129 sec ]
 [ GrB_Vector_nvals 3.5e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000375 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 2.13e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00574 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.6e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000115 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.9e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 1.5e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.26e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.09e-05 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000529 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.000101 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000101 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.32e-05 sec ]
 [ GrB_Vector_nvals 1.4e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000283 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4506 mwork 0 (nthreads 1 fine hash: 1) 0.00162 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00533 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000105 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 4.59e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 9 pending) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.000619 sec ]
 [ GrB_Vector_nvals 2.03e-07 sec ]
 [ GrB_assign (wait: 4497 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.204 sec ]
 [ GxB_select (wait: 0 zombies, 4600 pending) (hyper to sparse) 8.57e-05 sec ]
 [ GrB_Vector_nvals 3.43e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000565 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 2.04e-05 sec ]
 [ GrB_Vector_nvals 1.9e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00248 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000192 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000302 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.09e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000358 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2656 mwork 0 (nthreads 1 fine hash: 1) 0.00159 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00311 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 7.9e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.000111 sec ]
 [ GrB_assign (wait: 0 zombies, 5 pending) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.000374 sec ]
 [ GrB_Vector_nvals 1.81e-07 sec ]
 [ GrB_assign (wait: 2651 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.166 sec ]
 [ GxB_select (wait: 0 zombies, 1955 pending) (hyper to sparse) 6.33e-05 sec ]
 [ GrB_Vector_nvals 4.86e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000161 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.97e-05 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00802 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.76e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000115 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.12e-05 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 1.61e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.39e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.12e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00057 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 8.14e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 9.75e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.35e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000147 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1403 mwork 0 (nthreads 1 fine hash: 1) 0.000583 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00112 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 6.08e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 2.29e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 6 pending) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.000236 sec ]
 [ GrB_Vector_nvals 2.14e-07 sec ]
 [ GrB_assign (wait: 1399 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.114 sec ]
 [ GxB_select (wait: 0 zombies, 564 pending) (hyper to sparse) 4.61e-05 sec ]
 [ GrB_Vector_nvals 3.5e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 9.2e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.9e-05 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00419 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.16e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000111 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.93e-05 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 3.96e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 497 mwork 0 (nthreads 1 fine hash: 1) 0.000239 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00106 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.3e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.59e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) add:(S<.>=S+H) Method 06s: C(:,:)<M> = Z ; using S 0.000166 sec ]
 [ GrB_Vector_nvals 2.14e-07 sec ]
 [ GrB_assign (wait: 497 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.072 sec ]
 [ GxB_select (wait: 0 zombies, 68 pending) (hyper to sparse) 4.57e-05 sec ]
 [ GrB_Vector_nvals 3.91e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 6.11e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.79e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.96e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 39 mwork 0 (nthreads 1 fine hash: 1) 5.9e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000713 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.13e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.07e-05 sec ]
 [ GrB_assign Method 06s: C(:,:)<M> = Z ; using S 9.13e-05 sec ]
 [ GrB_Vector_nvals 1.77e-07 sec ]
 [ GrB_assign (wait: 39 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0607 sec ]
 [ GxB_select (wait: 0 zombies, 29 pending) (hyper to sparse) 4.52e-05 sec ]
 [ GrB_Vector_nvals 3.22e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.73e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.75e-05 sec ]
 [ GrB_Vector_nvals 1.56e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.86e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.72e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00188 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.13e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.08e-05 sec ]
 [ GrB_assign Method 06s: C(:,:)<M> = Z ; using S 9.27e-05 sec ]
 [ GrB_Vector_nvals 1.81e-07 sec ]
 [ GrB_assign (wait: 13 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0556 sec ]
 [ GxB_select (wait: 0 zombies, 16 pending) (hyper to sparse) 3.89e-05 sec ]
 [ GrB_Vector_nvals 2.03e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.46e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.67e-05 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.87e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.61e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00068 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.01e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.04e-05 sec ]
 [ GrB_assign Method 06s: C(:,:)<M> = Z ; using S 9.01e-05 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_assign (wait: 13 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0471 sec ]
 [ GxB_select (wait: 0 zombies, 3 pending) (hyper to sparse) 3.97e-05 sec ]
 [ GrB_Vector_nvals 2.79e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.27e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.66e-05 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.75e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 3.89e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0016 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 9.73e-06 sec ]
 [ GrB_assign Method 06s: C(:,:)<M> = Z ; using S 8.93e-05 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_assign (wait: 2 zombies, 0 pending) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0464 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.76e-05 sec ]
 [ GrB_Vector_nvals 2.76e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.07e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.03e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000475 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.58e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.02e-05 sec ]
 [ GrB_assign Method 06n: C(:,:)<M> = Z ; no S 8.83e-06 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0437 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.8e-05 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.04e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.65e-05 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.64e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.77e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000732 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.84e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 9.78e-06 sec ]
 [ GrB_assign Method 06s: C(:,:)<M> = Z ; using S 8.9e-05 sec ]
 [ GrB_Vector_nvals 2.16e-07 sec ]
phase 0 :     0.0053 sec
phase 1 :     1.4601 sec
phase 2 :     2.6402 sec
phase 3 :     2.8086 sec
phase 4 :     4.1071 sec
phase 5 :     1.8683 sec
phase 6 :     0.2057 sec
phase 7 :     9.5415 sec
phase 8 :     0.7301 sec
phase 9 :     0.3611 sec
sssp14:  threads: 40 trial:  0 source   2338012 time:    23.7283 sec
 [ GxB_set (vector option) (sparse to bitmap) 0.00192 sec ]
 [ GxB_set (vector option) 1.2e-06 sec ]
 [ GxB_set (vector option) 2.42e-07 sec ]
 [ GxB_set (vector option) 2.42e-07 sec ]
 [ GxB_set (vector option) 2.33e-07 sec ]
 [ GxB_set (vector option) (sparse to bitmap) 0.0024 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0205 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.00247 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 2.31e-05 sec ]
 [ GrB_Matrix_nvals 1.58e-07 sec ]
 [ GxB_select 1.46 sec ]
 [ GrB_Matrix_nvals 3.99e-07 sec ]
 [ GxB_select 2.67 sec ]
 [ GrB_Matrix_nvals 3.58e-07 sec ]
delta: 32
 [ GrB_Matrix_nvals 3.28e-07 sec ]
AL nnz: 0.537148 billion
 [ GrB_Matrix_nvals 6.15e-08 sec ]
AH nnz: 3.68612 billion
 [ GrB_assign (C empty) Method 06n: C(:,:)<M> = Z ; no S 0.0223 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.59e-05 sec ]
 [ GrB_Vector_nvals 3.52e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 342 mwork 0 (nthreads 1 fine hash: 1) 7.09e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) (hyper to sparse) Method 05: C(:,:)<M> = scalar ; no S 3.24e-05 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B full) add:(S<S>=S+F) 0.00832 sec ]
 [ GxB_select 2.89e-05 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.14e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.47e-05 sec ]
 [ GrB_apply (C full) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign (full to bitmap) Method:bit4:whole C<M,struct> = A 0.0038 sec ]
 [ GrB_Vector_nvals 3.95e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 629939 mwork 0 (nthreads 9 fine hash: 10) 0.00992 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 2.99e-05 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0549 sec ]
 [ GxB_select 0.00296 sec ]
 [ GrB_Vector_nvals 3.32e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00126 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00316 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00611 sec ]
 [ GrB_Vector_nvals 5.22e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.52641e+08 mwork 0 (nthreads 40 fine: 160) 0.464 sec ]
 [ GrB_assign (wait: 0 zombies, 337 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00463 sec ]
 [ GrB_Vector_nvals 4.99e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0368 sec ]
 [ GxB_select 0.0164 sec ]
 [ GrB_Vector_nvals 4.04e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0124 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0369 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.0487 sec ]
 [ GrB_Vector_nvals 5.68e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4.83016e+08 mwork 0 (nthreads 40 fine: 160) 1.38 sec ]
 [ GrB_assign (wait: 0 zombies, 273908 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.0429 sec ]
 [ GrB_Vector_nvals 6.43e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.042 sec ]
 [ GxB_select 0.02 sec ]
 [ GrB_Vector_nvals 2.46e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0118 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0584 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.053 sec ]
 [ GrB_Vector_nvals 6.31e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4.13217e+08 mwork 0 (nthreads 40 fine: 160) 1.24 sec ]
 [ GrB_assign (wait: 0 zombies, 13172495 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.122 sec ]
 [ GrB_Vector_nvals 5.59e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0404 sec ]
 [ GxB_select 0.0187 sec ]
 [ GrB_Vector_nvals 4.82e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0108 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.051 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.0511 sec ]
 [ GrB_Vector_nvals 5.05e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.61133e+08 mwork 0 (nthreads 40 fine: 160) 0.593 sec ]
 [ GrB_assign (wait: 0 zombies, 13475107 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.111 sec ]
 [ GrB_Vector_nvals 5.96e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0337 sec ]
 [ GxB_select 0.0122 sec ]
 [ GrB_Vector_nvals 5.16e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00866 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0356 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.0416 sec ]
 [ GrB_Vector_nvals 5.72e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.5478e+07 mwork 0 (nthreads 40 fine: 160) 0.2 sec ]
 [ GrB_assign (wait: 0 zombies, 1878188 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.0654 sec ]
 [ GrB_Vector_nvals 1.01e-06 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0266 sec ]
 [ GxB_select 0.00969 sec ]
 [ GrB_Vector_nvals 5.77e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00398 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0226 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.0196 sec ]
 [ GrB_Vector_nvals 4.84e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.04752e+06 mwork 0 (nthreads 31 fine hash: 32) 0.0292 sec ]
 [ GrB_assign (wait: 0 zombies, 237935 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.0574 sec ]
 [ GrB_Vector_nvals 8.08e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.146 sec ]
 [ GxB_select 0.0028 sec ]
 [ GrB_Vector_nvals 3.26e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000639 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00105 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00473 sec ]
 [ GrB_Vector_nvals 4.75e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 97525 mwork 0 (nthreads 1 fine hash: 1) 0.0132 sec ]
 [ GrB_assign (wait: 0 zombies, 24133 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.0527 sec ]
 [ GrB_Vector_nvals 5.1e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0143 sec ]
 [ GxB_select 0.000262 sec ]
 [ GrB_Vector_nvals 1.55e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.65e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000875 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000765 sec ]
 [ GrB_Vector_nvals 1.66e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3114 mwork 0 (nthreads 1 fine hash: 1) 0.000624 sec ]
 [ GrB_assign (wait: 0 zombies, 1571 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.0216 sec ]
 [ GrB_Vector_nvals 5.94e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00691 sec ]
 [ GxB_select 2.56e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.64e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.55e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 7.79e-05 sec ]
 [ GrB_Vector_nvals 1.77e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 68 mwork 0 (nthreads 1 fine hash: 1) 7.6e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 72 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.0191 sec ]
 [ GrB_Vector_nvals 3.87e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00815 sec ]
 [ GxB_select 1.53e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.32e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.73e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.25e-05 sec ]
 [ GrB_Vector_nvals 1.81e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.053 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.57893e+09 mwork 0 (nthreads 40 fine: 160) 9.22 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.059 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.0725 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0177 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00767 sec ]
 [ GrB_reduce (A full) 0.000203 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0872 sec ]
 [ GxB_select (wait: 0 zombies, 33663226 pending) (hyper to sparse) 0.0212 sec ]
 [ GrB_Vector_nvals 3.63e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.26883e+06 mwork 0 (nthreads 40 fine: 50) 0.128 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00705 sec ]
 [ GrB_Vector_nvals 1.02e-06 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0157 sec ]
 [ GxB_select 0.000645 sec ]
 [ GrB_Vector_nvals 3.11e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000918 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00129 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00639 sec ]
 [ GrB_Vector_nvals 9.29e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 65956 mwork 0 (nthreads 1 fine hash: 1) 0.0177 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.0408 sec ]
 [ GrB_Vector_nvals 2.96e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00811 sec ]
 [ GxB_select 0.000179 sec ]
 [ GrB_Vector_nvals 1.84e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.86e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000591 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000438 sec ]
 [ GrB_Vector_nvals 2.01e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 230 mwork 0 (nthreads 1 fine hash: 1) 0.000133 sec ]
 [ GrB_assign (wait: 0 zombies, 52578 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00674 sec ]
 [ GrB_Vector_nvals 2.92e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00253 sec ]
 [ GxB_select 1.5e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.23e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.4e-05 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 129 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0222 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5.75736e+07 mwork 0 (nthreads 40 fine: 160) 0.293 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0273 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00202 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.006 sec ]
 [ GrB_reduce (A full) 3.15e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0796 sec ]
 [ GxB_select (wait: 0 zombies, 23154741 pending) (hyper to sparse) 0.0153 sec ]
 [ GrB_Vector_nvals 3.71e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 64163 mwork 0 (nthreads 1 fine hash: 1) 0.14 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00747 sec ]
 [ GrB_Vector_nvals 5.23e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00638 sec ]
 [ GxB_select 0.000384 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000295 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00121 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00135 sec ]
 [ GrB_Vector_nvals 2.01e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12326 mwork 0 (nthreads 1 fine hash: 1) 0.00355 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.00971 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00197 sec ]
 [ GxB_select 4.1e-05 sec ]
 [ GrB_Vector_nvals 1.4e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.19e-06 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00015 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000135 sec ]
 [ GrB_Vector_nvals 1.68e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14 mwork 0 (nthreads 1 fine hash: 1) 5.14e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 10805 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00334 sec ]
 [ GrB_Vector_nvals 2.38e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00225 sec ]
 [ GxB_select 1.23e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 11 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0169 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.11405e+07 mwork 0 (nthreads 40 fine: 160) 0.178 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0203 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.0074 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00149 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00607 sec ]
 [ GrB_reduce (A full) 0.000622 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.073 sec ]
 [ GxB_select (wait: 0 zombies, 16696103 pending) (hyper to sparse) 0.0127 sec ]
 [ GrB_Vector_nvals 3.37e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 18997 mwork 0 (nthreads 1 fine hash: 1) 0.105 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.0037 sec ]
 [ GrB_Vector_nvals 4.1e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00351 sec ]
 [ GxB_select 0.000142 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000149 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000453 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00061 sec ]
 [ GrB_Vector_nvals 1.73e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4407 mwork 0 (nthreads 1 fine hash: 1) 0.00151 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.0034 sec ]
 [ GrB_Vector_nvals 1.62e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0015 sec ]
 [ GxB_select 2.24e-05 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.47e-06 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.58e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 8.44e-05 sec ]
 [ GrB_Vector_nvals 2.14e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 4.77e-05 sec ]
 [ GrB_assign (wait: 0 zombies, 4027 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00375 sec ]
 [ GrB_Vector_nvals 2.72e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000718 sec ]
 [ GxB_select 1.18e-05 sec ]
 [ GrB_Vector_nvals 1.73e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 4 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0149 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.09695e+07 mwork 0 (nthreads 40 fine: 160) 0.13 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0186 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00412 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0006 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00419 sec ]
 [ GrB_reduce (A full) 0.000185 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0679 sec ]
 [ GxB_select (wait: 0 zombies, 12007189 pending) (hyper to sparse) 0.00914 sec ]
 [ GrB_Vector_nvals 3.95e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7974 mwork 0 (nthreads 1 fine hash: 1) 0.0861 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00328 sec ]
 [ GrB_Vector_nvals 6.61e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00229 sec ]
 [ GxB_select 7.21e-05 sec ]
 [ GrB_Vector_nvals 1.58e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.26e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000243 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000327 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2026 mwork 0 (nthreads 1 fine hash: 1) 0.00073 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.00142 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00411 sec ]
 [ GxB_select 1.72e-05 sec ]
 [ GrB_Vector_nvals 1.81e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.01e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00012 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000237 sec ]
 [ GrB_Vector_nvals 1.77e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000176 sec ]
 [ GrB_assign (wait: 0 zombies, 1895 pending) add:(S<.>=S+H) Method 05: C(:,:)<M> = scalar ; no S 0.00239 sec ]
 [ GrB_Vector_nvals 3.04e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00115 sec ]
 [ GxB_select 1.14e-05 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0136 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6.70697e+06 mwork 0 (nthreads 40 fine: 103) 0.11 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0182 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00359 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000317 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00389 sec ]
 [ GrB_reduce (A full) 3.45e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0645 sec ]
 [ GxB_select (wait: 0 zombies, 8319471 pending) (hyper to sparse) 0.00608 sec ]
 [ GrB_Vector_nvals 3.43e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4184 mwork 0 (nthreads 1 fine hash: 1) 0.0736 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00518 sec ]
 [ GrB_Vector_nvals 3.58e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00136 sec ]
 [ GxB_select 4.7e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.79e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000165 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000216 sec ]
 [ GrB_Vector_nvals 2.01e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1136 mwork 0 (nthreads 1 fine hash: 1) 0.000457 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000849 sec ]
 [ GrB_Vector_nvals 2.03e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00706 sec ]
 [ GxB_select 1.38e-05 sec ]
 [ GrB_Vector_nvals 1.88e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.3e-06 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.06e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.93e-05 sec ]
 [ GrB_Vector_nvals 1.9e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 1080 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0139 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4.54339e+06 mwork 0 (nthreads 40 fine: 70) 0.0845 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0169 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00289 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000271 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00732 sec ]
 [ GrB_reduce (A full) 0.00386 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0607 sec ]
 [ GxB_select (wait: 0 zombies, 5277051 pending) (hyper to sparse) 0.00251 sec ]
 [ GrB_Vector_nvals 4.15e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2432 mwork 0 (nthreads 1 fine hash: 1) 0.0639 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.00569 sec ]
 [ GrB_Vector_nvals 6.11e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00759 sec ]
 [ GxB_select 3.49e-05 sec ]
 [ GrB_Vector_nvals 1.99e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.1e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000133 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000149 sec ]
 [ GrB_Vector_nvals 1.88e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 649 mwork 0 (nthreads 1 fine hash: 1) 0.000294 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000637 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00701 sec ]
 [ GxB_select 1.29e-05 sec ]
 [ GrB_Vector_nvals 2.05e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 623 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0137 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.2853e+06 mwork 0 (nthreads 40 fine: 51) 0.0757 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0111 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00385 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000248 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00543 sec ]
 [ GrB_reduce (A full) 0.000283 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0631 sec ]
 [ GxB_select (wait: 0 zombies, 2691482 pending) (hyper to sparse) 0.00215 sec ]
 [ GrB_Vector_nvals 3.73e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1531 mwork 0 (nthreads 1 fine hash: 1) 0.0571 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.0023 sec ]
 [ GrB_Vector_nvals 4.12e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00924 sec ]
 [ GxB_select 3.2e-05 sec ]
 [ GrB_Vector_nvals 5.44e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.3e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000119 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000128 sec ]
 [ GrB_Vector_nvals 2.72e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 432 mwork 0 (nthreads 1 fine hash: 1) 0.000248 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 0.000381 sec ]
 [ GrB_Vector_nvals 3.17e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00112 sec ]
 [ GxB_select 1.34e-05 sec ]
 [ GrB_Vector_nvals 2.18e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 414 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0105 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.47992e+06 mwork 0 (nthreads 37 fine: 38) 0.0732 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0118 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00345 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000236 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00355 sec ]
 [ GrB_reduce (A full) 0.00398 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0603 sec ]
 [ GxB_select (wait: 0 zombies, 443871 pending) (hyper to sparse) 0.000788 sec ]
 [ GrB_Vector_nvals 3.95e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 501 mwork 0 (nthreads 1 fine hash: 1) 0.0109 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 0.000387 sec ]
 [ GrB_Vector_nvals 2.12e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00838 sec ]
 [ GxB_select 1.61e-05 sec ]
 [ GrB_Vector_nvals 1.92e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.59e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.75e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 5.33e-05 sec ]
 [ GrB_Vector_nvals 1.7e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 91 mwork 0 (nthreads 1 fine hash: 1) 8.12e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 5.38e-05 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00389 sec ]
 [ GxB_select 1.04e-05 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 91 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00281 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 398528 mwork 0 (nthreads 6 fine hash: 7) 0.0326 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0388 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00133 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00024 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00105 sec ]
 [ GrB_reduce (A full) 0.00519 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0609 sec ]
 [ GxB_select (wait: 0 zombies, 52865 pending) (hyper to sparse) 0.000521 sec ]
 [ GrB_Vector_nvals 5.61e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 25 mwork 0 (nthreads 1 fine hash: 1) 0.00161 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 3.29e-05 sec ]
 [ GrB_Vector_nvals 1.68e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00446 sec ]
 [ GxB_select 1.28e-05 sec ]
 [ GrB_Vector_nvals 1.4e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.08e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.77e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.34e-05 sec ]
 [ GrB_Vector_nvals 1.49e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 4.75e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.69e-05 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000659 sec ]
 [ GxB_select 1.02e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 6 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00105 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 24520 mwork 0 (nthreads 1 fine hash: 1) 0.00786 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00307 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000366 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.34e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000312 sec ]
 [ GrB_reduce (A full) 0.00218 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0605 sec ]
 [ GxB_select (wait: 0 zombies, 28490 pending) (hyper to sparse) 0.000296 sec ]
 [ GrB_Vector_nvals 3.82e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 0.000846 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 2.7e-05 sec ]
 [ GrB_Vector_nvals 1.49e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000826 sec ]
 [ GxB_select 1.06e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.66e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.57e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.17e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.28e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.54e-05 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000613 sec ]
 [ GxB_select 9.32e-06 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000629 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12298 mwork 0 (nthreads 1 fine hash: 1) 0.00404 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00755 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000238 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.2e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000201 sec ]
 [ GrB_reduce (A full) 7.25e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0604 sec ]
 [ GxB_select (wait: 0 zombies, 16271 pending) (hyper to sparse) 0.000191 sec ]
 [ GrB_Vector_nvals 3.95e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000568 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 2.34e-05 sec ]
 [ GrB_Vector_nvals 1.62e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000551 sec ]
 [ GxB_select 1.13e-05 sec ]
 [ GrB_Vector_nvals 1.58e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.03e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.63e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.2e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.35e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.54e-05 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000852 sec ]
 [ GxB_select 9.87e-06 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 2 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000458 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7229 mwork 0 (nthreads 1 fine hash: 1) 0.00249 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00497 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000146 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.24e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000123 sec ]
 [ GrB_reduce (A full) 0.000299 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0579 sec ]
 [ GxB_select (wait: 0 zombies, 9086 pending) (hyper to sparse) 0.000126 sec ]
 [ GrB_Vector_nvals 3.67e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000399 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 2.12e-05 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000864 sec ]
 [ GxB_select 1.13e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.02e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.83e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.09e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.24e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.51e-05 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000875 sec ]
 [ GxB_select 9.66e-06 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000332 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4506 mwork 0 (nthreads 1 fine hash: 1) 0.00168 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00417 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000108 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.35e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.78e-05 sec ]
 [ GrB_reduce (A full) 0.000996 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0578 sec ]
 [ GxB_select (wait: 0 zombies, 4600 pending) (hyper to sparse) 8.58e-05 sec ]
 [ GrB_Vector_nvals 2.79e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000257 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.98e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000963 sec ]
 [ GxB_select 1.09e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.07e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000114 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 3.94e-05 sec ]
 [ GrB_Vector_nvals 1.97e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00017 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2656 mwork 0 (nthreads 1 fine hash: 1) 0.00105 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00243 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 8.1e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.69e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.19e-05 sec ]
 [ GrB_reduce (A full) 0.000207 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0516 sec ]
 [ GxB_select (wait: 0 zombies, 1955 pending) (hyper to sparse) 6.87e-05 sec ]
 [ GrB_Vector_nvals 3.35e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000163 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.95e-05 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000592 sec ]
 [ GxB_select 1.08e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.83e-06 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.65e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.07e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.19e-05 sec ]
 [ GrB_assign Method 05: C(:,:)<M> = scalar ; no S 1.47e-05 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000894 sec ]
 [ GxB_select 9.75e-06 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (wait: 0 zombies, 1 pending) add:(S<.>=S+H) (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000178 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1403 mwork 0 (nthreads 1 fine hash: 1) 0.000596 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00116 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 6.25e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.33e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.01e-05 sec ]
 [ GrB_reduce (A full) 9.54e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0407 sec ]
 [ GxB_select (wait: 0 zombies, 564 pending) (hyper to sparse) 4.57e-05 sec ]
 [ GrB_Vector_nvals 4.41e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 9.28e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.72e-05 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000536 sec ]
 [ GxB_select 1.1e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 4.82e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 497 mwork 0 (nthreads 1 fine hash: 1) 0.000248 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00105 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 5.25e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.19e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.9e-05 sec ]
 [ GrB_reduce (A full) 9.52e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0356 sec ]
 [ GxB_select (wait: 0 zombies, 68 pending) (hyper to sparse) 4.3e-05 sec ]
 [ GrB_Vector_nvals 2.83e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.87e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.7e-05 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.95e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 39 mwork 0 (nthreads 1 fine hash: 1) 5.89e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00174 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.18e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.11e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.89e-06 sec ]
 [ GrB_reduce (A full) 0.000316 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0324 sec ]
 [ GxB_select (wait: 0 zombies, 29 pending) (hyper to sparse) 4.03e-05 sec ]
 [ GrB_Vector_nvals 3.56e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.59e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.64e-05 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.83e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.51e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00198 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.12e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.93e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.31e-06 sec ]
 [ GrB_reduce (A full) 0.00131 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0316 sec ]
 [ GxB_select (wait: 0 zombies, 16 pending) (hyper to sparse) 4.14e-05 sec ]
 [ GrB_Vector_nvals 2.83e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.62e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.63e-05 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.73e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.61e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000873 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.15e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.08e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.34e-06 sec ]
 [ GrB_reduce (A full) 0.00179 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0305 sec ]
 [ GxB_select (wait: 0 zombies, 3 pending) (hyper to sparse) 3.93e-05 sec ]
 [ GrB_Vector_nvals 4.17e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.36e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.6e-05 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.66e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 3.88e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000673 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.01e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.47e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.98e-06 sec ]
 [ GrB_reduce (A full) 0.00294 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0306 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.03e-05 sec ]
 [ GrB_Vector_nvals 3.45e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.04e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.19e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00039 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.72e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.56e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.8e-06 sec ]
 [ GrB_reduce (A full) 0.00481 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0366 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.07e-05 sec ]
 [ GrB_Vector_nvals 3.56e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 6.22e-05 sec ]
 [ GrB_assign (C empty) Method 05e: (C empty)<M> = scalar 1.61e-05 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.71e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.79e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0105 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.1e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.78e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.31e-06 sec ]
 [ GrB_reduce (A full) 0.00943 sec ]
phase 0 :     0.0275 sec
phase 1 :     1.4558 sec
phase 2 :     2.6702 sec
phase 3 :     1.2382 sec
phase 4 :     4.6253 sec
phase 5 :     1.1213 sec
phase 6 :     0.1648 sec
phase 7 :    10.2120 sec
phase 8 :     0.4845 sec
phase 9 :     0.6064 sec
sssp15:  threads: 40 trial:  0 source   2338012 time:    22.6061 sec
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0204 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.00242 sec ]
 [ GxB_select 1.46 sec ]
 [ GxB_select 2.66 sec ]
 [ GrB_Matrix_nvals 6.59e-07 sec ]
 [ GrB_Matrix_nvals 7.1e-07 sec ]
 [ GrB_Matrix_nvals 8.75e-08 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 2.46e-05 sec ]
 [ GrB_assign (C empty) Method 06n: C(:,:)<M> = Z ; no S 0.0176 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.15e-05 sec ]
 [ GrB_Vector_nvals 3.26e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 342 mwork 0 (nthreads 1 fine hash: 1) 7.14e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 1 pending) (hyper to sparse) add:(S<.>=S+S) (generic add: pair) 9.08e-05 sec ]
 [ GrB_Vector_nvals 2.14e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B full) add:(S<S>=S+F) 0.00117 sec ]
 [ GxB_select 1.32e-05 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.29e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.26e-05 sec ]
 [ GrB_apply (C full) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign (full to bitmap) Method:bit4:whole C<M,struct> = A 0.00234 sec ]
 [ GrB_Vector_nvals 2.29e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 629939 mwork 0 (nthreads 9 fine hash: 10) 0.0101 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.31e-05 sec ]
 [ GrB_Vector_nvals 1.64e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0541 sec ]
 [ GxB_select 0.00046 sec ]
 [ GrB_Vector_nvals 8.16e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00135 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00253 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00602 sec ]
 [ GrB_Vector_nvals 5.07e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.52641e+08 mwork 0 (nthreads 40 fine: 160) (sparse to bitmap) 0.466 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000602 sec ]
 [ GrB_Vector_nvals 4.86e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0579 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0524 sec ]
 [ GrB_Vector_nvals 3.46e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0219 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.153 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct> = A 0.0456 sec ]
 [ GrB_Vector_nvals 5.4e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 1.26 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0411 sec ]
 [ GrB_Vector_nvals 4.17e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0532 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0563 sec ]
 [ GrB_Vector_nvals 3.73e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0277 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.159 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct> = A 0.0423 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 1.11 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0611 sec ]
 [ GrB_Vector_nvals 5.12e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.052 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0564 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0245 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.154 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct> = A 0.043 sec ]
 [ GrB_Vector_nvals 5.16e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.496 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0595 sec ]
 [ GrB_Vector_nvals 4.86e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0507 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0511 sec ]
 [ GrB_Vector_nvals 4.34e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0135 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.158 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct> = A 0.0366 sec ]
 [ GrB_Vector_nvals 4.47e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.137 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0529 sec ]
 [ GrB_Vector_nvals 4.12e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0506 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0487 sec ]
 [ GrB_Vector_nvals 3.91e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00816 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.132 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap,struct> = A 0.02 sec ]
 [ GrB_Vector_nvals 6.03e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0399 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0499 sec ]
 [ GrB_Vector_nvals 4.9e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0422 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0643 sec ]
 [ GrB_Vector_nvals 7.17e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000723 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.1 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00367 sec ]
 [ GrB_Vector_nvals 3.69e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 97525 mwork 0 (nthreads 1 fine hash: 1) 0.0126 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0458 sec ]
 [ GrB_Vector_nvals 1.07e-06 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0106 sec ]
 [ GxB_select 0.000263 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.68e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000885 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000704 sec ]
 [ GrB_Vector_nvals 1.51e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3114 mwork 0 (nthreads 1 fine hash: 1) 0.000589 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0437 sec ]
 [ GrB_Vector_nvals 4.04e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0061 sec ]
 [ GxB_select 2.78e-05 sec ]
 [ GrB_Vector_nvals 2.42e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0001 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 8.09e-05 sec ]
 [ GrB_Vector_nvals 2.31e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 68 mwork 0 (nthreads 1 fine hash: 1) 7.87e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0454 sec ]
 [ GrB_Vector_nvals 2.33e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000675 sec ]
 [ GxB_select 1.45e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.59e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.91e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.45e-05 sec ]
 [ GrB_Vector_nvals 2.16e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.0521 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 8.71 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0749 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0804 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0501 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0264 sec ]
 [ GrB_reduce (A full) 0.000233 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0881 sec ]
 [ GxB_select (wait: 0 zombies, 33663226 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.137 sec ]
 [ GrB_Vector_nvals 3.15e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.075 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0405 sec ]
 [ GrB_Vector_nvals 4.23e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0433 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.066 sec ]
 [ GrB_Vector_nvals 1.11e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000958 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.101 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.005 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 65956 mwork 0 (nthreads 1 fine hash: 1) 0.0173 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0346 sec ]
 [ GrB_Vector_nvals 5.01e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00839 sec ]
 [ GxB_select 0.000181 sec ]
 [ GrB_Vector_nvals 1.73e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.34e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000591 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000472 sec ]
 [ GrB_Vector_nvals 2.01e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 230 mwork 0 (nthreads 1 fine hash: 1) 0.00016 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0332 sec ]
 [ GrB_Vector_nvals 7.6e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00427 sec ]
 [ GxB_select 1.53e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.61e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.71e-05 sec ]
 [ GrB_Vector_nvals 1.99e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.044 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.245 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0516 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0278 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0115 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0165 sec ]
 [ GrB_reduce (A full) 0.00212 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0773 sec ]
 [ GxB_select (wait: 0 zombies, 23154741 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.136 sec ]
 [ GrB_Vector_nvals 3.84e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0549 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0385 sec ]
 [ GrB_Vector_nvals 5.2e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00169 sec ]
 [ GxB_select 0.000424 sec ]
 [ GrB_Vector_nvals 2.22e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000323 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00131 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00142 sec ]
 [ GrB_Vector_nvals 2.01e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12326 mwork 0 (nthreads 1 fine hash: 1) 0.00367 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0339 sec ]
 [ GrB_Vector_nvals 4.21e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00422 sec ]
 [ GxB_select 4.58e-05 sec ]
 [ GrB_Vector_nvals 2.09e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.75e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000157 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00015 sec ]
 [ GrB_Vector_nvals 2.07e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14 mwork 0 (nthreads 1 fine hash: 1) 6.72e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0333 sec ]
 [ GrB_Vector_nvals 3.91e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00491 sec ]
 [ GxB_select 1.43e-05 sec ]
 [ GrB_Vector_nvals 1.79e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) (sparse to bitmap) Method:bit2:whole C<M,bitmap,struct> = A 0.0397 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.131 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0517 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2:whole C<M,bitmap> = A 0.0198 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00947 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0104 sec ]
 [ GrB_reduce (A full) 0.000266 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0719 sec ]
 [ GxB_select (wait: 0 zombies, 16696103 pending) (hyper to sparse) 0.0158 sec ]
 [ GrB_Vector_nvals 3.89e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 18997 mwork 0 (nthreads 1 fine hash: 1) 0.106 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00859 sec ]
 [ GrB_Vector_nvals 6.72e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00459 sec ]
 [ GxB_select 0.000142 sec ]
 [ GrB_Vector_nvals 1.7e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000162 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000458 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.00062 sec ]
 [ GrB_Vector_nvals 2.29e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4407 mwork 0 (nthreads 1 fine hash: 1) 0.00152 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00337 sec ]
 [ GrB_Vector_nvals 2.07e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00144 sec ]
 [ GxB_select 2.44e-05 sec ]
 [ GrB_Vector_nvals 1.51e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.21e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000101 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 8.3e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 5.63e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0026 sec ]
 [ GrB_Vector_nvals 3.58e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000609 sec ]
 [ GxB_select 1.39e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0153 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.09695e+07 mwork 0 (nthreads 40 fine: 160) 0.122 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0163 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00387 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000439 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00436 sec ]
 [ GrB_reduce (A full) 0.000351 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0675 sec ]
 [ GxB_select (wait: 0 zombies, 12007189 pending) (hyper to sparse) 0.0101 sec ]
 [ GrB_Vector_nvals 3.97e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7974 mwork 0 (nthreads 1 fine hash: 1) 0.109 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00425 sec ]
 [ GrB_Vector_nvals 5.23e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00198 sec ]
 [ GxB_select 7.41e-05 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.39e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00024 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000329 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2026 mwork 0 (nthreads 1 fine hash: 1) 0.000729 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00287 sec ]
 [ GrB_Vector_nvals 2.33e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0016 sec ]
 [ GxB_select 1.77e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.12e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.99e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 6.15e-05 sec ]
 [ GrB_Vector_nvals 1.49e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 5.04e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00249 sec ]
 [ GrB_Vector_nvals 2.91e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000579 sec ]
 [ GxB_select 1.26e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0125 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6.70697e+06 mwork 0 (nthreads 40 fine: 103) 0.105 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0182 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00347 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000477 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00382 sec ]
 [ GrB_reduce (A full) 3.22e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0661 sec ]
 [ GxB_select (wait: 0 zombies, 8319471 pending) (hyper to sparse) 0.00555 sec ]
 [ GrB_Vector_nvals 3.91e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4184 mwork 0 (nthreads 1 fine hash: 1) 0.0965 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00764 sec ]
 [ GrB_Vector_nvals 5.77e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00181 sec ]
 [ GxB_select 6.41e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.82e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00022 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000292 sec ]
 [ GrB_Vector_nvals 1.84e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1136 mwork 0 (nthreads 1 fine hash: 1) 0.000461 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00247 sec ]
 [ GrB_Vector_nvals 2.79e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00166 sec ]
 [ GxB_select 1.48e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.08e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.02e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 5.28e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0126 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4.54339e+06 mwork 0 (nthreads 40 fine: 70) 0.0902 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0145 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00286 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000265 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00658 sec ]
 [ GrB_reduce (A full) 0.000195 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0626 sec ]
 [ GxB_select (wait: 0 zombies, 5277051 pending) (hyper to sparse) 0.00543 sec ]
 [ GrB_Vector_nvals 3.86e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2432 mwork 0 (nthreads 1 fine hash: 1) 0.0648 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00269 sec ]
 [ GrB_Vector_nvals 4.77e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00202 sec ]
 [ GxB_select 3.39e-05 sec ]
 [ GrB_Vector_nvals 1.51e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.5e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000129 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000153 sec ]
 [ GrB_Vector_nvals 2.31e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 649 mwork 0 (nthreads 1 fine hash: 1) 0.000298 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00184 sec ]
 [ GrB_Vector_nvals 2.78e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00241 sec ]
 [ GxB_select 1.38e-05 sec ]
 [ GrB_Vector_nvals 2.01e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0103 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.2853e+06 mwork 0 (nthreads 40 fine: 51) 0.0721 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0166 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00429 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000241 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00544 sec ]
 [ GrB_reduce (A full) 0.00188 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0622 sec ]
 [ GxB_select (wait: 0 zombies, 2691482 pending) (hyper to sparse) 0.00182 sec ]
 [ GrB_Vector_nvals 8.07e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1531 mwork 0 (nthreads 1 fine hash: 1) 0.0584 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00147 sec ]
 [ GrB_Vector_nvals 7.21e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00646 sec ]
 [ GxB_select 3.08e-05 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000206 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000304 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 0.000282 sec ]
 [ GrB_Vector_nvals 2.51e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 432 mwork 0 (nthreads 1 fine hash: 1) 0.000586 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00197 sec ]
 [ GrB_Vector_nvals 2.09e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0026 sec ]
 [ GxB_select 1.43e-05 sec ]
 [ GrB_Vector_nvals 2.14e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00946 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.47992e+06 mwork 0 (nthreads 37 fine: 38) 0.0709 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0114 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.0025 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000231 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00364 sec ]
 [ GrB_reduce (A full) 0.00395 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0572 sec ]
 [ GxB_select (wait: 0 zombies, 443871 pending) (hyper to sparse) 0.000507 sec ]
 [ GrB_Vector_nvals 3.74e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 501 mwork 0 (nthreads 1 fine hash: 1) 0.0105 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000346 sec ]
 [ GrB_Vector_nvals 2.72e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00879 sec ]
 [ GxB_select 1.72e-05 sec ]
 [ GrB_Vector_nvals 2.01e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.97e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.84e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 5.44e-05 sec ]
 [ GrB_Vector_nvals 1.79e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 91 mwork 0 (nthreads 1 fine hash: 1) 8.22e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00238 sec ]
 [ GrB_Vector_nvals 1.96e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.007 sec ]
 [ GxB_select 1.18e-05 sec ]
 [ GrB_Vector_nvals 1.86e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00256 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 398528 mwork 0 (nthreads 6 fine hash: 7) 0.0325 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0341 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.00144 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000276 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00109 sec ]
 [ GrB_reduce (A full) 0.00598 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0587 sec ]
 [ GxB_select (wait: 0 zombies, 52865 pending) (hyper to sparse) 0.000518 sec ]
 [ GrB_Vector_nvals 3.86e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 25 mwork 0 (nthreads 1 fine hash: 1) 0.00141 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00017 sec ]
 [ GrB_Vector_nvals 2.46e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000978 sec ]
 [ GxB_select 1.22e-05 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.6e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.76e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.34e-05 sec ]
 [ GrB_Vector_nvals 1.94e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 4.65e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000215 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000669 sec ]
 [ GxB_select 9.87e-06 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000895 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 24520 mwork 0 (nthreads 1 fine hash: 1) 0.00784 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0033 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000383 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.91e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000313 sec ]
 [ GrB_reduce (A full) 0.000191 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0597 sec ]
 [ GxB_select (wait: 0 zombies, 28490 pending) (hyper to sparse) 0.000311 sec ]
 [ GrB_Vector_nvals 3.76e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5 mwork 0 (nthreads 1 fine hash: 1) 0.000919 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000129 sec ]
 [ GrB_Vector_nvals 1.99e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00057 sec ]
 [ GxB_select 1.12e-05 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.5e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.33e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.65e-05 sec ]
 [ GrB_Vector_nvals 1.55e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 5e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000123 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000474 sec ]
 [ GxB_select 9.55e-06 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00056 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 12298 mwork 0 (nthreads 1 fine hash: 1) 0.00419 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00218 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000226 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000197 sec ]
 [ GrB_reduce (A full) 5.59e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.057 sec ]
 [ GxB_select (wait: 0 zombies, 16271 pending) (hyper to sparse) 0.000198 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000603 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000105 sec ]
 [ GrB_Vector_nvals 1.75e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000644 sec ]
 [ GxB_select 1.16e-05 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.38e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.75e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.65e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.66e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 9.22e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000512 sec ]
 [ GxB_select 1.01e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000385 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7229 mwork 0 (nthreads 1 fine hash: 1) 0.00255 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00181 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000145 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.36e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000128 sec ]
 [ GrB_reduce (A full) 0.000239 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0574 sec ]
 [ GxB_select (wait: 0 zombies, 9086 pending) (hyper to sparse) 0.00013 sec ]
 [ GrB_Vector_nvals 2.63e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000416 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 9.15e-05 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000656 sec ]
 [ GxB_select 1.18e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.45e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.38e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.58e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.83e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.38e-05 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000585 sec ]
 [ GxB_select 9.71e-06 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000264 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4506 mwork 0 (nthreads 1 fine hash: 1) 0.0017 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00155 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 0.000107 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.5e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.76e-05 sec ]
 [ GrB_reduce (A full) 9.53e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0549 sec ]
 [ GxB_select (wait: 0 zombies, 4600 pending) (hyper to sparse) 9.19e-05 sec ]
 [ GrB_Vector_nvals 3.43e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000275 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.24e-05 sec ]
 [ GrB_Vector_nvals 1.64e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000488 sec ]
 [ GxB_select 1.14e-05 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.51e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000123 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.14e-05 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000176 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2656 mwork 0 (nthreads 1 fine hash: 1) 0.00107 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00159 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 8.11e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.73e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.83e-05 sec ]
 [ GrB_reduce (A full) 0.000103 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0512 sec ]
 [ GxB_select (wait: 0 zombies, 1955 pending) (hyper to sparse) 6.11e-05 sec ]
 [ GrB_Vector_nvals 3.69e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000172 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.81e-05 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000491 sec ]
 [ GxB_select 1.12e-05 sec ]
 [ GrB_Vector_nvals 1.88e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.4e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.47e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M,struct> = A 4.18e-05 sec ]
 [ GrB_Vector_nvals 1.92e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 4.32e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.23e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00051 sec ]
 [ GxB_select 9.58e-06 sec ]
 [ GrB_Vector_nvals 1.88e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000104 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1403 mwork 0 (nthreads 1 fine hash: 1) 0.000593 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00117 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 6.21e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.41e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.06e-05 sec ]
 [ GrB_reduce (A full) 9.59e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0396 sec ]
 [ GxB_select (wait: 0 zombies, 564 pending) (hyper to sparse) 4.92e-05 sec ]
 [ GrB_Vector_nvals 3.54e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 9.32e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.62e-05 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000644 sec ]
 [ GxB_select 1.08e-05 sec ]
 [ GrB_Vector_nvals 1.9e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 4.98e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 497 mwork 0 (nthreads 1 fine hash: 1) 0.000246 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00101 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 5.29e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.16e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.9e-05 sec ]
 [ GrB_reduce (A full) 0.000122 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0326 sec ]
 [ GxB_select (wait: 0 zombies, 68 pending) (hyper to sparse) 4.51e-05 sec ]
 [ GrB_Vector_nvals 5.31e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.82e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.28e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.47e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 39 mwork 0 (nthreads 1 fine hash: 1) 6.12e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000759 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.28e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.02e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.89e-06 sec ]
 [ GrB_reduce (A full) 0.000458 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0326 sec ]
 [ GxB_select (wait: 0 zombies, 29 pending) (hyper to sparse) 4.1e-05 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.51e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.13e-05 sec ]
 [ GrB_Vector_nvals 1.75e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.32e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.64e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00191 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.11e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.48e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.41e-06 sec ]
 [ GrB_reduce (A full) 0.00132 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0323 sec ]
 [ GxB_select (wait: 0 zombies, 16 pending) (hyper to sparse) 4.23e-05 sec ]
 [ GrB_Vector_nvals 2.76e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.41e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.29e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.28e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.72e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00338 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.14e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.02e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.4e-06 sec ]
 [ GrB_reduce (A full) 0.0015 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0304 sec ]
 [ GxB_select (wait: 0 zombies, 3 pending) (hyper to sparse) 3.98e-05 sec ]
 [ GrB_Vector_nvals 4.14e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.33e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.14e-05 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.09e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.11e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000609 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.03e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.65e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.94e-06 sec ]
 [ GrB_reduce (A full) 0.00288 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0305 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.02e-05 sec ]
 [ GrB_Vector_nvals 3.41e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.25e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.15e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000478 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 3.69e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.83e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.91e-06 sec ]
 [ GrB_reduce (A full) 0.00295 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0317 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.88e-05 sec ]
 [ GrB_Vector_nvals 3.73e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.2e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.06e-05 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.17e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.94e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000601 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4:whole C<M> = A 4.06e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 9.94e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.13e-06 sec ]
 [ GrB_reduce (A full) 0.00823 sec ]
sssp12c: threads: 40 trial:  0 source   2338012 time:    23.0075 sec

40: SSSP12c time:      23.007480 sec  rate:   183.56 (delta 32)
40: SSSP14  time:      23.728310 sec  rate:   177.98 (delta 32)
40: SSSP15  time:      22.606138 sec  rate:   186.82 (delta 32)
