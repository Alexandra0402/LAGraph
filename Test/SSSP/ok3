threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 7.8e-06 sec ]
 [ GxB_set 0.0223 sec ]
 [ GrB_Matrix_nvals 1.26e-06 sec ]
delta: 27
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 4.77e-05 sec ]
read time: 37.4588 sec
 [ GrB_apply (shallow-op) 3.13 sec ]
 [ GrB_Matrix_nvals 1.16e-06 sec ]
 [ GrB_Matrix_nvals 2.5e-07 sec ]
 [ GrB_apply (A full) (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_isone_double)) 2.77e-05 sec ]
 [ GrB_reduce (A full) 1.85e-05 sec ]
 [ GrB_Matrix_extractTuples (A full) 2.33e-05 sec ]
A is symmetric
transpose time: 7.91624e-07
input graph: nodes: 134217726 edges: 4223264644 max nthreads 40
# of source nodes: 64

 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0201 sec ]
 [ GxB_select 1.41 sec ]
 [ GxB_select 2.68 sec ]
 [ GrB_Matrix_nvals 4.99e-07 sec ]
 [ GrB_Matrix_nvals 1.23e-07 sec ]
 [ GrB_Matrix_nvals 6.15e-08 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 2.66e-05 sec ]
 [ GxB_select 3.2e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 298 mwork 0 (nthreads 1 fine hash: 1) 0.000107 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 1 pending) (hyper to sparse) add:(S<.>=S+S) (generic add: pair) 0.000111 sec ]
 [ GrB_Vector_nvals 1.7e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B full) add:(S<S>=S+F) 0.000848 sec ]
 [ GxB_select 2.21e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.14e-05 sec ]
 [ GrB_apply (C full) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign (full to bitmap) Method:bit4 C<M,struct> = A 0.0149 sec ]
 [ GrB_Vector_nvals 4.92e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 439476 mwork 0 (nthreads 6 fine hash: 7) 0.00681 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.39e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0368 sec ]
 [ GxB_select 0.000445 sec ]
 [ GrB_Vector_nvals 2.37e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00321 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0233 sec ]
 [ GrB_Vector_nvals 4.92e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.11104e+08 mwork 0 (nthreads 40 fine: 160) 0.336 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000576 sec ]
 [ GrB_Vector_nvals 4.45e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0288 sec ]
 [ GxB_select 0.00716 sec ]
 [ GrB_Vector_nvals 3.89e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0222 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0412 sec ]
 [ GrB_Vector_nvals 5.59e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.98273e+08 mwork 0 (nthreads 40 fine: 160) (sparse to bitmap) 1.18 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00892 sec ]
 [ GrB_Vector_nvals 4.15e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0466 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0468 sec ]
 [ GrB_Vector_nvals 2.29e-07 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.143 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.06 sec ]
 [ GrB_Vector_nvals 4.14e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.931 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.048 sec ]
 [ GrB_Vector_nvals 5.05e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0509 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0501 sec ]
 [ GrB_Vector_nvals 4.06e-07 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.153 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0664 sec ]
 [ GrB_Vector_nvals 6.3e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.442 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0585 sec ]
 [ GrB_Vector_nvals 4.51e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0529 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0518 sec ]
 [ GrB_Vector_nvals 2.25e-07 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.144 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.053 sec ]
 [ GrB_Vector_nvals 6.76e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.124 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0511 sec ]
 [ GrB_Vector_nvals 5.61e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0496 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0419 sec ]
 [ GrB_Vector_nvals 4.47e-07 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.127 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0349 sec ]
 [ GrB_Vector_nvals 5.98e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0363 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.048 sec ]
 [ GrB_Vector_nvals 4.81e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0401 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0499 sec ]
 [ GrB_Vector_nvals 1.18e-06 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0957 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0253 sec ]
 [ GrB_Vector_nvals 7.51e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 75760 mwork 0 (nthreads 1 fine hash: 1) 0.0111 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0373 sec ]
 [ GrB_Vector_nvals 4.71e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00665 sec ]
 [ GxB_select 0.000221 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000697 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0121 sec ]
 [ GrB_Vector_nvals 5.44e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2347 mwork 0 (nthreads 1 fine hash: 1) 0.000542 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0354 sec ]
 [ GrB_Vector_nvals 3.09e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00114 sec ]
 [ GxB_select 2.39e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.76e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 3.74e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 45 mwork 0 (nthreads 1 fine hash: 1) 7.87e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0336 sec ]
 [ GrB_Vector_nvals 3.63e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000682 sec ]
 [ GxB_select 1.46e-05 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0327 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 8.92 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0613 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.117 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0955 sec ]
 [ GrB_Vector_nvals 4.47e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.1 sec ]
 [ GrB_Vector_nvals 2.31e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0977 sec ]
 [ GrB_Vector_nvals 2.25e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0748 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0343 sec ]
 [ GrB_Vector_nvals 4.99e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0378 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0485 sec ]
 [ GrB_Vector_nvals 9.56e-07 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0983 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0239 sec ]
 [ GrB_Vector_nvals 5.53e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 78303 mwork 0 (nthreads 1 fine hash: 1) 0.0211 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0315 sec ]
 [ GrB_Vector_nvals 3.91e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00728 sec ]
 [ GxB_select 0.000213 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000746 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0142 sec ]
 [ GrB_Vector_nvals 5.33e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 328 mwork 0 (nthreads 1 fine hash: 1) 0.000195 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0297 sec ]
 [ GrB_Vector_nvals 3.09e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000818 sec ]
 [ GxB_select 1.57e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.42e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 4.64e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.71e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0295 sec ]
 [ GrB_Vector_nvals 6.15e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000503 sec ]
 [ GxB_select 1.41e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0297 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.268 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0454 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0343 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0952 sec ]
 [ GrB_Vector_nvals 4.21e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0988 sec ]
 [ GrB_Vector_nvals 3.33e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0962 sec ]
 [ GrB_Vector_nvals 3.86e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0495 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0345 sec ]
 [ GrB_Vector_nvals 5.48e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00178 sec ]
 [ GxB_select 0.000458 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00141 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0129 sec ]
 [ GrB_Vector_nvals 5.49e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14403 mwork 0 (nthreads 1 fine hash: 1) 0.00453 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0303 sec ]
 [ GrB_Vector_nvals 5.7e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00318 sec ]
 [ GxB_select 5.13e-05 sec ]
 [ GrB_Vector_nvals 1.68e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000172 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 6.24e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17 mwork 0 (nthreads 1 fine hash: 1) 7.81e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.029 sec ]
 [ GrB_Vector_nvals 5.59e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000646 sec ]
 [ GxB_select 1.45e-05 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0281 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.138 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0438 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0267 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0934 sec ]
 [ GrB_Vector_nvals 3.37e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0994 sec ]
 [ GrB_Vector_nvals 7.64e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0951 sec ]
 [ GrB_Vector_nvals 2.46e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0477 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0327 sec ]
 [ GrB_Vector_nvals 6.56e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00133 sec ]
 [ GxB_select 0.000171 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000525 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0127 sec ]
 [ GrB_Vector_nvals 5.31e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5230 mwork 0 (nthreads 1 fine hash: 1) 0.0018 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0299 sec ]
 [ GrB_Vector_nvals 4.58e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00269 sec ]
 [ GxB_select 2.91e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000108 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 5.61e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 6.75e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0299 sec ]
 [ GrB_Vector_nvals 4.27e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000536 sec ]
 [ GxB_select 1.5e-05 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0258 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0974 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.044 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0236 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0953 sec ]
 [ GrB_Vector_nvals 2.64e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0998 sec ]
 [ GrB_Vector_nvals 3.17e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0959 sec ]
 [ GrB_Vector_nvals 5.2e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0455 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0324 sec ]
 [ GrB_Vector_nvals 1.05e-06 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00116 sec ]
 [ GxB_select 8.44e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000274 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0118 sec ]
 [ GrB_Vector_nvals 5.4e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2428 mwork 0 (nthreads 1 fine hash: 1) 0.000909 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0296 sec ]
 [ GrB_Vector_nvals 3.05e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00116 sec ]
 [ GxB_select 2.04e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.97e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 1.17e-06 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.6e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0298 sec ]
 [ GrB_Vector_nvals 8.34e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000462 sec ]
 [ GxB_select 1.5e-05 sec ]
 [ GrB_Vector_nvals 1.56e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0242 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0757 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0404 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0223 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0957 sec ]
 [ GrB_Vector_nvals 5.33e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.102 sec ]
 [ GrB_Vector_nvals 2.27e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0964 sec ]
 [ GrB_Vector_nvals 3.07e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0444 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0312 sec ]
 [ GrB_Vector_nvals 7.36e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00107 sec ]
 [ GxB_select 5.35e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000177 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0118 sec ]
 [ GrB_Vector_nvals 3.74e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1235 mwork 0 (nthreads 1 fine hash: 1) 0.000515 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0284 sec ]
 [ GrB_Vector_nvals 4.58e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00104 sec ]
 [ GxB_select 1.77e-05 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0227 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.064 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0381 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0223 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0958 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0988 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0961 sec ]
 [ GrB_Vector_nvals 2.37e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0426 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0312 sec ]
 [ GrB_Vector_nvals 4.82e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00104 sec ]
 [ GxB_select 3.81e-05 sec ]
 [ GrB_Vector_nvals 1.55e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000138 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0117 sec ]
 [ GrB_Vector_nvals 5.01e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 794 mwork 0 (nthreads 1 fine hash: 1) 0.000363 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0291 sec ]
 [ GrB_Vector_nvals 3.87e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000972 sec ]
 [ GxB_select 1.7e-05 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.24e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0117 sec ]
 [ GrB_Vector_nvals 4.81e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0218 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0572 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.038 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0242 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0949 sec ]
 [ GrB_Vector_nvals 2.64e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0987 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0959 sec ]
 [ GrB_Vector_nvals 2.24e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0414 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0308 sec ]
 [ GrB_Vector_nvals 5.42e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000983 sec ]
 [ GxB_select 3.12e-05 sec ]
 [ GrB_Vector_nvals 1.7e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000113 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 5.23e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 502 mwork 0 (nthreads 1 fine hash: 1) 0.000261 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0288 sec ]
 [ GrB_Vector_nvals 3.61e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000889 sec ]
 [ GxB_select 1.63e-05 sec ]
 [ GrB_Vector_nvals 1.56e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.02 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0515 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0352 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0259 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0929 sec ]
 [ GrB_Vector_nvals 3.8e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.103 sec ]
 [ GrB_Vector_nvals 3.56e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0943 sec ]
 [ GrB_Vector_nvals 2.4e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0405 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0301 sec ]
 [ GrB_Vector_nvals 5.79e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000922 sec ]
 [ GxB_select 2.7e-05 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.82e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 1.05e-06 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 346 mwork 0 (nthreads 1 fine hash: 1) 0.000202 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0279 sec ]
 [ GrB_Vector_nvals 3.02e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000876 sec ]
 [ GxB_select 1.63e-05 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0188 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0484 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0336 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0278 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0938 sec ]
 [ GrB_Vector_nvals 8.79e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.098 sec ]
 [ GrB_Vector_nvals 2.74e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0933 sec ]
 [ GrB_Vector_nvals 2.53e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0394 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0272 sec ]
 [ GrB_Vector_nvals 7.02e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000923 sec ]
 [ GxB_select 2.29e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.81e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0121 sec ]
 [ GrB_Vector_nvals 4.95e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 235 mwork 0 (nthreads 1 fine hash: 1) 0.000165 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.027 sec ]
 [ GrB_Vector_nvals 6.02e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000817 sec ]
 [ GxB_select 1.55e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0149 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0414 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0317 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0326 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0927 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.106 sec ]
 [ GrB_Vector_nvals 5.25e-07 sec ]
 [ GxB_select 0.000581 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 126 mwork 0 (nthreads 1 fine hash: 1) 0.00196 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000197 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000659 sec ]
 [ GxB_select 1.18e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.09e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 3.76e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7 mwork 0 (nthreads 1 fine hash: 1) 6.76e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000364 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00175 sec ]
 [ GxB_select 1.43e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000864 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 42155 mwork 0 (nthreads 1 fine hash: 1) 0.0125 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00424 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.015 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0939 sec ]
 [ GrB_Vector_nvals 2.81e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.106 sec ]
 [ GrB_Vector_nvals 4.75e-07 sec ]
 [ GxB_select 0.0003 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10 mwork 0 (nthreads 1 fine hash: 1) 0.00111 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00015 sec ]
 [ GrB_Vector_nvals 1.68e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0005 sec ]
 [ GxB_select 1.12e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.18e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 5.48e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.74e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000169 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000457 sec ]
 [ GxB_select 1.37e-05 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000437 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17357 mwork 0 (nthreads 1 fine hash: 1) 0.0057 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00219 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0117 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0957 sec ]
 [ GrB_Vector_nvals 2.68e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.106 sec ]
 [ GrB_Vector_nvals 4.21e-07 sec ]
 [ GxB_select 0.000186 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4 mwork 0 (nthreads 1 fine hash: 1) 0.000731 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000112 sec ]
 [ GrB_Vector_nvals 1.79e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000497 sec ]
 [ GxB_select 1.14e-05 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.58e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 4.49e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.39e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000135 sec ]
 [ GrB_Vector_nvals 1.66e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000452 sec ]
 [ GxB_select 1.36e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000315 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10060 mwork 0 (nthreads 1 fine hash: 1) 0.00346 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00167 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0123 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0961 sec ]
 [ GrB_Vector_nvals 3.26e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.107 sec ]
 [ GrB_Vector_nvals 7.13e-07 sec ]
 [ GxB_select 0.000124 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000535 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 9.84e-05 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000457 sec ]
 [ GxB_select 1.05e-05 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.07e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 3e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.26e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00011 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000438 sec ]
 [ GxB_select 1.28e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000226 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6455 mwork 0 (nthreads 1 fine hash: 1) 0.00258 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00141 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0115 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0959 sec ]
 [ GrB_Vector_nvals 3.74e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.113 sec ]
 [ GrB_Vector_nvals 4.43e-07 sec ]
 [ GxB_select 9.41e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000393 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 9.61e-05 sec ]
 [ GrB_Vector_nvals 1.77e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000489 sec ]
 [ GxB_select 1.15e-05 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GxB_select (C<M>=Z via assign) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000126 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0122 sec ]
 [ GrB_Vector_nvals 3.33e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000184 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4347 mwork 0 (nthreads 1 fine hash: 1) 0.00166 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00121 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0965 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.107 sec ]
 [ GrB_Vector_nvals 4.06e-07 sec ]
 [ GxB_select 6.23e-05 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000282 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.22e-05 sec ]
 [ GrB_Vector_nvals 1.55e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000439 sec ]
 [ GxB_select 1.15e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000125 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2778 mwork 0 (nthreads 1 fine hash: 1) 0.0011 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00117 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0115 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0965 sec ]
 [ GrB_Vector_nvals 2.38e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.11 sec ]
 [ GrB_Vector_nvals 7.06e-07 sec ]
 [ GxB_select 4.55e-05 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000194 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000465 sec ]
 [ GxB_select 1.13e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.69e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 3.8e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.28e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.47e-05 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000437 sec ]
 [ GxB_select 1.32e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 9.23e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1760 mwork 0 (nthreads 1 fine hash: 1) 0.000734 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00104 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0121 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0959 sec ]
 [ GrB_Vector_nvals 3.19e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.111 sec ]
 [ GrB_Vector_nvals 3.99e-07 sec ]
 [ GxB_select 3.07e-05 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000123 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.34e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000429 sec ]
 [ GxB_select 1.08e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 6.4e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 951 mwork 0 (nthreads 1 fine hash: 1) 0.000427 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000917 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0121 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0958 sec ]
 [ GrB_Vector_nvals 2.37e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.108 sec ]
 [ GrB_Vector_nvals 3.91e-07 sec ]
 [ GxB_select 2.43e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 8.03e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.1e-05 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 5.14e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 339 mwork 0 (nthreads 1 fine hash: 1) 0.000184 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000826 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0957 sec ]
 [ GrB_Vector_nvals 4.38e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.11 sec ]
 [ GrB_Vector_nvals 4.19e-07 sec ]
 [ GxB_select 2.3e-05 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.92e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.87e-05 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.53e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 28 mwork 0 (nthreads 1 fine hash: 1) 5.47e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000623 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0961 sec ]
 [ GrB_Vector_nvals 2.46e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.109 sec ]
 [ GrB_Vector_nvals 3.87e-07 sec ]
 [ GxB_select 2.32e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.63e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.96e-05 sec ]
 [ GrB_Vector_nvals 1.51e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.34e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.72e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000582 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0957 sec ]
 [ GrB_Vector_nvals 2.42e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.108 sec ]
 [ GrB_Vector_nvals 3.95e-07 sec ]
 [ GxB_select 2.31e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.67e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.9e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.37e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 16 mwork 0 (nthreads 1 fine hash: 1) 4.86e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000598 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0961 sec ]
 [ GrB_Vector_nvals 2.53e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.108 sec ]
 [ GrB_Vector_nvals 3.3e-07 sec ]
 [ GxB_select 2.16e-05 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 6.86e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.92e-05 sec ]
 [ GrB_Vector_nvals 1.55e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.16e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 3.98e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000469 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0967 sec ]
 [ GrB_Vector_nvals 3.07e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.109 sec ]
 [ GrB_Vector_nvals 4.15e-07 sec ]
 [ GxB_select 2.61e-05 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.92e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.94e-05 sec ]
 [ GrB_Vector_nvals 1.49e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.38e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.98e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000546 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0949 sec ]
 [ GrB_Vector_nvals 3.24e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.108 sec ]
 [ GrB_Vector_nvals 4.51e-07 sec ]
 [ GxB_select 2.34e-05 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.37e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.55e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00037 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0951 sec ]
 [ GrB_Vector_nvals 2.37e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.107 sec ]
 [ GrB_Vector_nvals 3.99e-07 sec ]
 [ GxB_select 2.42e-05 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 6.53e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.8e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.33e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.87e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000432 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.095 sec ]
 [ GrB_Vector_nvals 2.35e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.107 sec ]
 [ GrB_Vector_nvals 5.09e-07 sec ]
sssp12 : threads: 40 trial:  0 source   2338012 time:    27.8353 sec
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0177 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0024 sec ]
 [ GxB_select 1.41 sec ]
 [ GxB_select 2.68 sec ]
 [ GrB_Matrix_nvals 5.01e-07 sec ]
 [ GrB_Matrix_nvals 3e-07 sec ]
 [ GrB_Matrix_nvals 5.96e-08 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 2.54e-05 sec ]
 [ GrB_assign (C empty) Method 06n: C(:,:)<M> = Z ; no S 0.0158 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.87e-05 sec ]
 [ GrB_Vector_nvals 3.22e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 298 mwork 0 (nthreads 1 fine hash: 1) 6.93e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 1 pending) (hyper to sparse) add:(S<.>=S+S) (generic add: pair) 9.11e-05 sec ]
 [ GrB_Vector_nvals 1.7e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B full) add:(S<S>=S+F) 0.00079 sec ]
 [ GxB_select 1.21e-05 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.67e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.56e-05 sec ]
 [ GrB_apply (C full) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign (full to bitmap) Method:bit4 C<M,struct> = A 0.0135 sec ]
 [ GrB_Vector_nvals 4.68e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 439476 mwork 0 (nthreads 6 fine hash: 7) 0.00674 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.91e-05 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0358 sec ]
 [ GxB_select 0.000525 sec ]
 [ GrB_Vector_nvals 2.46e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000998 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.004 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0234 sec ]
 [ GrB_Vector_nvals 5.27e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.11104e+08 mwork 0 (nthreads 40 fine: 160) 0.33 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000575 sec ]
 [ GrB_Vector_nvals 2.72e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0286 sec ]
 [ GxB_select 0.00716 sec ]
 [ GrB_Vector_nvals 3.46e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00627 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0223 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0412 sec ]
 [ GrB_Vector_nvals 5.98e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.98273e+08 mwork 0 (nthreads 40 fine: 160) (sparse to bitmap) 1.16 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0104 sec ]
 [ GrB_Vector_nvals 4.53e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0466 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0459 sec ]
 [ GrB_Vector_nvals 2.2e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0226 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.146 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.06 sec ]
 [ GrB_Vector_nvals 3.73e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.929 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0471 sec ]
 [ GrB_Vector_nvals 5.48e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0453 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0469 sec ]
 [ GrB_Vector_nvals 2.18e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0187 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.141 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.057 sec ]
 [ GrB_Vector_nvals 4.6e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.428 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0507 sec ]
 [ GrB_Vector_nvals 1.02e-06 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0444 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0435 sec ]
 [ GrB_Vector_nvals 2.24e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00885 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.134 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0454 sec ]
 [ GrB_Vector_nvals 4.73e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.12 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0438 sec ]
 [ GrB_Vector_nvals 3.15e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0436 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0402 sec ]
 [ GrB_Vector_nvals 2.37e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00554 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.119 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0266 sec ]
 [ GrB_Vector_nvals 4.62e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0362 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.039 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0332 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0466 sec ]
 [ GrB_Vector_nvals 6.09e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00057 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0926 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.028 sec ]
 [ GrB_Vector_nvals 4.19e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 75760 mwork 0 (nthreads 1 fine hash: 1) 0.011 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.039 sec ]
 [ GrB_Vector_nvals 4.23e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00644 sec ]
 [ GxB_select 0.000217 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.78e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000692 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0125 sec ]
 [ GrB_Vector_nvals 4.6e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2347 mwork 0 (nthreads 1 fine hash: 1) 0.000516 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0342 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00112 sec ]
 [ GxB_select 2.18e-05 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.78e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.62e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 3.71e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 45 mwork 0 (nthreads 1 fine hash: 1) 7.44e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0336 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000672 sec ]
 [ GxB_select 1.51e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.033 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 8.89 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0604 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0427 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.021 sec ]
 [ GrB_reduce (A full) 4.64e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0871 sec ]
 [ GxB_select (wait: 0 zombies, 36136093 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.129 sec ]
 [ GrB_Vector_nvals 3.45e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0742 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0349 sec ]
 [ GrB_Vector_nvals 3.91e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0376 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0474 sec ]
 [ GrB_Vector_nvals 6.07e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00109 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0931 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0223 sec ]
 [ GrB_Vector_nvals 3.93e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 78303 mwork 0 (nthreads 1 fine hash: 1) 0.0214 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0318 sec ]
 [ GrB_Vector_nvals 3.56e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00725 sec ]
 [ GxB_select 0.000211 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.88e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000707 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0146 sec ]
 [ GrB_Vector_nvals 5.48e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 328 mwork 0 (nthreads 1 fine hash: 1) 0.000189 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0294 sec ]
 [ GrB_Vector_nvals 3.54e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000847 sec ]
 [ GxB_select 1.56e-05 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.48e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.05e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 6.35e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.71e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0282 sec ]
 [ GrB_Vector_nvals 3.84e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000493 sec ]
 [ GxB_select 1.35e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0302 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.269 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0462 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0365 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00936 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0115 sec ]
 [ GrB_reduce (A full) 3.38e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0776 sec ]
 [ GxB_select (wait: 0 zombies, 25798435 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.126 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0492 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0328 sec ]
 [ GrB_Vector_nvals 4.86e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00174 sec ]
 [ GxB_select 0.000473 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000313 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0014 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0132 sec ]
 [ GrB_Vector_nvals 3.76e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14403 mwork 0 (nthreads 1 fine hash: 1) 0.00437 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0285 sec ]
 [ GrB_Vector_nvals 2.85e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00222 sec ]
 [ GxB_select 5.06e-05 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.59e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00017 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0117 sec ]
 [ GrB_Vector_nvals 4.68e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17 mwork 0 (nthreads 1 fine hash: 1) 7.16e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0281 sec ]
 [ GrB_Vector_nvals 2.22e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00183 sec ]
 [ GxB_select 1.43e-05 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0275 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.139 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0436 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0267 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00812 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00893 sec ]
 [ GrB_reduce (A full) 3.44e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0716 sec ]
 [ GxB_select (wait: 0 zombies, 19422731 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.122 sec ]
 [ GrB_Vector_nvals 3.19e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0473 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0325 sec ]
 [ GrB_Vector_nvals 3.73e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00132 sec ]
 [ GxB_select 0.000169 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000164 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000522 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0122 sec ]
 [ GrB_Vector_nvals 3.87e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5230 mwork 0 (nthreads 1 fine hash: 1) 0.00173 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.029 sec ]
 [ GrB_Vector_nvals 2.85e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00143 sec ]
 [ GxB_select 2.74e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.44e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000103 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 1.11e-06 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 6.45e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0287 sec ]
 [ GrB_Vector_nvals 4.21e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000569 sec ]
 [ GxB_select 2.35e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0253 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0963 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0421 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0239 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00662 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00796 sec ]
 [ GrB_reduce (A full) 3.31e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0675 sec ]
 [ GxB_select (wait: 0 zombies, 14786940 pending) (hyper to sparse) 0.00732 sec ]
 [ GrB_Vector_nvals 3.17e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 9493 mwork 0 (nthreads 1 fine hash: 1) 0.0855 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00384 sec ]
 [ GrB_Vector_nvals 5.16e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00188 sec ]
 [ GxB_select 8.49e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000105 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000273 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0136 sec ]
 [ GrB_Vector_nvals 3.78e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2428 mwork 0 (nthreads 1 fine hash: 1) 0.000866 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00323 sec ]
 [ GrB_Vector_nvals 3.54e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00114 sec ]
 [ GxB_select 3.03e-05 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.32e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.48e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 5.22e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.35e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00234 sec ]
 [ GrB_Vector_nvals 3.82e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000447 sec ]
 [ GxB_select 1.36e-05 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00811 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7.85838e+06 mwork 0 (nthreads 40 fine: 120) 0.0977 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0152 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0143 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000348 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00444 sec ]
 [ GrB_reduce (A full) 4.59e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0636 sec ]
 [ GxB_select (wait: 0 zombies, 11131463 pending) (hyper to sparse) 0.00486 sec ]
 [ GrB_Vector_nvals 2.27e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4815 mwork 0 (nthreads 1 fine hash: 1) 0.0717 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00184 sec ]
 [ GrB_Vector_nvals 3.65e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00189 sec ]
 [ GxB_select 5.14e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.15e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000174 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0149 sec ]
 [ GrB_Vector_nvals 3.89e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1235 mwork 0 (nthreads 1 fine hash: 1) 0.000487 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00232 sec ]
 [ GrB_Vector_nvals 4.14e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00221 sec ]
 [ GxB_select 1.73e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00843 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5.31182e+06 mwork 0 (nthreads 40 fine: 82) 0.0821 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0131 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0165 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000304 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00584 sec ]
 [ GrB_reduce (A full) 3.24e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0612 sec ]
 [ GxB_select (wait: 0 zombies, 8113579 pending) (hyper to sparse) 0.00359 sec ]
 [ GrB_Vector_nvals 5.42e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2902 mwork 0 (nthreads 1 fine hash: 1) 0.0629 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00151 sec ]
 [ GrB_Vector_nvals 3.86e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00129 sec ]
 [ GxB_select 3.85e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.79e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000137 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0148 sec ]
 [ GrB_Vector_nvals 4.38e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 794 mwork 0 (nthreads 1 fine hash: 1) 0.000357 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0019 sec ]
 [ GrB_Vector_nvals 3.24e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000982 sec ]
 [ GxB_select 1.61e-05 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.24e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.04e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 4.92e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00839 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.84856e+06 mwork 0 (nthreads 40 fine: 59) 0.0746 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0118 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0155 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000335 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00658 sec ]
 [ GrB_reduce (A full) 0.000593 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0597 sec ]
 [ GxB_select (wait: 0 zombies, 5540427 pending) (hyper to sparse) 0.00239 sec ]
 [ GrB_Vector_nvals 2.29e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1830 mwork 0 (nthreads 1 fine hash: 1) 0.0565 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0013 sec ]
 [ GrB_Vector_nvals 3.78e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00194 sec ]
 [ GxB_select 4.14e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.37e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000109 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0147 sec ]
 [ GrB_Vector_nvals 5.44e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 502 mwork 0 (nthreads 1 fine hash: 1) 0.000248 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00139 sec ]
 [ GrB_Vector_nvals 3.32e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000975 sec ]
 [ GxB_select 1.41e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00727 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.91661e+06 mwork 0 (nthreads 40 fine: 45) 0.0618 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0102 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0166 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000271 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00419 sec ]
 [ GrB_reduce (A full) 0.00162 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0582 sec ]
 [ GxB_select (wait: 0 zombies, 3301524 pending) (hyper to sparse) 0.00138 sec ]
 [ GrB_Vector_nvals 2.44e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1201 mwork 0 (nthreads 1 fine hash: 1) 0.051 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00122 sec ]
 [ GrB_Vector_nvals 3.48e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00192 sec ]
 [ GxB_select 2.49e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.76e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.52e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0147 sec ]
 [ GrB_Vector_nvals 7.53e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 346 mwork 0 (nthreads 1 fine hash: 1) 0.000192 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00131 sec ]
 [ GrB_Vector_nvals 1.9e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00171 sec ]
 [ GxB_select 1.43e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00538 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.28309e+06 mwork 0 (nthreads 34 fine: 35) 0.0665 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0086 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0158 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000487 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00514 sec ]
 [ GrB_reduce (A full) 0.000304 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0568 sec ]
 [ GxB_select (wait: 0 zombies, 1321116 pending) (hyper to sparse) 0.000843 sec ]
 [ GrB_Vector_nvals 4.92e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 684 mwork 0 (nthreads 1 fine hash: 1) 0.034 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000875 sec ]
 [ GrB_Vector_nvals 2.68e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00196 sec ]
 [ GxB_select 2.1e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.71e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.15e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0156 sec ]
 [ GrB_Vector_nvals 2.94e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 235 mwork 0 (nthreads 1 fine hash: 1) 0.000153 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00107 sec ]
 [ GrB_Vector_nvals 1.4e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00126 sec ]
 [ GxB_select 1.49e-05 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00266 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.29484e+06 mwork 0 (nthreads 19 fine hash: 20) 0.0442 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0867 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0177 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000279 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00334 sec ]
 [ GrB_reduce (A full) 0.00197 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0545 sec ]
 [ GxB_select (wait: 0 zombies, 85727 pending) (hyper to sparse) 0.000808 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 126 mwork 0 (nthreads 1 fine hash: 1) 0.00186 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000186 sec ]
 [ GrB_Vector_nvals 1.7e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000639 sec ]
 [ GxB_select 1.22e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.36e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.49e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 5.35e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7 mwork 0 (nthreads 1 fine hash: 1) 6.35e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00036 sec ]
 [ GrB_Vector_nvals 1.62e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000525 sec ]
 [ GxB_select 1.25e-05 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000767 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 42155 mwork 0 (nthreads 1 fine hash: 1) 0.0123 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00424 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0149 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000155 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000483 sec ]
 [ GrB_reduce (A full) 3.97e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0544 sec ]
 [ GxB_select (wait: 0 zombies, 43840 pending) (hyper to sparse) 0.000413 sec ]
 [ GrB_Vector_nvals 2.51e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10 mwork 0 (nthreads 1 fine hash: 1) 0.00105 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000143 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000482 sec ]
 [ GxB_select 1.15e-05 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.25e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.5e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 5.27e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 5.91e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000165 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000441 sec ]
 [ GxB_select 1.32e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000376 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17357 mwork 0 (nthreads 1 fine hash: 1) 0.00549 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00217 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0125 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.38e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000273 sec ]
 [ GrB_reduce (A full) 6.44e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0537 sec ]
 [ GxB_select (wait: 0 zombies, 26594 pending) (hyper to sparse) 0.000262 sec ]
 [ GrB_Vector_nvals 3.28e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4 mwork 0 (nthreads 1 fine hash: 1) 0.000683 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000114 sec ]
 [ GrB_Vector_nvals 1.84e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000493 sec ]
 [ GxB_select 1.06e-05 sec ]
 [ GrB_Vector_nvals 1.4e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.13e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 5.71e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 8.49e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 5.91e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000129 sec ]
 [ GrB_Vector_nvals 1.56e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000441 sec ]
 [ GxB_select 2.34e-05 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000257 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10060 mwork 0 (nthreads 1 fine hash: 1) 0.00329 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00167 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0117 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.11e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000166 sec ]
 [ GrB_reduce (A full) 6.2e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0537 sec ]
 [ GxB_select (wait: 0 zombies, 16597 pending) (hyper to sparse) 0.000183 sec ]
 [ GrB_Vector_nvals 3.15e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000481 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 9.31e-05 sec ]
 [ GrB_Vector_nvals 1.7e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000459 sec ]
 [ GxB_select 1.02e-05 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.18e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.35e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 3.86e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 5.84e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000121 sec ]
 [ GrB_Vector_nvals 1.81e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000437 sec ]
 [ GxB_select 1.3e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000196 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6455 mwork 0 (nthreads 1 fine hash: 1) 0.00217 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00138 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0128 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.9e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000119 sec ]
 [ GrB_reduce (A full) 7.3e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0537 sec ]
 [ GxB_select (wait: 0 zombies, 10182 pending) (hyper to sparse) 0.000132 sec ]
 [ GrB_Vector_nvals 2.46e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000349 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.53e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000459 sec ]
 [ GxB_select 1.02e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.19e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000109 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 4.19e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000176 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4347 mwork 0 (nthreads 1 fine hash: 1) 0.00283 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0012 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0115 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.03e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.77e-05 sec ]
 [ GrB_reduce (A full) 9.93e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0535 sec ]
 [ GxB_select (wait: 0 zombies, 5857 pending) (hyper to sparse) 9.59e-05 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000258 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.79e-05 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000413 sec ]
 [ GxB_select 1.02e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000101 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2778 mwork 0 (nthreads 1 fine hash: 1) 0.00102 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00117 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.7e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.8e-05 sec ]
 [ GrB_reduce (A full) 0.000104 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0507 sec ]
 [ GxB_select (wait: 0 zombies, 3089 pending) (hyper to sparse) 7.08e-05 sec ]
 [ GrB_Vector_nvals 3.3e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.00018 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.22e-05 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00111 sec ]
 [ GxB_select 1.11e-05 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.18e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.39e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 5.25e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 5.87e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.8e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000415 sec ]
 [ GxB_select 1.3e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 7.98e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1760 mwork 0 (nthreads 1 fine hash: 1) 0.000686 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00103 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.32e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.92e-05 sec ]
 [ GrB_reduce (A full) 0.000102 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0444 sec ]
 [ GxB_select (wait: 0 zombies, 1340 pending) (hyper to sparse) 5.03e-05 sec ]
 [ GrB_Vector_nvals 3.13e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000117 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.17e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000415 sec ]
 [ GxB_select 1.03e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 6.28e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 951 mwork 0 (nthreads 1 fine hash: 1) 0.000403 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000912 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.9e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.37e-05 sec ]
 [ GrB_reduce (A full) 0.00011 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0355 sec ]
 [ GxB_select (wait: 0 zombies, 400 pending) (hyper to sparse) 4.51e-05 sec ]
 [ GrB_Vector_nvals 2.42e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 7.83e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.2e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 3.2e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 339 mwork 0 (nthreads 1 fine hash: 1) 0.000174 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000796 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.8e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.7e-05 sec ]
 [ GrB_reduce (A full) 0.00011 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.03 sec ]
 [ GxB_select (wait: 0 zombies, 61 pending) (hyper to sparse) 4.1e-05 sec ]
 [ GrB_Vector_nvals 2.31e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.67e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.01e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.14e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 28 mwork 0 (nthreads 1 fine hash: 1) 5.06e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000608 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.6e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.2e-06 sec ]
 [ GrB_reduce (A full) 0.00035 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 33 pending) (hyper to sparse) 4.04e-05 sec ]
 [ GrB_Vector_nvals 2.24e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.33e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.76e-05 sec ]
 [ GrB_Vector_nvals 1.4e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.19e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.63e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00141 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.64e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.72e-06 sec ]
 [ GrB_reduce (A full) 0.000335 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 20 pending) (hyper to sparse) 4.01e-05 sec ]
 [ GrB_Vector_nvals 2.44e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.42e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.98e-05 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 3.32e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 16 mwork 0 (nthreads 1 fine hash: 1) 4.51e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000565 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.56e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.88e-06 sec ]
 [ GrB_reduce (A full) 0.00136 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 4 pending) (hyper to sparse) 3.91e-05 sec ]
 [ GrB_Vector_nvals 7.56e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.31e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.05e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.97e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 3.82e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000441 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.53e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.17e-06 sec ]
 [ GrB_reduce (A full) 0.00143 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0286 sec ]
 [ GxB_select (wait: 0 zombies, 2 pending) (hyper to sparse) 3.57e-05 sec ]
 [ GrB_Vector_nvals 2.35e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.09e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.71e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 1.94e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.72e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000417 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0123 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.75e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.26e-06 sec ]
 [ GrB_reduce (A full) 0.00279 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0288 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.72e-05 sec ]
 [ GrB_Vector_nvals 4.62e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.18e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.11e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000357 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.56e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.76e-06 sec ]
 [ GrB_reduce (A full) 0.00279 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0287 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.73e-05 sec ]
 [ GrB_Vector_nvals 7.19e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.14e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.84e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.08e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.75e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000425 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.71e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.36e-06 sec ]
 [ GrB_reduce (A full) 0.0049 sec ]
sssp12c: threads: 40 trial:  0 source   2338012 time:    23.1094 sec

  134217726x1 GraphBLAS int32_t vector, bitmap by col
  path_lengths1, 134217726 entries

    (0,0)   2147483647
    (1,0)   92
    (2,0)   49
    (3,0)   2147483647
    (4,0)   2147483647
    (5,0)   2147483647
    (6,0)   2147483647
    (7,0)   2147483647
    (8,0)   2147483647
    (9,0)   149
    (10,0)   2147483647
    (11,0)   12
    (12,0)   2147483647
    (13,0)   2147483647
    (14,0)   6
    (15,0)   14
    (16,0)   2147483647
    (17,0)   2147483647
    (18,0)   2147483647
    (19,0)   52
    (20,0)   2147483647
    (21,0)   2147483647
    (22,0)   2147483647
    (23,0)   2147483647
    (24,0)   178
    (25,0)   31
    (26,0)   8
    (27,0)   92
    (28,0)   12
    ...
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0181 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0024 sec ]
 [ GxB_select 1.4 sec ]
 [ GxB_select 1.4 sec ]
 [ GxB_select 2.67 sec ]
 [ GxB_select 7.76 sec ]
 [ GrB_Matrix_nvals 7.58e-07 sec ]
 [ GrB_Matrix_nvals 3.76e-07 sec ]
 [ GrB_Matrix_nvals 3.15e-07 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 3.48e-05 sec ]
 [ GrB_assign (C empty) Method 06n: C(:,:)<M> = Z ; no S 0.0222 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.84e-05 sec ]
 [ GrB_Vector_nvals 3.3e-07 sec ]
 [ GxB_set (vector option) 7.86e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 298 mwork 0 (nthreads 1 fine hash: 1) 8.52e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 1 pending) (hyper to sparse) add:(S<.>=S+S) (generic add: pair) 9.87e-05 sec ]
 [ GrB_Vector_nvals 1.77e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B full) add:(S<S>=S+F) 0.00805 sec ]
 [ GxB_select 1.53e-05 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.39e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.37e-05 sec ]
 [ GrB_apply (C full) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign (full to bitmap) Method:bit4 C<M,struct> = A 0.0212 sec ]
 [ GrB_Vector_nvals 6.15e-07 sec ]
 [ GxB_set (vector option) 6.84e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 439476 mwork 0 (nthreads 6 fine hash: 7) 0.00794 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.69e-05 sec ]
 [ GrB_Vector_nvals 1.73e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0492 sec ]
 [ GxB_select 0.00228 sec ]
 [ GrB_Vector_nvals 3.65e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000771 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00225 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0185 sec ]
 [ GrB_Vector_nvals 6.41e-07 sec ]
 [ GxB_set (vector option) 6.35e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.11104e+08 mwork 0 (nthreads 40 fine: 160) 0.335 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000561 sec ]
 [ GrB_Vector_nvals 3.2e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0287 sec ]
 [ GxB_select 0.00711 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00629 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0222 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0412 sec ]
 [ GrB_Vector_nvals 5.53e-07 sec ]
 [ GxB_set (vector option) 4.43e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.98273e+08 mwork 0 (nthreads 40 fine: 160) (sparse to bitmap) 1.17 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00893 sec ]
 [ GrB_Vector_nvals 3.69e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.048 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0471 sec ]
 [ GrB_Vector_nvals 4.6e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0227 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) (bitmap to sparse) 0.164 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0598 sec ]
 [ GrB_Vector_nvals 4.64e-07 sec ]
 [ GxB_set (vector option) (sparse to bitmap) 0.0295 sec ]
 [ GrB_mxv (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A'*B, dot_product 0.728 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0457 sec ]
 [ GrB_Vector_nvals 3.09e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0452 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0459 sec ]
 [ GrB_Vector_nvals 3.95e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0188 sec ]
(sparse to bitmap)  [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) (C empty) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.152 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0594 sec ]
 [ GrB_Vector_nvals 5.74e-07 sec ]
 [ GxB_set (vector option) 5.22e-07 sec ]
 [ GrB_mxv (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A'*B, dot_product 0.533 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0469 sec ]
 [ GrB_Vector_nvals 3.13e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0445 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0441 sec ]
 [ GrB_Vector_nvals 2.27e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00888 sec ]
(sparse to bitmap)  [ GxB_select (C bitmap) (M bitmap) (A bitmap) (bitmap select: lt_thunk) (C<M>=Z via assign) (C empty) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.139 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0452 sec ]
 [ GrB_Vector_nvals 4.6e-07 sec ]
 [ GxB_set (vector option) (bitmap to sparse) 0.0154 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 2.10277e+07 mwork 0 (nthreads 40 fine: 160) 0.153 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0411 sec ]
 [ GrB_Vector_nvals 4.38e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0201 sec ]
 [ GxB_select 0.00124 sec ]
 [ GrB_Vector_nvals 2.59e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00184 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00771 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0222 sec ]
 [ GrB_Vector_nvals 4.9e-07 sec ]
 [ GxB_set (vector option) 8.42e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.64795e+06 mwork 0 (nthreads 25 fine hash: 26) 0.0226 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0394 sec ]
 [ GrB_Vector_nvals 5.05e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.112 sec ]
 [ GxB_select 0.000409 sec ]
 [ GrB_Vector_nvals 3.93e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000667 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00138 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0172 sec ]
 [ GrB_Vector_nvals 7.9e-07 sec ]
 [ GxB_set (vector option) 6e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 75760 mwork 0 (nthreads 1 fine hash: 1) 0.0112 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0401 sec ]
 [ GrB_Vector_nvals 2.85e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00646 sec ]
 [ GxB_select 0.000228 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.98e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000708 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0133 sec ]
 [ GrB_Vector_nvals 4.36e-07 sec ]
 [ GxB_set (vector option) 4.75e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2347 mwork 0 (nthreads 1 fine hash: 1) 0.00052 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0346 sec ]
 [ GrB_Vector_nvals 3.04e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00112 sec ]
 [ GxB_select 2.28e-05 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.71e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.14e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 3.02e-07 sec ]
 [ GxB_set (vector option) 3.19e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 45 mwork 0 (nthreads 1 fine hash: 1) 7.83e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0333 sec ]
 [ GrB_Vector_nvals 2.91e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000665 sec ]
 [ GxB_select 1.41e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0327 sec ]
 [ GrB_Vector_nvals 3.3e-07 sec ]
 [ GrB_mxv (B bitmap) (can do in place: 0) C=A'*B, dot_product 5.66 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0622 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.12 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0437 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0219 sec ]
 [ GrB_reduce (A full) 0.000158 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0878 sec ]
 [ GxB_select (wait: 0 zombies, 36136093 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.13 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GxB_set (vector option) (bitmap to sparse) 0.0181 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 3.78719e+06 mwork 0 (nthreads 40 fine: 58) 0.117 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00532 sec ]
 [ GrB_Vector_nvals 5.44e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0137 sec ]
 [ GxB_select 0.000386 sec ]
 [ GrB_Vector_nvals 2.29e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00106 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0014 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0181 sec ]
 [ GrB_Vector_nvals 4.77e-07 sec ]
 [ GxB_set (vector option) 6.67e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 78303 mwork 0 (nthreads 1 fine hash: 1) 0.0208 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00738 sec ]
 [ GrB_Vector_nvals 3.63e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00764 sec ]
 [ GxB_select 0.000212 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.94e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000722 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0123 sec ]
 [ GrB_Vector_nvals 3.95e-07 sec ]
 [ GxB_set (vector option) 7.6e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 328 mwork 0 (nthreads 1 fine hash: 1) 0.000196 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00597 sec ]
 [ GrB_Vector_nvals 5.2e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000819 sec ]
 [ GxB_select 1.69e-05 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.51e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.97e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 4.51e-07 sec ]
 [ GxB_set (vector option) 3.09e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.4e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00592 sec ]
 [ GrB_Vector_nvals 4.68e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00139 sec ]
 [ GxB_select 1.59e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0137 sec ]
 [ GrB_Vector_nvals 2.16e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6.81933e+07 mwork 0 (nthreads 40 fine: 160) 0.301 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.023 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0188 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00229 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00535 sec ]
 [ GrB_reduce (A full) 3.43e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0773 sec ]
 [ GxB_select (wait: 0 zombies, 25798435 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.125 sec ]
 [ GrB_Vector_nvals 3.82e-07 sec ]
 [ GxB_set (vector option) (bitmap to sparse) 0.0156 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 75702 mwork 0 (nthreads 1 fine hash: 1) 0.146 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0036 sec ]
 [ GrB_Vector_nvals 4.69e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00772 sec ]
 [ GxB_select 0.00046 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000325 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00141 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0146 sec ]
 [ GrB_Vector_nvals 4.49e-07 sec ]
 [ GxB_set (vector option) 6.67e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14403 mwork 0 (nthreads 1 fine hash: 1) 0.00452 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0042 sec ]
 [ GrB_Vector_nvals 3.52e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00232 sec ]
 [ GxB_select 5.13e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.75e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000171 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0117 sec ]
 [ GrB_Vector_nvals 3.07e-07 sec ]
 [ GxB_set (vector option) 5.63e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17 mwork 0 (nthreads 1 fine hash: 1) 7.56e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00393 sec ]
 [ GrB_Vector_nvals 3.54e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000589 sec ]
 [ GxB_select 1.46e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0109 sec ]
 [ GrB_Vector_nvals 2.38e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.45603e+07 mwork 0 (nthreads 40 fine: 160) 0.176 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0194 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0157 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000793 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00516 sec ]
 [ GrB_reduce (A full) 3.27e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0717 sec ]
 [ GxB_select (wait: 0 zombies, 19422731 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.123 sec ]
 [ GrB_Vector_nvals 3.3e-07 sec ]
 [ GxB_set (vector option) (bitmap to sparse) 0.0147 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 22332 mwork 0 (nthreads 1 fine hash: 1) 0.108 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0026 sec ]
 [ GrB_Vector_nvals 4.81e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00387 sec ]
 [ GxB_select 0.00017 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000173 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000538 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0141 sec ]
 [ GrB_Vector_nvals 4.68e-07 sec ]
 [ GxB_set (vector option) 5.74e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5230 mwork 0 (nthreads 1 fine hash: 1) 0.00179 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00318 sec ]
 [ GrB_Vector_nvals 5.22e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00146 sec ]
 [ GxB_select 2.92e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.52e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000106 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 2.27e-07 sec ]
 [ GxB_set (vector option) 4.56e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 6.78e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00305 sec ]
 [ GrB_Vector_nvals 3.65e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00136 sec ]
 [ GxB_select 1.35e-05 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0104 sec ]
 [ GrB_Vector_nvals 2.44e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.28009e+07 mwork 0 (nthreads 40 fine: 160) 0.118 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0172 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0149 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000492 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0049 sec ]
 [ GrB_reduce (A full) 3.27e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0668 sec ]
 [ GxB_select (wait: 0 zombies, 14786940 pending) (hyper to sparse) 0.00671 sec ]
 [ GrB_Vector_nvals 3.15e-07 sec ]
 [ GxB_set (vector option) 6.59e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 9493 mwork 0 (nthreads 1 fine hash: 1) 0.0893 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00211 sec ]
 [ GrB_Vector_nvals 3.95e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00184 sec ]
 [ GxB_select 8.36e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000106 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000275 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0152 sec ]
 [ GrB_Vector_nvals 3.05e-07 sec ]
 [ GxB_set (vector option) 3.52e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2428 mwork 0 (nthreads 1 fine hash: 1) 0.000898 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00262 sec ]
 [ GrB_Vector_nvals 3.67e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00116 sec ]
 [ GxB_select 2.14e-05 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.47e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.71e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 5.07e-07 sec ]
 [ GxB_set (vector option) 4.92e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.47e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00312 sec ]
 [ GrB_Vector_nvals 4.64e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000442 sec ]
 [ GxB_select 1.47e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00939 sec ]
 [ GrB_Vector_nvals 3.71e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7.85838e+06 mwork 0 (nthreads 40 fine: 120) 0.0959 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0161 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0143 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000353 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00463 sec ]
 [ GrB_reduce (A full) 3.23e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0643 sec ]
 [ GxB_select (wait: 0 zombies, 11131463 pending) (hyper to sparse) 0.00498 sec ]
 [ GrB_Vector_nvals 2.4e-07 sec ]
 [ GxB_set (vector option) 5.89e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4815 mwork 0 (nthreads 1 fine hash: 1) 0.0756 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00197 sec ]
 [ GrB_Vector_nvals 3.76e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00142 sec ]
 [ GxB_select 5.14e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.42e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000177 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0149 sec ]
 [ GrB_Vector_nvals 3.04e-07 sec ]
 [ GxB_set (vector option) 5.61e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1235 mwork 0 (nthreads 1 fine hash: 1) 0.00051 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00249 sec ]
 [ GrB_Vector_nvals 2.91e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00102 sec ]
 [ GxB_select 1.76e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0086 sec ]
 [ GrB_Vector_nvals 9.33e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5.31182e+06 mwork 0 (nthreads 40 fine: 82) 0.0771 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0132 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.016 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000314 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00567 sec ]
 [ GrB_reduce (A full) 3.37e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0619 sec ]
 [ GxB_select (wait: 0 zombies, 8113579 pending) (hyper to sparse) 0.00362 sec ]
 [ GrB_Vector_nvals 3.67e-07 sec ]
 [ GxB_set (vector option) 7.6e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2902 mwork 0 (nthreads 1 fine hash: 1) 0.0637 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00154 sec ]
 [ GrB_Vector_nvals 4.47e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00215 sec ]
 [ GxB_select 3.72e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.8e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000139 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0144 sec ]
 [ GrB_Vector_nvals 4.73e-07 sec ]
 [ GxB_set (vector option) 5.33e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 794 mwork 0 (nthreads 1 fine hash: 1) 0.000354 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00192 sec ]
 [ GrB_Vector_nvals 2.94e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00164 sec ]
 [ GxB_select 1.58e-05 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.48e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.35e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 6.56e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00868 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.84856e+06 mwork 0 (nthreads 40 fine: 59) 0.0728 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0118 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0144 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000368 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0043 sec ]
 [ GrB_reduce (A full) 6.36e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0598 sec ]
 [ GxB_select (wait: 0 zombies, 5540427 pending) (hyper to sparse) 0.00241 sec ]
 [ GrB_Vector_nvals 2.53e-07 sec ]
 [ GxB_set (vector option) 5.51e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1830 mwork 0 (nthreads 1 fine hash: 1) 0.057 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00129 sec ]
 [ GrB_Vector_nvals 4.62e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00195 sec ]
 [ GxB_select 2.91e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.68e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000111 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0148 sec ]
 [ GrB_Vector_nvals 4.56e-07 sec ]
 [ GxB_set (vector option) 6.24e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 502 mwork 0 (nthreads 1 fine hash: 1) 0.000258 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00169 sec ]
 [ GrB_Vector_nvals 2.92e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00192 sec ]
 [ GxB_select 1.59e-05 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00703 sec ]
 [ GrB_Vector_nvals 3.22e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.91661e+06 mwork 0 (nthreads 40 fine: 45) 0.0597 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0102 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0144 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000278 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00416 sec ]
 [ GrB_reduce (A full) 0.00164 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0587 sec ]
 [ GxB_select (wait: 0 zombies, 3301524 pending) (hyper to sparse) 0.00135 sec ]
 [ GrB_Vector_nvals 2.51e-07 sec ]
 [ GxB_set (vector option) 4.27e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1201 mwork 0 (nthreads 1 fine hash: 1) 0.0521 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00124 sec ]
 [ GrB_Vector_nvals 2.83e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00125 sec ]
 [ GxB_select 2.51e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.99e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.83e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0153 sec ]
 [ GrB_Vector_nvals 3.87e-07 sec ]
 [ GxB_set (vector option) 6e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 346 mwork 0 (nthreads 1 fine hash: 1) 0.000204 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00154 sec ]
 [ GrB_Vector_nvals 3.11e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00101 sec ]
 [ GxB_select 1.55e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00539 sec ]
 [ GrB_Vector_nvals 3.35e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.28309e+06 mwork 0 (nthreads 34 fine: 35) 0.0673 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0086 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0157 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000303 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00416 sec ]
 [ GrB_reduce (A full) 0.000306 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0567 sec ]
 [ GxB_select (wait: 0 zombies, 1321116 pending) (hyper to sparse) 0.00065 sec ]
 [ GrB_Vector_nvals 2.72e-07 sec ]
 [ GxB_set (vector option) 4.47e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 684 mwork 0 (nthreads 1 fine hash: 1) 0.0344 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000863 sec ]
 [ GrB_Vector_nvals 3.07e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00272 sec ]
 [ GxB_select 2.18e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.82e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.36e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0151 sec ]
 [ GrB_Vector_nvals 5.27e-07 sec ]
 [ GxB_set (vector option) 6.61e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 235 mwork 0 (nthreads 1 fine hash: 1) 0.00016 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00108 sec ]
 [ GrB_Vector_nvals 1.55e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00194 sec ]
 [ GxB_select 1.53e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00266 sec ]
 [ GrB_Vector_nvals 8.05e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.29484e+06 mwork 0 (nthreads 19 fine hash: 20) 0.0448 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0882 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0163 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000291 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00352 sec ]
 [ GrB_reduce (A full) 0.00354 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.054 sec ]
 [ GxB_select (wait: 0 zombies, 85727 pending) (hyper to sparse) 0.000799 sec ]
 [ GrB_Vector_nvals 3.2e-07 sec ]
 [ GxB_set (vector option) 4.88e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 126 mwork 0 (nthreads 1 fine hash: 1) 0.00188 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000178 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000645 sec ]
 [ GxB_select 1.2e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.41e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.05e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 4.04e-07 sec ]
 [ GxB_set (vector option) 5.83e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7 mwork 0 (nthreads 1 fine hash: 1) 6.73e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000362 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000521 sec ]
 [ GxB_select 1.34e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000848 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 42155 mwork 0 (nthreads 1 fine hash: 1) 0.0123 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00456 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0139 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000157 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000506 sec ]
 [ GrB_reduce (A full) 4.11e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0545 sec ]
 [ GxB_select (wait: 0 zombies, 43840 pending) (hyper to sparse) 0.000412 sec ]
 [ GrB_Vector_nvals 2.33e-07 sec ]
 [ GxB_set (vector option) 3.99e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10 mwork 0 (nthreads 1 fine hash: 1) 0.00107 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000148 sec ]
 [ GrB_Vector_nvals 1.49e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000462 sec ]
 [ GxB_select 1.14e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.38e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.6e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 3.82e-07 sec ]
 [ GxB_set (vector option) 4.64e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.11e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000166 sec ]
 [ GrB_Vector_nvals 1.49e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000477 sec ]
 [ GxB_select 1.34e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000428 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17357 mwork 0 (nthreads 1 fine hash: 1) 0.00557 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00228 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.012 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.41e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000277 sec ]
 [ GrB_reduce (A full) 6.76e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0543 sec ]
 [ GxB_select (wait: 0 zombies, 26594 pending) (hyper to sparse) 0.000269 sec ]
 [ GrB_Vector_nvals 2.37e-07 sec ]
 [ GxB_set (vector option) 2.78e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4 mwork 0 (nthreads 1 fine hash: 1) 0.000716 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000112 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000489 sec ]
 [ GxB_select 1.15e-05 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.36e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.22e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 3.22e-07 sec ]
 [ GxB_set (vector option) 4.81e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 7.62e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000135 sec ]
 [ GrB_Vector_nvals 1.51e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000444 sec ]
 [ GxB_select 1.36e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00029 sec ]
 [ GrB_Vector_nvals 1.51e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10060 mwork 0 (nthreads 1 fine hash: 1) 0.00337 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00167 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0117 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.09e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000185 sec ]
 [ GrB_reduce (A full) 6.17e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0543 sec ]
 [ GxB_select (wait: 0 zombies, 16597 pending) (hyper to sparse) 0.000185 sec ]
 [ GrB_Vector_nvals 2.51e-07 sec ]
 [ GxB_set (vector option) 2.87e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000513 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 9.93e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00046 sec ]
 [ GxB_select 1.1e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.31e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.12e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 4.58e-07 sec ]
 [ GxB_set (vector option) 4.62e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.41e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000111 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000432 sec ]
 [ GxB_select 1.41e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000224 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6455 mwork 0 (nthreads 1 fine hash: 1) 0.00225 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00138 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.07e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000132 sec ]
 [ GrB_reduce (A full) 7.23e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0538 sec ]
 [ GxB_select (wait: 0 zombies, 10182 pending) (hyper to sparse) 0.000134 sec ]
 [ GrB_Vector_nvals 3.17e-07 sec ]
 [ GxB_set (vector option) 3.73e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000368 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.57e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000442 sec ]
 [ GxB_select 1.07e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.34e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000103 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 4.15e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000183 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4347 mwork 0 (nthreads 1 fine hash: 1) 0.00161 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0012 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0115 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.18e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000116 sec ]
 [ GrB_reduce (A full) 9.9e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0536 sec ]
 [ GxB_select (wait: 0 zombies, 5857 pending) (hyper to sparse) 9.66e-05 sec ]
 [ GrB_Vector_nvals 2.31e-07 sec ]
 [ GxB_set (vector option) 2.94e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000257 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.83e-05 sec ]
 [ GrB_Vector_nvals 1.49e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000451 sec ]
 [ GxB_select 1.11e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000112 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2778 mwork 0 (nthreads 1 fine hash: 1) 0.00106 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00284 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0115 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.71e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.39e-05 sec ]
 [ GrB_reduce (A full) 0.000103 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0517 sec ]
 [ GxB_select (wait: 0 zombies, 3089 pending) (hyper to sparse) 7.42e-05 sec ]
 [ GrB_Vector_nvals 4.12e-07 sec ]
 [ GxB_set (vector option) 3.39e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000187 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.54e-05 sec ]
 [ GrB_Vector_nvals 1.58e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00045 sec ]
 [ GxB_select 1.06e-05 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.38e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.4e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 3.32e-07 sec ]
 [ GxB_set (vector option) 6.2e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.17e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.26e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000432 sec ]
 [ GxB_select 1.32e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 9.05e-05 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1760 mwork 0 (nthreads 1 fine hash: 1) 0.000717 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00106 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.62e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.53e-05 sec ]
 [ GrB_reduce (A full) 0.000107 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0444 sec ]
 [ GxB_select (wait: 0 zombies, 1340 pending) (hyper to sparse) 5.61e-05 sec ]
 [ GrB_Vector_nvals 2.42e-07 sec ]
 [ GxB_set (vector option) 2.87e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000122 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.44e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000449 sec ]
 [ GxB_select 1.09e-05 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 5.47e-05 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 951 mwork 0 (nthreads 1 fine hash: 1) 0.000411 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000937 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.25e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.6e-05 sec ]
 [ GrB_reduce (A full) 0.000109 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0355 sec ]
 [ GxB_select (wait: 0 zombies, 400 pending) (hyper to sparse) 4.56e-05 sec ]
 [ GrB_Vector_nvals 9.69e-07 sec ]
 [ GxB_set (vector option) 3.35e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 8.01e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.2e-05 sec ]
 [ GrB_Vector_nvals 1.4e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 3.19e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 339 mwork 0 (nthreads 1 fine hash: 1) 0.000184 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000824 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.9e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.96e-05 sec ]
 [ GrB_reduce (A full) 0.000114 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0301 sec ]
 [ GxB_select (wait: 0 zombies, 61 pending) (hyper to sparse) 4.41e-05 sec ]
 [ GrB_Vector_nvals 3.41e-07 sec ]
 [ GxB_set (vector option) 3.41e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.78e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.95e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.25e-05 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 28 mwork 0 (nthreads 1 fine hash: 1) 5.27e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000605 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0124 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.92e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.68e-06 sec ]
 [ GrB_reduce (A full) 0.000338 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 33 pending) (hyper to sparse) 4.28e-05 sec ]
 [ GrB_Vector_nvals 2.31e-07 sec ]
 [ GxB_set (vector option) 2.91e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.69e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.96e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.14e-05 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.57e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000554 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.52e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.54e-06 sec ]
 [ GrB_reduce (A full) 0.000337 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 20 pending) (hyper to sparse) 4.04e-05 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GxB_set (vector option) 2.76e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.58e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.06e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.24e-05 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 16 mwork 0 (nthreads 1 fine hash: 1) 4.8e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00057 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.74e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.69e-06 sec ]
 [ GrB_reduce (A full) 0.00146 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 4 pending) (hyper to sparse) 3.89e-05 sec ]
 [ GrB_Vector_nvals 2.29e-07 sec ]
 [ GxB_set (vector option) 3.22e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.37e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.12e-05 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.07e-05 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 3.98e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000439 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.66e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.33e-06 sec ]
 [ GrB_reduce (A full) 0.00144 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0288 sec ]
 [ GxB_select (wait: 0 zombies, 2 pending) (hyper to sparse) 3.84e-05 sec ]
 [ GrB_Vector_nvals 4.06e-07 sec ]
 [ GxB_set (vector option) 3.37e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.26e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.87e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.07e-05 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.76e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000424 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0115 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.75e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.43e-06 sec ]
 [ GrB_reduce (A full) 0.0028 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0292 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.08e-05 sec ]
 [ GrB_Vector_nvals 2.35e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.18e-05 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.33e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000357 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.75e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.77e-06 sec ]
 [ GrB_reduce (A full) 0.00279 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.19e-05 sec ]
 [ GrB_Vector_nvals 2.42e-07 sec ]
 [ GxB_set (vector option) 2.55e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.21e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.04e-05 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.26e-05 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.81e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000422 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.8e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.14e-06 sec ]
 [ GrB_reduce (A full) 0.0048 sec ]
sssp13:  threads: 40 trial:  0 source   2338012 time:    28.5819 sec

  134217726x1 GraphBLAS int32_t vector, bitmap by col
  path_lengths1, 134217726 entries

    (0,0)   2147483647
    (1,0)   92
    (2,0)   49
    (3,0)   2147483647
    (4,0)   2147483647
    (5,0)   2147483647
    (6,0)   2147483647
    (7,0)   2147483647
    (8,0)   2147483647
    (9,0)   149
    (10,0)   2147483647
    (11,0)   12
    (12,0)   2147483647
    (13,0)   2147483647
    (14,0)   6
    (15,0)   14
    (16,0)   2147483647
    (17,0)   2147483647
    (18,0)   2147483647
    (19,0)   52
    (20,0)   2147483647
    (21,0)   2147483647
    (22,0)   2147483647
    (23,0)   2147483647
    (24,0)   178
    (25,0)   31
    (26,0)   8
    (27,0)   92
    (28,0)   12
    ...

40: SSSP12  time:      27.835256 sec  rate:   151.72 (delta 27)
40: SSSP12c time:      23.109428 sec  rate:   182.75 (delta 27)
40: SSSP13  time:      28.581950 sec  rate:   147.76 (delta 27)
