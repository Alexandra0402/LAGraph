threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 7.52e-06 sec ]
 [ GxB_set 0.0196 sec ]
 [ GrB_Matrix_nvals 1.45e-06 sec ]
delta: 27
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 5.11e-05 sec ]
read time: 41.7337 sec
 [ GrB_apply (shallow-op) 4.53 sec ]
 [ GrB_Matrix_nvals 6.43e-07 sec ]

  134217726x134217726 GraphBLAS int32_t matrix, sparse by row
  A, 4223264644 entries

    (1,83111928)   84
    (2,113772338)   43
    (9,26920261)   168
    (9,33335674)   144
    (9,90905511)   183
    (9,92964069)   143
    (9,126874301)   149
    (11,3075467)   7
    (11,11283179)   223
    (11,14136330)   205
    (11,18241662)   216
    (11,21256905)   201
    (11,26197037)   116
    (11,34992956)   58
    (11,49762924)   255
    (11,54231301)   7
    (11,55275316)   181
    (11,55896288)   250
    (11,56613538)   19
    (11,69378808)   233
    (11,76391974)   143
    (11,77970070)   97
    (11,80121717)   45
    (11,113872174)   215
    (11,115829864)   9
    (11,125066355)   241
    (11,129708509)   64
    (11,131285585)   134
    (11,132549336)   65
    ...
 [ GrB_Matrix_nvals 9.26e-07 sec ]
 [ GrB_apply (A full) (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_isone_double)) 2.6e-05 sec ]
 [ GrB_reduce (A full) 1.77e-05 sec ]
 [ GrB_Matrix_extractTuples (A full) 2.01e-05 sec ]
A is symmetric
transpose time: 8.23289e-07
input graph: nodes: 134217726 edges: 4223264644 max nthreads 40
# of source nodes: 64

 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0193 sec ]
 [ GxB_select 1.43 sec ]
 [ GxB_select 2.68 sec ]
 [ GrB_Matrix_nvals 5.81e-07 sec ]
 [ GrB_Matrix_nvals 1.83e-07 sec ]
 [ GrB_Matrix_nvals 8.38e-08 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 3.23e-05 sec ]
 [ GxB_select 4.32e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 298 mwork 0 (nthreads 1 fine hash: 1) 0.00013 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 1 pending) (hyper to sparse) add:(S<.>=S+S) (generic add: pair) 0.000125 sec ]
 [ GrB_Vector_nvals 2.24e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B full) add:(S<S>=S+F) 0.00124 sec ]
 [ GxB_select 2.52e-05 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.12e-05 sec ]
 [ GrB_apply (C full) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign (full to bitmap) Method:bit4 C<M,struct> = A 0.0161 sec ]
 [ GrB_Vector_nvals 2.61e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 439476 mwork 0 (nthreads 6 fine hash: 7) 0.00702 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.15e-05 sec ]
 [ GrB_Vector_nvals 2.76e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0373 sec ]
 [ GxB_select 0.00054 sec ]
 [ GrB_Vector_nvals 3.52e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00365 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.02 sec ]
 [ GrB_Vector_nvals 4.36e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.11104e+08 mwork 0 (nthreads 40 fine: 160) 0.331 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000566 sec ]
 [ GrB_Vector_nvals 4.82e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0289 sec ]
 [ GxB_select 0.00708 sec ]
 [ GrB_Vector_nvals 2.85e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0236 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0411 sec ]
 [ GrB_Vector_nvals 7.71e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.98273e+08 mwork 0 (nthreads 40 fine: 160) (sparse to bitmap) 1.17 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00898 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0457 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0478 sec ]
 [ GrB_Vector_nvals 2.38e-07 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.146 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0603 sec ]
 [ GrB_Vector_nvals 4.27e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.928 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0468 sec ]
 [ GrB_Vector_nvals 9.83e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0458 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0466 sec ]
 [ GrB_Vector_nvals 2.24e-07 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.144 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0565 sec ]
 [ GrB_Vector_nvals 6.13e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.429 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0479 sec ]
 [ GrB_Vector_nvals 4.38e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0436 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0429 sec ]
 [ GrB_Vector_nvals 3.3e-07 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.137 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0462 sec ]
 [ GrB_Vector_nvals 4.08e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.12 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0436 sec ]
 [ GrB_Vector_nvals 2.24e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0446 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0411 sec ]
 [ GrB_Vector_nvals 3.09e-07 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.12 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0272 sec ]
 [ GrB_Vector_nvals 4.02e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0364 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0403 sec ]
 [ GrB_Vector_nvals 2.18e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.034 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0479 sec ]
 [ GrB_Vector_nvals 3.87e-07 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0936 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0261 sec ]
 [ GrB_Vector_nvals 4.66e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 75760 mwork 0 (nthreads 1 fine hash: 1) 0.011 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0388 sec ]
 [ GrB_Vector_nvals 3.46e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00641 sec ]
 [ GxB_select 0.000219 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000704 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0126 sec ]
 [ GrB_Vector_nvals 2.68e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2347 mwork 0 (nthreads 1 fine hash: 1) 0.000517 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0353 sec ]
 [ GrB_Vector_nvals 4.69e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00169 sec ]
 [ GxB_select 2.26e-05 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.83e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 3.35e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 45 mwork 0 (nthreads 1 fine hash: 1) 7.73e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.034 sec ]
 [ GrB_Vector_nvals 1.03e-06 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000657 sec ]
 [ GxB_select 1.56e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.033 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 8.95 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0612 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.118 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0942 sec ]
 [ GrB_Vector_nvals 3.69e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0967 sec ]
 [ GrB_Vector_nvals 2.18e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0927 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.075 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0339 sec ]
 [ GrB_Vector_nvals 4.47e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0378 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0478 sec ]
 [ GrB_Vector_nvals 4.36e-07 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0935 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0225 sec ]
 [ GrB_Vector_nvals 9.7e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 78303 mwork 0 (nthreads 1 fine hash: 1) 0.0217 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0325 sec ]
 [ GrB_Vector_nvals 3.46e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00813 sec ]
 [ GxB_select 0.000212 sec ]
 [ GrB_Vector_nvals 1.84e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000714 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0142 sec ]
 [ GrB_Vector_nvals 4.58e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 328 mwork 0 (nthreads 1 fine hash: 1) 0.000202 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0303 sec ]
 [ GrB_Vector_nvals 4.1e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000832 sec ]
 [ GxB_select 1.5e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.31e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0117 sec ]
 [ GrB_Vector_nvals 4.49e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.66e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0304 sec ]
 [ GrB_Vector_nvals 4.36e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000467 sec ]
 [ GxB_select 1.37e-05 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0304 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.272 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0446 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0351 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0926 sec ]
 [ GrB_Vector_nvals 3.52e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0974 sec ]
 [ GrB_Vector_nvals 9.5e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0938 sec ]
 [ GrB_Vector_nvals 2.98e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0512 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0341 sec ]
 [ GrB_Vector_nvals 4.69e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00216 sec ]
 [ GxB_select 0.000458 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0014 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0128 sec ]
 [ GrB_Vector_nvals 4.51e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14403 mwork 0 (nthreads 1 fine hash: 1) 0.00444 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0289 sec ]
 [ GrB_Vector_nvals 3.69e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00221 sec ]
 [ GxB_select 4.96e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000173 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0117 sec ]
 [ GrB_Vector_nvals 6.26e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17 mwork 0 (nthreads 1 fine hash: 1) 7.63e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0286 sec ]
 [ GrB_Vector_nvals 4.53e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000607 sec ]
 [ GxB_select 1.5e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0288 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.138 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0438 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0269 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0946 sec ]
 [ GrB_Vector_nvals 3.26e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0996 sec ]
 [ GrB_Vector_nvals 3.61e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0937 sec ]
 [ GrB_Vector_nvals 4.64e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0477 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0334 sec ]
 [ GrB_Vector_nvals 4.64e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00132 sec ]
 [ GxB_select 0.000171 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000525 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0121 sec ]
 [ GrB_Vector_nvals 4.64e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5230 mwork 0 (nthreads 1 fine hash: 1) 0.00175 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0292 sec ]
 [ GrB_Vector_nvals 1.09e-06 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00144 sec ]
 [ GxB_select 2.71e-05 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000106 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 3.22e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 6.99e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0297 sec ]
 [ GrB_Vector_nvals 3.74e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000618 sec ]
 [ GxB_select 1.41e-05 sec ]
 [ GrB_Vector_nvals 1.51e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0262 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.096 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0425 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0244 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0921 sec ]
 [ GrB_Vector_nvals 3.65e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0977 sec ]
 [ GrB_Vector_nvals 7.47e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0923 sec ]
 [ GrB_Vector_nvals 2.53e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0454 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.032 sec ]
 [ GrB_Vector_nvals 4.02e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00116 sec ]
 [ GxB_select 8.4e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000274 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0118 sec ]
 [ GrB_Vector_nvals 4.38e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2428 mwork 0 (nthreads 1 fine hash: 1) 0.000883 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0284 sec ]
 [ GrB_Vector_nvals 3.24e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0016 sec ]
 [ GxB_select 2.09e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.73e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 3.04e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.7e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0296 sec ]
 [ GrB_Vector_nvals 3.82e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000453 sec ]
 [ GxB_select 1.48e-05 sec ]
 [ GrB_Vector_nvals 1.34e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0243 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0749 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0402 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0223 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0919 sec ]
 [ GrB_Vector_nvals 4.36e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0982 sec ]
 [ GrB_Vector_nvals 2.09e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0935 sec ]
 [ GrB_Vector_nvals 3.24e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0452 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0316 sec ]
 [ GrB_Vector_nvals 3.91e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00106 sec ]
 [ GxB_select 5.25e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000189 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0117 sec ]
 [ GrB_Vector_nvals 4.41e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1235 mwork 0 (nthreads 1 fine hash: 1) 0.000505 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0281 sec ]
 [ GrB_Vector_nvals 3.56e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00102 sec ]
 [ GxB_select 1.69e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0219 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0653 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0385 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0237 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0926 sec ]
 [ GrB_Vector_nvals 3.41e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0971 sec ]
 [ GrB_Vector_nvals 3.22e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0929 sec ]
 [ GrB_Vector_nvals 3.07e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0433 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0307 sec ]
 [ GrB_Vector_nvals 6.46e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00101 sec ]
 [ GxB_select 3.94e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000139 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 5.59e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 794 mwork 0 (nthreads 1 fine hash: 1) 0.000362 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.029 sec ]
 [ GrB_Vector_nvals 3.89e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000932 sec ]
 [ GxB_select 1.67e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.55e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 3.13e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0224 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0567 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0375 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0239 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.095 sec ]
 [ GrB_Vector_nvals 3.61e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.098 sec ]
 [ GrB_Vector_nvals 2.61e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0953 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0421 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0301 sec ]
 [ GrB_Vector_nvals 4.49e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00098 sec ]
 [ GxB_select 3.1e-05 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000114 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 3.67e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 502 mwork 0 (nthreads 1 fine hash: 1) 0.000261 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0296 sec ]
 [ GrB_Vector_nvals 6.39e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000883 sec ]
 [ GxB_select 1.63e-05 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0189 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0517 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0359 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0249 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0933 sec ]
 [ GrB_Vector_nvals 2.63e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.0988 sec ]
 [ GrB_Vector_nvals 3.22e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.094 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0412 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0297 sec ]
 [ GrB_Vector_nvals 8.03e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000929 sec ]
 [ GxB_select 2.66e-05 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.93e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.012 sec ]
 [ GrB_Vector_nvals 1.1e-06 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 346 mwork 0 (nthreads 1 fine hash: 1) 0.000203 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0287 sec ]
 [ GrB_Vector_nvals 3.84e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0016 sec ]
 [ GxB_select 1.59e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0207 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0484 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0342 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0287 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0924 sec ]
 [ GrB_Vector_nvals 3.05e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) 0.098 sec ]
 [ GrB_Vector_nvals 4.02e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0941 sec ]
 [ GrB_Vector_nvals 8.51e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0395 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0286 sec ]
 [ GrB_Vector_nvals 5.12e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000879 sec ]
 [ GxB_select 2.13e-05 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.73e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 4.45e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 235 mwork 0 (nthreads 1 fine hash: 1) 0.000156 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.028 sec ]
 [ GrB_Vector_nvals 4.41e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000798 sec ]
 [ GxB_select 1.59e-05 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0147 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.042 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0316 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0331 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.0931 sec ]
 [ GrB_Vector_nvals 3.52e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.105 sec ]
 [ GrB_Vector_nvals 9.59e-07 sec ]
 [ GxB_select 0.000577 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 126 mwork 0 (nthreads 1 fine hash: 1) 0.00192 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000194 sec ]
 [ GrB_Vector_nvals 1.49e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000649 sec ]
 [ GxB_select 1.25e-05 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.05e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 4.88e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7 mwork 0 (nthreads 1 fine hash: 1) 6.8e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000374 sec ]
 [ GrB_Vector_nvals 2.01e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000516 sec ]
 [ GxB_select 1.38e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00085 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 42155 mwork 0 (nthreads 1 fine hash: 1) 0.0124 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00423 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0153 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0937 sec ]
 [ GrB_Vector_nvals 6.74e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.105 sec ]
 [ GrB_Vector_nvals 3.87e-07 sec ]
 [ GxB_select 0.000286 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10 mwork 0 (nthreads 1 fine hash: 1) 0.00109 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000148 sec ]
 [ GrB_Vector_nvals 1.79e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000488 sec ]
 [ GxB_select 1.12e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.29e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 3.76e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.88e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00017 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000444 sec ]
 [ GxB_select 1.35e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000431 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17357 mwork 0 (nthreads 1 fine hash: 1) 0.00561 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00217 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0117 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0943 sec ]
 [ GrB_Vector_nvals 3.35e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.105 sec ]
 [ GrB_Vector_nvals 3.15e-07 sec ]
 [ GxB_select 0.000179 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4 mwork 0 (nthreads 1 fine hash: 1) 0.000744 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000112 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000527 sec ]
 [ GxB_select 1.14e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.63e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 2.44e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.59e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000135 sec ]
 [ GrB_Vector_nvals 2.01e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000447 sec ]
 [ GxB_select 1.35e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000301 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10060 mwork 0 (nthreads 1 fine hash: 1) 0.00341 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00164 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.094 sec ]
 [ GrB_Vector_nvals 3.41e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.105 sec ]
 [ GrB_Vector_nvals 8.83e-07 sec ]
 [ GxB_select 0.000124 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000513 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 9.71e-05 sec ]
 [ GrB_Vector_nvals 1.68e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00047 sec ]
 [ GxB_select 1.07e-05 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.16e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 3.97e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.44e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000111 sec ]
 [ GrB_Vector_nvals 1.96e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00111 sec ]
 [ GxB_select 1.31e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00022 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6455 mwork 0 (nthreads 1 fine hash: 1) 0.00225 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00138 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0117 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0933 sec ]
 [ GrB_Vector_nvals 3.37e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.107 sec ]
 [ GrB_Vector_nvals 3.71e-07 sec ]
 [ GxB_select 8.97e-05 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.00037 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.7e-05 sec ]
 [ GrB_Vector_nvals 1.58e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000436 sec ]
 [ GxB_select 1.1e-05 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GxB_select (C<M>=Z via assign) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000119 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 8.77e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000181 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4347 mwork 0 (nthreads 1 fine hash: 1) 0.00164 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00119 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0936 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.106 sec ]
 [ GrB_Vector_nvals 3.04e-07 sec ]
 [ GxB_select 6.37e-05 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000277 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.15e-05 sec ]
 [ GrB_Vector_nvals 1.73e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000412 sec ]
 [ GxB_select 1.12e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000124 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2778 mwork 0 (nthreads 1 fine hash: 1) 0.00107 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00116 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0115 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0928 sec ]
 [ GrB_Vector_nvals 2.63e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.106 sec ]
 [ GrB_Vector_nvals 2.72e-07 sec ]
 [ GxB_select 4.42e-05 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000187 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.73e-05 sec ]
 [ GrB_Vector_nvals 1.68e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000439 sec ]
 [ GxB_select 1.07e-05 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.57e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 2.42e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.6e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.28e-05 sec ]
 [ GrB_Vector_nvals 1.58e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000429 sec ]
 [ GxB_select 1.4e-05 sec ]
 [ GrB_Vector_nvals 1.75e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 9.25e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1760 mwork 0 (nthreads 1 fine hash: 1) 0.000711 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00103 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0935 sec ]
 [ GrB_Vector_nvals 3.91e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.107 sec ]
 [ GrB_Vector_nvals 4.4e-07 sec ]
 [ GxB_select 3.13e-05 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000127 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.43e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000425 sec ]
 [ GxB_select 1.2e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 6.21e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 951 mwork 0 (nthreads 1 fine hash: 1) 0.000413 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000944 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0933 sec ]
 [ GrB_Vector_nvals 2.53e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.106 sec ]
 [ GrB_Vector_nvals 3.74e-07 sec ]
 [ GxB_select 2.59e-05 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 8.12e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.31e-05 sec ]
 [ GrB_Vector_nvals 1.9e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 3.91e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 339 mwork 0 (nthreads 1 fine hash: 1) 0.000183 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000799 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0934 sec ]
 [ GrB_Vector_nvals 4.79e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.107 sec ]
 [ GrB_Vector_nvals 3.8e-07 sec ]
 [ GxB_select 2.21e-05 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.85e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.74e-05 sec ]
 [ GrB_Vector_nvals 1.83e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.48e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 28 mwork 0 (nthreads 1 fine hash: 1) 5.47e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000611 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0932 sec ]
 [ GrB_Vector_nvals 2.63e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.107 sec ]
 [ GrB_Vector_nvals 2.44e-07 sec ]
 [ GxB_select 2.15e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.68e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.66e-05 sec ]
 [ GrB_Vector_nvals 1.77e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.35e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.71e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00055 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0121 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0939 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.108 sec ]
 [ GrB_Vector_nvals 6.17e-07 sec ]
 [ GxB_select 2.06e-05 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.6e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.73e-05 sec ]
 [ GrB_Vector_nvals 1.79e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.33e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 16 mwork 0 (nthreads 1 fine hash: 1) 4.96e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00056 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0115 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0937 sec ]
 [ GrB_Vector_nvals 4.66e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.106 sec ]
 [ GrB_Vector_nvals 2.35e-07 sec ]
 [ GxB_select 2.17e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.52e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.86e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.39e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.1e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000433 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0925 sec ]
 [ GrB_Vector_nvals 3.26e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.106 sec ]
 [ GrB_Vector_nvals 2.94e-07 sec ]
 [ GxB_select 2.13e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.6e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.61e-05 sec ]
 [ GrB_Vector_nvals 1.92e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.37e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.96e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000416 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0933 sec ]
 [ GrB_Vector_nvals 3.46e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.106 sec ]
 [ GrB_Vector_nvals 3e-07 sec ]
 [ GxB_select 2.09e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.35e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.48e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000355 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.0939 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.106 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GxB_select 2.17e-05 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.48e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.65e-05 sec ]
 [ GrB_Vector_nvals 1.88e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.31e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.92e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000413 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) 0.094 sec ]
 [ GrB_Vector_nvals 2.63e-07 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: ge_thunk) (bitmap to sparse) 0.107 sec ]
 [ GrB_Vector_nvals 3.24e-07 sec ]
sssp12 : threads: 40 trial:  0 source   2338012 time:    27.6253 sec
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0179 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.00239 sec ]
 [ GxB_select 1.41 sec ]
 [ GxB_select 2.68 sec ]
 [ GrB_Matrix_nvals 5.49e-07 sec ]
 [ GrB_Matrix_nvals 1.43e-07 sec ]
 [ GrB_Matrix_nvals 6.33e-08 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 2.52e-05 sec ]
 [ GrB_assign (C empty) Method 06n: C(:,:)<M> = Z ; no S 0.0158 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.28e-05 sec ]
 [ GrB_Vector_nvals 1.99e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 298 mwork 0 (nthreads 1 fine hash: 1) 6.88e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 1 pending) (hyper to sparse) add:(S<.>=S+S) (generic add: pair) 9.12e-05 sec ]
 [ GrB_Vector_nvals 1.77e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B full) add:(S<S>=S+F) 0.000799 sec ]
 [ GxB_select 1.32e-05 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.92e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.27e-05 sec ]
 [ GrB_apply (C full) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign (full to bitmap) Method:bit4 C<M,struct> = A 0.0132 sec ]
 [ GrB_Vector_nvals 4.23e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 439476 mwork 0 (nthreads 6 fine hash: 7) 0.0075 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.86e-05 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0435 sec ]
 [ GxB_select 0.00251 sec ]
 [ GrB_Vector_nvals 2.35e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000845 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00226 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0172 sec ]
 [ GrB_Vector_nvals 2.98e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.11104e+08 mwork 0 (nthreads 40 fine: 160) 0.339 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000576 sec ]
 [ GrB_Vector_nvals 6.3e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0285 sec ]
 [ GxB_select 0.00713 sec ]
 [ GrB_Vector_nvals 3.41e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00646 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0228 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0412 sec ]
 [ GrB_Vector_nvals 5.03e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.98273e+08 mwork 0 (nthreads 40 fine: 160) (sparse to bitmap) 1.17 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00887 sec ]
 [ GrB_Vector_nvals 6.98e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0481 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0474 sec ]
 [ GrB_Vector_nvals 2.05e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0228 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.148 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0598 sec ]
 [ GrB_Vector_nvals 4.38e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.936 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0484 sec ]
 [ GrB_Vector_nvals 3.19e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0461 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0482 sec ]
 [ GrB_Vector_nvals 2.14e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0176 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.144 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0575 sec ]
 [ GrB_Vector_nvals 5.23e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.434 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0501 sec ]
 [ GrB_Vector_nvals 2.35e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0452 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0438 sec ]
 [ GrB_Vector_nvals 2.16e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00975 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.139 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0458 sec ]
 [ GrB_Vector_nvals 4.08e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.12 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.043 sec ]
 [ GrB_Vector_nvals 2.22e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0441 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0416 sec ]
 [ GrB_Vector_nvals 2.1e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00612 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.122 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0264 sec ]
 [ GrB_Vector_nvals 3.2e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0366 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0397 sec ]
 [ GrB_Vector_nvals 3.15e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0334 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0488 sec ]
 [ GrB_Vector_nvals 4.25e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000575 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0968 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0258 sec ]
 [ GrB_Vector_nvals 4.9e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 75760 mwork 0 (nthreads 1 fine hash: 1) 0.0112 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0368 sec ]
 [ GrB_Vector_nvals 4.21e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00644 sec ]
 [ GxB_select 0.000219 sec ]
 [ GrB_Vector_nvals 1.56e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.16e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000693 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0121 sec ]
 [ GrB_Vector_nvals 4.69e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2347 mwork 0 (nthreads 1 fine hash: 1) 0.000527 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0362 sec ]
 [ GrB_Vector_nvals 8.92e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00114 sec ]
 [ GxB_select 2.18e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.79e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.11e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 4.56e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 45 mwork 0 (nthreads 1 fine hash: 1) 7.93e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0349 sec ]
 [ GrB_Vector_nvals 8.23e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000682 sec ]
 [ GxB_select 1.43e-05 sec ]
 [ GrB_Vector_nvals 1.66e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0327 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 8.88 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0597 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.119 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0448 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0223 sec ]
 [ GrB_reduce (A full) 4.81e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0872 sec ]
 [ GxB_select (wait: 0 zombies, 36136093 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.13 sec ]
 [ GrB_Vector_nvals 3.82e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) 0.0748 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0344 sec ]
 [ GrB_Vector_nvals 3.86e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0376 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0487 sec ]
 [ GrB_Vector_nvals 5.01e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00108 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0937 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0229 sec ]
 [ GrB_Vector_nvals 5.51e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 78303 mwork 0 (nthreads 1 fine hash: 1) 0.0213 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0313 sec ]
 [ GrB_Vector_nvals 5.05e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00726 sec ]
 [ GxB_select 0.000211 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.87e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000721 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0138 sec ]
 [ GrB_Vector_nvals 2.46e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 328 mwork 0 (nthreads 1 fine hash: 1) 0.000196 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0309 sec ]
 [ GrB_Vector_nvals 2.92e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000828 sec ]
 [ GxB_select 1.46e-05 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.59e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.26e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 4.06e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 7.01e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0303 sec ]
 [ GrB_Vector_nvals 2.83e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000483 sec ]
 [ GxB_select 1.45e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0303 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.273 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0462 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0357 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00943 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0125 sec ]
 [ GrB_reduce (A full) 0.000235 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0773 sec ]
 [ GxB_select (wait: 0 zombies, 25798435 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.125 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0501 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0336 sec ]
 [ GrB_Vector_nvals 4.66e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00176 sec ]
 [ GxB_select 0.000459 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000317 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0014 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0129 sec ]
 [ GrB_Vector_nvals 3.93e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14403 mwork 0 (nthreads 1 fine hash: 1) 0.0044 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0291 sec ]
 [ GrB_Vector_nvals 3.61e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00347 sec ]
 [ GxB_select 5.03e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.74e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000178 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 3.15e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17 mwork 0 (nthreads 1 fine hash: 1) 7.66e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0294 sec ]
 [ GrB_Vector_nvals 7.1e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000602 sec ]
 [ GxB_select 1.42e-05 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0279 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.138 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.045 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0279 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00742 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00905 sec ]
 [ GrB_reduce (A full) 3.55e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0716 sec ]
 [ GxB_select (wait: 0 zombies, 19422731 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.124 sec ]
 [ GrB_Vector_nvals 3.61e-07 sec ]
 [ GrB_vxm (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.0477 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0329 sec ]
 [ GrB_Vector_nvals 4.15e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00134 sec ]
 [ GxB_select 0.000168 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000172 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000521 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0122 sec ]
 [ GrB_Vector_nvals 2.4e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5230 mwork 0 (nthreads 1 fine hash: 1) 0.00173 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0296 sec ]
 [ GrB_Vector_nvals 3.73e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00194 sec ]
 [ GxB_select 2.72e-05 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.56e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000107 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 4.19e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 7.21e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0297 sec ]
 [ GrB_Vector_nvals 6.07e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000529 sec ]
 [ GxB_select 1.44e-05 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0264 sec ]
 [ GrB_vxm (B bitmap) (can do in place: 0) C=A*B, saxpy (compute C bitmap) 0.0963 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0421 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0238 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00722 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00793 sec ]
 [ GrB_reduce (A full) 3.31e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0675 sec ]
 [ GxB_select (wait: 0 zombies, 14786940 pending) (hyper to sparse) 0.00856 sec ]
 [ GrB_Vector_nvals 4.53e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 9493 mwork 0 (nthreads 1 fine hash: 1) 0.0859 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00226 sec ]
 [ GrB_Vector_nvals 3.78e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00187 sec ]
 [ GxB_select 8.41e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000106 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000273 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0141 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2428 mwork 0 (nthreads 1 fine hash: 1) 0.000878 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00261 sec ]
 [ GrB_Vector_nvals 2.16e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00114 sec ]
 [ GxB_select 1.98e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.46e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.83e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 2.37e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.72e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00257 sec ]
 [ GrB_Vector_nvals 2.76e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000428 sec ]
 [ GxB_select 1.45e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00933 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7.85838e+06 mwork 0 (nthreads 40 fine: 120) 0.0943 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0163 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0143 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00038 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00452 sec ]
 [ GrB_reduce (A full) 3.28e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0642 sec ]
 [ GxB_select (wait: 0 zombies, 11131463 pending) (hyper to sparse) 0.00494 sec ]
 [ GrB_Vector_nvals 2.68e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4815 mwork 0 (nthreads 1 fine hash: 1) 0.0722 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00195 sec ]
 [ GrB_Vector_nvals 3.11e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00143 sec ]
 [ GxB_select 5.1e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.09e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000178 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0144 sec ]
 [ GrB_Vector_nvals 2.33e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1235 mwork 0 (nthreads 1 fine hash: 1) 0.000497 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00243 sec ]
 [ GrB_Vector_nvals 2.33e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00101 sec ]
 [ GxB_select 1.74e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00867 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5.31182e+06 mwork 0 (nthreads 40 fine: 82) 0.0785 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0132 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.015 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000322 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00591 sec ]
 [ GrB_reduce (A full) 3.53e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0618 sec ]
 [ GxB_select (wait: 0 zombies, 8113579 pending) (hyper to sparse) 0.00358 sec ]
 [ GrB_Vector_nvals 3.35e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2902 mwork 0 (nthreads 1 fine hash: 1) 0.0633 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00154 sec ]
 [ GrB_Vector_nvals 8.61e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00206 sec ]
 [ GxB_select 3.76e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.84e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000139 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0147 sec ]
 [ GrB_Vector_nvals 3.37e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 794 mwork 0 (nthreads 1 fine hash: 1) 0.00035 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.002 sec ]
 [ GrB_Vector_nvals 3.93e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00113 sec ]
 [ GxB_select 1.57e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.56e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.21e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 3e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00938 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.84856e+06 mwork 0 (nthreads 40 fine: 59) 0.0718 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0117 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0158 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000312 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00571 sec ]
 [ GrB_reduce (A full) 0.0006 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0602 sec ]
 [ GxB_select (wait: 0 zombies, 5540427 pending) (hyper to sparse) 0.00238 sec ]
 [ GrB_Vector_nvals 3.26e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1830 mwork 0 (nthreads 1 fine hash: 1) 0.0561 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00129 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00275 sec ]
 [ GxB_select 3.03e-05 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.59e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000111 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0142 sec ]
 [ GrB_Vector_nvals 6.65e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 502 mwork 0 (nthreads 1 fine hash: 1) 0.000254 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00172 sec ]
 [ GrB_Vector_nvals 1.79e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00199 sec ]
 [ GxB_select 1.59e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00711 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.91661e+06 mwork 0 (nthreads 40 fine: 45) 0.0591 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0102 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0148 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000459 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00414 sec ]
 [ GrB_reduce (A full) 0.00408 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0613 sec ]
 [ GxB_select (wait: 0 zombies, 3301524 pending) (hyper to sparse) 0.0014 sec ]
 [ GrB_Vector_nvals 3.41e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1201 mwork 0 (nthreads 1 fine hash: 1) 0.0505 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00118 sec ]
 [ GrB_Vector_nvals 2.53e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00267 sec ]
 [ GxB_select 2.47e-05 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.73e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.62e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0142 sec ]
 [ GrB_Vector_nvals 2.25e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 346 mwork 0 (nthreads 1 fine hash: 1) 0.000197 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00159 sec ]
 [ GrB_Vector_nvals 2.31e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00181 sec ]
 [ GxB_select 1.54e-05 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00533 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.28309e+06 mwork 0 (nthreads 34 fine: 35) 0.0664 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0091 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.016 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00029 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00401 sec ]
 [ GrB_reduce (A full) 0.00343 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0577 sec ]
 [ GxB_select (wait: 0 zombies, 1321116 pending) (hyper to sparse) 0.000626 sec ]
 [ GrB_Vector_nvals 3.02e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 684 mwork 0 (nthreads 1 fine hash: 1) 0.0334 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00239 sec ]
 [ GrB_Vector_nvals 4.43e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00268 sec ]
 [ GxB_select 2.06e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.78e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.31e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0151 sec ]
 [ GrB_Vector_nvals 4.25e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 235 mwork 0 (nthreads 1 fine hash: 1) 0.000157 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00109 sec ]
 [ GrB_Vector_nvals 3.07e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00201 sec ]
 [ GxB_select 1.58e-05 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00279 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.29484e+06 mwork 0 (nthreads 19 fine hash: 20) 0.043 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.086 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0169 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000314 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0035 sec ]
 [ GrB_reduce (A full) 0.000569 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0544 sec ]
 [ GxB_select (wait: 0 zombies, 85727 pending) (hyper to sparse) 0.000805 sec ]
 [ GrB_Vector_nvals 2.7e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 126 mwork 0 (nthreads 1 fine hash: 1) 0.00186 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000178 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000664 sec ]
 [ GxB_select 1.2e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.51e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.79e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 5.42e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7 mwork 0 (nthreads 1 fine hash: 1) 6.83e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000374 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000543 sec ]
 [ GxB_select 1.35e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000858 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 42155 mwork 0 (nthreads 1 fine hash: 1) 0.0124 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00424 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.015 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000158 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000496 sec ]
 [ GrB_reduce (A full) 4.14e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0544 sec ]
 [ GxB_select (wait: 0 zombies, 43840 pending) (hyper to sparse) 0.000415 sec ]
 [ GrB_Vector_nvals 2.46e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10 mwork 0 (nthreads 1 fine hash: 1) 0.00107 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000141 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000487 sec ]
 [ GxB_select 1.11e-05 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.34e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.56e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 6.02e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.71e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000167 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000569 sec ]
 [ GxB_select 1.36e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00043 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17357 mwork 0 (nthreads 1 fine hash: 1) 0.00555 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00277 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0125 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.42e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000271 sec ]
 [ GrB_reduce (A full) 6.31e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0539 sec ]
 [ GxB_select (wait: 0 zombies, 26594 pending) (hyper to sparse) 0.000267 sec ]
 [ GrB_Vector_nvals 3.09e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4 mwork 0 (nthreads 1 fine hash: 1) 0.000704 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000121 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0005 sec ]
 [ GxB_select 1.08e-05 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.41e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.44e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.36e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000135 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000454 sec ]
 [ GxB_select 1.35e-05 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000296 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10060 mwork 0 (nthreads 1 fine hash: 1) 0.00337 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00167 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.17e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000181 sec ]
 [ GrB_reduce (A full) 6.28e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0537 sec ]
 [ GxB_select (wait: 0 zombies, 16597 pending) (hyper to sparse) 0.000185 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000504 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 9.74e-05 sec ]
 [ GrB_Vector_nvals 1.51e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00048 sec ]
 [ GxB_select 1.09e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.28e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.44e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 2.59e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.55e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000109 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000434 sec ]
 [ GxB_select 1.39e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000224 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6455 mwork 0 (nthreads 1 fine hash: 1) 0.00223 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00139 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0127 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.08e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000131 sec ]
 [ GrB_reduce (A full) 7.45e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0543 sec ]
 [ GxB_select (wait: 0 zombies, 10182 pending) (hyper to sparse) 0.000132 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000363 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0001 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000456 sec ]
 [ GxB_select 1.11e-05 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.32e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000106 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00018 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4347 mwork 0 (nthreads 1 fine hash: 1) 0.0016 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0012 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.28e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000103 sec ]
 [ GrB_reduce (A full) 0.000104 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0535 sec ]
 [ GxB_select (wait: 0 zombies, 5857 pending) (hyper to sparse) 9.54e-05 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000265 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.85e-05 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00161 sec ]
 [ GxB_select 1.12e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000114 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2778 mwork 0 (nthreads 1 fine hash: 1) 0.00106 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00117 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.81e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.44e-05 sec ]
 [ GrB_reduce (A full) 0.000102 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0513 sec ]
 [ GxB_select (wait: 0 zombies, 3089 pending) (hyper to sparse) 7.15e-05 sec ]
 [ GrB_Vector_nvals 2.51e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000188 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.64e-05 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00046 sec ]
 [ GxB_select 1.15e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.3e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.53e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 3.05e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.44e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.34e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000433 sec ]
 [ GxB_select 1.3e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 9.24e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1760 mwork 0 (nthreads 1 fine hash: 1) 0.000704 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00106 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.82e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.79e-05 sec ]
 [ GrB_reduce (A full) 0.000106 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.045 sec ]
 [ GxB_select (wait: 0 zombies, 1340 pending) (hyper to sparse) 5.42e-05 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000122 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.29e-05 sec ]
 [ GrB_Vector_nvals 1.55e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000429 sec ]
 [ GxB_select 1.1e-05 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 5.62e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 951 mwork 0 (nthreads 1 fine hash: 1) 0.000413 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00127 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.23e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.86e-05 sec ]
 [ GrB_reduce (A full) 0.000109 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0356 sec ]
 [ GxB_select (wait: 0 zombies, 400 pending) (hyper to sparse) 4.44e-05 sec ]
 [ GrB_Vector_nvals 2.53e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 7.8e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.84e-05 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 3.33e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 339 mwork 0 (nthreads 1 fine hash: 1) 0.000181 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00081 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.04e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.9e-05 sec ]
 [ GrB_reduce (A full) 0.000117 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0301 sec ]
 [ GxB_select (wait: 0 zombies, 61 pending) (hyper to sparse) 4.28e-05 sec ]
 [ GrB_Vector_nvals 2.74e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.62e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.08e-05 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.31e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 28 mwork 0 (nthreads 1 fine hash: 1) 5.33e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000632 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.95e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.61e-06 sec ]
 [ GrB_reduce (A full) 0.00145 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 33 pending) (hyper to sparse) 4.15e-05 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.43e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.96e-05 sec ]
 [ GrB_Vector_nvals 1.56e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.26e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.71e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000577 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.76e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.12e-06 sec ]
 [ GrB_reduce (A full) 0.000338 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0292 sec ]
 [ GxB_select (wait: 0 zombies, 20 pending) (hyper to sparse) 4.11e-05 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.58e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.08e-05 sec ]
 [ GrB_Vector_nvals 1.58e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.16e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 16 mwork 0 (nthreads 1 fine hash: 1) 4.74e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000738 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.88e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.29e-06 sec ]
 [ GrB_reduce (A full) 0.00136 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 4 pending) (hyper to sparse) 3.9e-05 sec ]
 [ GrB_Vector_nvals 3.19e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.16e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.02e-05 sec ]
 [ GrB_Vector_nvals 1.42e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.21e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 3.94e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000841 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.73e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.66e-06 sec ]
 [ GrB_reduce (A full) 0.00143 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 2 pending) (hyper to sparse) 3.91e-05 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.28e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.07e-05 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.15e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.87e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000425 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.77e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.67e-06 sec ]
 [ GrB_reduce (A full) 0.00281 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 3.87e-05 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.33e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.31e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00037 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.67e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.12e-05 sec ]
 [ GrB_reduce (A full) 0.0028 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4e-05 sec ]
 [ GrB_Vector_nvals 2.53e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.31e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.14e-05 sec ]
 [ GrB_Vector_nvals 1.64e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.17e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.87e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000431 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0115 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.73e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.81e-06 sec ]
 [ GrB_reduce (A full) 0.00492 sec ]
sssp12c: threads: 40 trial:  0 source   2338012 time:    23.1805 sec

  134217726x1 GraphBLAS int32_t vector, bitmap by col
  path_lengths1, 134217726 entries

    (0,0)   2147483647
    (1,0)   92
    (2,0)   49
    (3,0)   2147483647
    (4,0)   2147483647
    (5,0)   2147483647
    (6,0)   2147483647
    (7,0)   2147483647
    (8,0)   2147483647
    (9,0)   149
    (10,0)   2147483647
    (11,0)   12
    (12,0)   2147483647
    (13,0)   2147483647
    (14,0)   6
    (15,0)   14
    (16,0)   2147483647
    (17,0)   2147483647
    (18,0)   2147483647
    (19,0)   52
    (20,0)   2147483647
    (21,0)   2147483647
    (22,0)   2147483647
    (23,0)   2147483647
    (24,0)   178
    (25,0)   31
    (26,0)   8
    (27,0)   92
    (28,0)   12
    ...
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0179 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.00241 sec ]
 [ GxB_select 1.41 sec ]
 [ GxB_select 1.41 sec ]
 [ GxB_select 2.68 sec ]
 [ GxB_select 7.73 sec ]
 [ GrB_Matrix_nvals 4.82e-07 sec ]
 [ GrB_Matrix_nvals 1.55e-07 sec ]
 [ GrB_Matrix_nvals 3.05e-07 sec ]
 [ GrB_Vector_nvals (wait: 0 zombies, 1 pending) (hyper to sparse) 2.5e-05 sec ]
 [ GrB_assign (C empty) Method 06n: C(:,:)<M> = Z ; no S 0.0241 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.51e-05 sec ]
 [ GrB_Vector_nvals 2.12e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 298 mwork 0 (nthreads 1 fine hash: 1) 7.07e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 1 pending) (hyper to sparse) add:(S<.>=S+S) (generic add: pair) 8.96e-05 sec ]
 [ GrB_Vector_nvals 1.79e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B full) add:(S<S>=S+F) 0.00796 sec ]
 [ GxB_select 1.31e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.34e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.34e-05 sec ]
 [ GrB_apply (C full) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign (full to bitmap) Method:bit4 C<M,struct> = A 0.0211 sec ]
 [ GrB_Vector_nvals 4.04e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 439476 mwork 0 (nthreads 6 fine hash: 7) 0.00739 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.91e-05 sec ]
 [ GrB_Vector_nvals 2.18e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0425 sec ]
 [ GxB_select 0.00244 sec ]
 [ GrB_Vector_nvals 2.14e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000793 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00224 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0192 sec ]
 [ GrB_Vector_nvals 2.79e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.11104e+08 mwork 0 (nthreads 40 fine: 160) 0.363 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000783 sec ]
 [ GrB_Vector_nvals 3.97e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0283 sec ]
 [ GxB_select 0.00782 sec ]
 [ GrB_Vector_nvals 2.89e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00622 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.0223 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0422 sec ]
 [ GrB_Vector_nvals 3.89e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.98273e+08 mwork 0 (nthreads 40 fine: 160) (sparse to bitmap) 1.17 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00897 sec ]
 [ GrB_Vector_nvals 9.48e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0462 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0467 sec ]
 [ GrB_Vector_nvals 2.05e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0232 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.142 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0606 sec ]
 [ GrB_Vector_nvals 3.84e-07 sec ]
 [ GrB_mxv (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A'*B, dot_product 0.728 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0451 sec ]
 [ GrB_Vector_nvals 3.74e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0445 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0456 sec ]
 [ GrB_Vector_nvals 8.31e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0187 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.142 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0568 sec ]
 [ GrB_Vector_nvals 4.02e-07 sec ]
 [ GrB_mxv (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A'*B, dot_product 0.54 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0485 sec ]
 [ GrB_Vector_nvals 3.71e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.045 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0425 sec ]
 [ GrB_Vector_nvals 2.1e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00885 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.137 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0454 sec ]
 [ GrB_Vector_nvals 6.28e-07 sec ]
 [ GrB_mxv (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A'*B, dot_product 0.36 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0434 sec ]
 [ GrB_Vector_nvals 4.1e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0442 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) 0.0427 sec ]
 [ GrB_Vector_nvals 3.59e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00556 sec ]
 [ GxB_select (M bitmap) (A bitmap) (bitmap select: lt_thunk) masker:(B:S{B}=B) 0.126 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap,struct> = A 0.0275 sec ]
 [ GrB_Vector_nvals 3.89e-07 sec ]
 [ GrB_mxv (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A'*B, dot_product 0.313 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) (B bitmap) add:(B<.>=B+B) (generic add: pair) 0.0406 sec ]
 [ GrB_Vector_nvals 4.17e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0337 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.049 sec ]
 [ GrB_Vector_nvals 1.19e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000579 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0967 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.025 sec ]
 [ GrB_Vector_nvals 5.76e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 75760 mwork 0 (nthreads 1 fine hash: 1) 0.0113 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0389 sec ]
 [ GrB_Vector_nvals 4.12e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00643 sec ]
 [ GxB_select 0.000218 sec ]
 [ GrB_Vector_nvals 1.79e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.12e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000695 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0135 sec ]
 [ GrB_Vector_nvals 3.93e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2347 mwork 0 (nthreads 1 fine hash: 1) 0.00052 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0348 sec ]
 [ GrB_Vector_nvals 5.03e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00114 sec ]
 [ GxB_select 2.19e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.81e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.95e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 2.96e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 45 mwork 0 (nthreads 1 fine hash: 1) 7.89e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0342 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000686 sec ]
 [ GxB_select 1.38e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0329 sec ]
 [ GrB_mxv (B bitmap) (can do in place: 0) C=A'*B, dot_product 5.68 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0606 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.118 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0441 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0224 sec ]
 [ GrB_reduce (A full) 0.000492 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0869 sec ]
 [ GxB_select (wait: 0 zombies, 36136093 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.129 sec ]
 [ GrB_Vector_nvals 1.88e-07 sec ]
 [ GrB_mxv (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A'*B, dot_product 0.321 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0335 sec ]
 [ GrB_Vector_nvals 4e-07 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0384 sec ]
 [ GxB_select (C bitmap) (A bitmap) (bitmap select: nonzero) (bitmap to sparse) 0.0486 sec ]
 [ GrB_Vector_nvals 1.18e-06 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00109 sec ]
 [ GxB_select (A bitmap) (bitmap select: lt_thunk) masker:(S:S{S}=B) 0.0934 sec ]
 [ GrB_apply (C bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0223 sec ]
 [ GrB_Vector_nvals 3.89e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 78303 mwork 0 (nthreads 1 fine hash: 1) 0.0217 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0325 sec ]
 [ GrB_Vector_nvals 3.52e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00727 sec ]
 [ GxB_select 0.000211 sec ]
 [ GrB_Vector_nvals 1.66e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.92e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000714 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0145 sec ]
 [ GrB_Vector_nvals 3.26e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 328 mwork 0 (nthreads 1 fine hash: 1) 0.0002 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0293 sec ]
 [ GrB_Vector_nvals 4.41e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000846 sec ]
 [ GxB_select 1.59e-05 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.49e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.32e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0117 sec ]
 [ GrB_Vector_nvals 2.12e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.79e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0294 sec ]
 [ GrB_Vector_nvals 3.78e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00046 sec ]
 [ GxB_select 1.42e-05 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0302 sec ]
 [ GrB_mxv (B bitmap) (can do in place: 0) C=A'*B, dot_product 2.37 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0453 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0343 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0102 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0115 sec ]
 [ GrB_reduce (A full) 3.37e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0765 sec ]
 [ GxB_select (wait: 0 zombies, 25798435 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.124 sec ]
 [ GrB_Vector_nvals 3.39e-07 sec ]
 [ GrB_mxv (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A'*B, dot_product (bitmap to sparse) 0.316 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0338 sec ]
 [ GrB_Vector_nvals 3.04e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00173 sec ]
 [ GxB_select 0.000466 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000321 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00141 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0128 sec ]
 [ GrB_Vector_nvals 3.84e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 14403 mwork 0 (nthreads 1 fine hash: 1) 0.00444 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0302 sec ]
 [ GrB_Vector_nvals 4.75e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0022 sec ]
 [ GxB_select 5.05e-05 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.66e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000186 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 2.16e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17 mwork 0 (nthreads 1 fine hash: 1) 7.56e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.0299 sec ]
 [ GrB_Vector_nvals 4.51e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000637 sec ]
 [ GxB_select 1.39e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0282 sec ]
 [ GrB_mxv (B bitmap) (can do in place: 0) C=A'*B, dot_product 2.28 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0446 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0269 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00756 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00892 sec ]
 [ GrB_reduce (A full) 3.64e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0716 sec ]
 [ GxB_select (wait: 0 zombies, 19422731 pending) (sparse to bitmap) (C bitmap) (A bitmap) (bitmap select: lt_thunk) 0.126 sec ]
 [ GrB_Vector_nvals 3.69e-07 sec ]
 [ GrB_mxv (C bitmap) (B bitmap) (C_in bitmap) (can do in place: 1) C=A'*B, dot_product (bitmap to sparse) 0.309 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(B<.>=S+B) (generic add: pair) 0.0328 sec ]
 [ GrB_Vector_nvals 5.03e-07 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00132 sec ]
 [ GxB_select 0.000173 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000172 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000527 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0121 sec ]
 [ GrB_Vector_nvals 4.51e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5230 mwork 0 (nthreads 1 fine hash: 1) 0.00179 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.029 sec ]
 [ GrB_Vector_nvals 3.89e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00238 sec ]
 [ GxB_select 2.85e-05 sec ]
 [ GrB_Vector_nvals 1.3e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.62e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00011 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0115 sec ]
 [ GrB_Vector_nvals 3.22e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6 mwork 0 (nthreads 1 fine hash: 1) 7.04e-05 sec ]
 [ GrB_eWiseAdd (C bitmap) (A bitmap) add:(B<.>=B+S) (generic add: pair) 0.03 sec ]
 [ GrB_Vector_nvals 7.54e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000589 sec ]
 [ GxB_select 1.36e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.0264 sec ]
 [ GrB_mxv (B bitmap) (can do in place: 0) C=A'*B, dot_product 2.24 sec ]
 [ GrB_eWiseAdd (M bitmap) (A bitmap) (B bitmap) add:(B<B>=B+B) 0.0443 sec ]
 [ GrB_apply (C bitmap) (M bitmap) (A bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit2 C<M,bitmap> = A 0.0252 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00719 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00805 sec ]
 [ GrB_reduce (A full) 3.52e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0675 sec ]
 [ GxB_select (wait: 0 zombies, 14786940 pending) (hyper to sparse) 0.00783 sec ]
 [ GrB_Vector_nvals 2.72e-07 sec ]
 [ GrB_vxm (C bitmap) (C_in bitmap) (can do in place: 1) C=A*B, saxpy (compute C sparse) axbwork 9493 mwork 0 (nthreads 1 fine hash: 1) 0.0877 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00213 sec ]
 [ GrB_Vector_nvals 4.23e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00183 sec ]
 [ GxB_select 8.46e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000107 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.000275 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.015 sec ]
 [ GrB_Vector_nvals 2.83e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2428 mwork 0 (nthreads 1 fine hash: 1) 0.000905 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00263 sec ]
 [ GrB_Vector_nvals 6.09e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00117 sec ]
 [ GxB_select 2.17e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.42e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.85e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 2.18e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.97e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00259 sec ]
 [ GrB_Vector_nvals 2.5e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000465 sec ]
 [ GxB_select 1.43e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00905 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7.85838e+06 mwork 0 (nthreads 40 fine: 120) 0.0963 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0152 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0149 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000353 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00455 sec ]
 [ GrB_reduce (A full) 3.45e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0629 sec ]
 [ GxB_select (wait: 0 zombies, 11131463 pending) (hyper to sparse) 0.0049 sec ]
 [ GrB_Vector_nvals 2.7e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4815 mwork 0 (nthreads 1 fine hash: 1) 0.0738 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00347 sec ]
 [ GrB_Vector_nvals 4.88e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00144 sec ]
 [ GxB_select 5.21e-05 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.15e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00018 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0145 sec ]
 [ GrB_Vector_nvals 3.73e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1235 mwork 0 (nthreads 1 fine hash: 1) 0.000512 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00248 sec ]
 [ GrB_Vector_nvals 1.53e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000998 sec ]
 [ GxB_select 1.82e-05 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00883 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 5.31182e+06 mwork 0 (nthreads 40 fine: 82) 0.0799 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0132 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0168 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000315 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00591 sec ]
 [ GrB_reduce (A full) 3.64e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0617 sec ]
 [ GxB_select (wait: 0 zombies, 8113579 pending) (hyper to sparse) 0.00474 sec ]
 [ GrB_Vector_nvals 2.68e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2902 mwork 0 (nthreads 1 fine hash: 1) 0.065 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00259 sec ]
 [ GrB_Vector_nvals 3.82e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00859 sec ]
 [ GxB_select 4.82e-05 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000106 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00026 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0155 sec ]
 [ GrB_Vector_nvals 2.4e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 794 mwork 0 (nthreads 1 fine hash: 1) 0.000365 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00378 sec ]
 [ GrB_Vector_nvals 3e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00842 sec ]
 [ GxB_select 2.06e-05 sec ]
 [ GrB_Vector_nvals 2.38e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.75e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 7.94e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0146 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00929 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3.84856e+06 mwork 0 (nthreads 40 fine: 59) 0.0758 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0118 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0159 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00122 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0057 sec ]
 [ GrB_reduce (A full) 0.000783 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0597 sec ]
 [ GxB_select (wait: 0 zombies, 5540427 pending) (hyper to sparse) 0.0024 sec ]
 [ GrB_Vector_nvals 3.52e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1830 mwork 0 (nthreads 1 fine hash: 1) 0.0572 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00133 sec ]
 [ GrB_Vector_nvals 3.45e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00193 sec ]
 [ GxB_select 2.9e-05 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 4.48e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 0.00011 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0149 sec ]
 [ GrB_Vector_nvals 2.18e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 502 mwork 0 (nthreads 1 fine hash: 1) 0.000253 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00172 sec ]
 [ GrB_Vector_nvals 2.44e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0012 sec ]
 [ GxB_select 1.54e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00724 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.91661e+06 mwork 0 (nthreads 40 fine: 45) 0.0604 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.0102 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0157 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000282 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0042 sec ]
 [ GrB_reduce (A full) 0.000166 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0581 sec ]
 [ GxB_select (wait: 0 zombies, 3301524 pending) (hyper to sparse) 0.00135 sec ]
 [ GrB_Vector_nvals 3.5e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1201 mwork 0 (nthreads 1 fine hash: 1) 0.0516 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00137 sec ]
 [ GrB_Vector_nvals 2.85e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00309 sec ]
 [ GxB_select 2.51e-05 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.7e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 9.9e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.014 sec ]
 [ GrB_Vector_nvals 4.99e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 346 mwork 0 (nthreads 1 fine hash: 1) 0.000199 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00157 sec ]
 [ GrB_Vector_nvals 5.1e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000842 sec ]
 [ GxB_select 1.6e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00536 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2.28309e+06 mwork 0 (nthreads 34 fine: 35) 0.069 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.00848 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0144 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000281 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00403 sec ]
 [ GrB_reduce (A full) 0.00203 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0571 sec ]
 [ GxB_select (wait: 0 zombies, 1321116 pending) (hyper to sparse) 0.000919 sec ]
 [ GrB_Vector_nvals 2.61e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 684 mwork 0 (nthreads 1 fine hash: 1) 0.0337 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000849 sec ]
 [ GrB_Vector_nvals 3.07e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00411 sec ]
 [ GxB_select 2.11e-05 sec ]
 [ GrB_Vector_nvals 1.49e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.78e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 8.53e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0142 sec ]
 [ GrB_Vector_nvals 4.06e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 235 mwork 0 (nthreads 1 fine hash: 1) 0.00016 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0011 sec ]
 [ GrB_Vector_nvals 1.73e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00197 sec ]
 [ GxB_select 1.49e-05 sec ]
 [ GrB_Vector_nvals 1.56e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00271 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1.29484e+06 mwork 0 (nthreads 19 fine hash: 20) 0.0451 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0851 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.017 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000291 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00347 sec ]
 [ GrB_reduce (A full) 0.00205 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0543 sec ]
 [ GxB_select (wait: 0 zombies, 85727 pending) (hyper to sparse) 0.000812 sec ]
 [ GrB_Vector_nvals 6.07e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 126 mwork 0 (nthreads 1 fine hash: 1) 0.00187 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000186 sec ]
 [ GrB_Vector_nvals 1.25e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000656 sec ]
 [ GxB_select 1.2e-05 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.56e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.39e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 2.68e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 7 mwork 0 (nthreads 1 fine hash: 1) 6.81e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000363 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000538 sec ]
 [ GxB_select 1.42e-05 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000861 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 42155 mwork 0 (nthreads 1 fine hash: 1) 0.0124 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00423 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0148 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000179 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.0005 sec ]
 [ GrB_reduce (A full) 4.2e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0544 sec ]
 [ GxB_select (wait: 0 zombies, 43840 pending) (hyper to sparse) 0.000416 sec ]
 [ GrB_Vector_nvals 2.76e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10 mwork 0 (nthreads 1 fine hash: 1) 0.00108 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000149 sec ]
 [ GrB_Vector_nvals 1.68e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000471 sec ]
 [ GxB_select 1.09e-05 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.36e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.6e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 2.78e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.6e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.00017 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000456 sec ]
 [ GxB_select 1.29e-05 sec ]
 [ GrB_Vector_nvals 1.38e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000435 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 17357 mwork 0 (nthreads 1 fine hash: 1) 0.00559 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0022 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0125 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.45e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000269 sec ]
 [ GrB_reduce (A full) 6.66e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0537 sec ]
 [ GxB_select (wait: 0 zombies, 26594 pending) (hyper to sparse) 0.000267 sec ]
 [ GrB_Vector_nvals 2.51e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4 mwork 0 (nthreads 1 fine hash: 1) 0.000734 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000112 sec ]
 [ GrB_Vector_nvals 1.66e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.0013 sec ]
 [ GxB_select 1.12e-05 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.33e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 5.88e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 2.42e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 6.5e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000135 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00046 sec ]
 [ GxB_select 1.26e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000295 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 10060 mwork 0 (nthreads 1 fine hash: 1) 0.00337 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00166 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.19e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000184 sec ]
 [ GrB_reduce (A full) 6.09e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0542 sec ]
 [ GxB_select (wait: 0 zombies, 16597 pending) (hyper to sparse) 0.000185 sec ]
 [ GrB_Vector_nvals 4.23e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 3 mwork 0 (nthreads 1 fine hash: 1) 0.000526 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.0001 sec ]
 [ GrB_Vector_nvals 1.47e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000461 sec ]
 [ GxB_select 1.1e-05 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.38e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.21e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0114 sec ]
 [ GrB_Vector_nvals 3.63e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.44e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 0.000109 sec ]
 [ GrB_Vector_nvals 1.27e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000425 sec ]
 [ GxB_select 1.25e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000222 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 6455 mwork 0 (nthreads 1 fine hash: 1) 0.00224 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00137 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0115 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.97e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.00013 sec ]
 [ GrB_reduce (A full) 7.46e-05 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0543 sec ]
 [ GxB_select (wait: 0 zombies, 10182 pending) (hyper to sparse) 0.000132 sec ]
 [ GrB_Vector_nvals 2.57e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.00038 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.72e-05 sec ]
 [ GrB_Vector_nvals 1.6e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000455 sec ]
 [ GxB_select 1.13e-05 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.3e-05 sec ]
 [ GxB_select (C<M>=Z via assign) (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.000106 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 2.29e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.00018 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 4347 mwork 0 (nthreads 1 fine hash: 1) 0.0016 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00119 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.33e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 0.000102 sec ]
 [ GrB_reduce (A full) 0.000115 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0535 sec ]
 [ GxB_select (wait: 0 zombies, 5857 pending) (hyper to sparse) 9.59e-05 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.000256 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.96e-05 sec ]
 [ GrB_Vector_nvals 1.58e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000426 sec ]
 [ GxB_select 1.13e-05 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 0.000113 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2778 mwork 0 (nthreads 1 fine hash: 1) 0.00106 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00117 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.87e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.48e-05 sec ]
 [ GrB_reduce (A full) 0.000103 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0516 sec ]
 [ GxB_select (wait: 0 zombies, 3089 pending) (hyper to sparse) 7.2e-05 sec ]
 [ GrB_Vector_nvals 3.28e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 0.000191 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.45e-05 sec ]
 [ GrB_Vector_nvals 1.62e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000439 sec ]
 [ GxB_select 1.11e-05 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.34e-05 sec ]
 [ GxB_select masker:(S:S{S}=S) 6.57e-05 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M,struct> = A 0.0116 sec ]
 [ GrB_Vector_nvals 2.37e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 6.22e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 8.32e-05 sec ]
 [ GrB_Vector_nvals 1.23e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000425 sec ]
 [ GxB_select 1.31e-05 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 9.28e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1760 mwork 0 (nthreads 1 fine hash: 1) 0.000703 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00104 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.43e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 5.84e-05 sec ]
 [ GrB_reduce (A full) 0.000104 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0448 sec ]
 [ GxB_select (wait: 0 zombies, 1340 pending) (hyper to sparse) 5.52e-05 sec ]
 [ GrB_Vector_nvals 2.59e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 0.00012 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.23e-05 sec ]
 [ GrB_Vector_nvals 1.43e-07 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000419 sec ]
 [ GxB_select 1.1e-05 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 5.5e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 951 mwork 0 (nthreads 1 fine hash: 1) 0.000414 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000919 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 2.3e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 3.76e-05 sec ]
 [ GrB_reduce (A full) 0.000108 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0349 sec ]
 [ GxB_select (wait: 0 zombies, 400 pending) (hyper to sparse) 4.63e-05 sec ]
 [ GrB_Vector_nvals 2.53e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 7.81e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.2e-05 sec ]
 [ GrB_Vector_nvals 1.64e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 3.31e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 339 mwork 0 (nthreads 1 fine hash: 1) 0.000182 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.00181 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.89e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.96e-05 sec ]
 [ GrB_reduce (A full) 0.000113 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0305 sec ]
 [ GxB_select (wait: 0 zombies, 61 pending) (hyper to sparse) 4.29e-05 sec ]
 [ GrB_Vector_nvals 2.48e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.74e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7.25e-05 sec ]
 [ GrB_Vector_nvals 1.71e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.32e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 28 mwork 0 (nthreads 1 fine hash: 1) 5.42e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000611 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.76e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 8.12e-06 sec ]
 [ GrB_reduce (A full) 0.000336 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0292 sec ]
 [ GxB_select (wait: 0 zombies, 33 pending) (hyper to sparse) 4.17e-05 sec ]
 [ GrB_Vector_nvals 2.64e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.44e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.83e-05 sec ]
 [ GrB_Vector_nvals 1.64e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.27e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 13 mwork 0 (nthreads 1 fine hash: 1) 4.74e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000561 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.73e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.96e-06 sec ]
 [ GrB_reduce (A full) 0.00035 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0292 sec ]
 [ GxB_select (wait: 0 zombies, 20 pending) (hyper to sparse) 4.08e-05 sec ]
 [ GrB_Vector_nvals 2.42e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.51e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 7e-05 sec ]
 [ GrB_Vector_nvals 1.66e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.22e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 16 mwork 0 (nthreads 1 fine hash: 1) 4.95e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000561 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.81e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7.56e-06 sec ]
 [ GrB_reduce (A full) 0.00177 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 4 pending) (hyper to sparse) 4.1e-05 sec ]
 [ GrB_Vector_nvals 2.44e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.58e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.97e-05 sec ]
 [ GrB_Vector_nvals 1.45e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.23e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 2 mwork 0 (nthreads 1 fine hash: 1) 4.02e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000432 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.84e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 7e-06 sec ]
 [ GrB_reduce (A full) 0.0018 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0292 sec ]
 [ GxB_select (wait: 0 zombies, 2 pending) (hyper to sparse) 4.04e-05 sec ]
 [ GrB_Vector_nvals 2.53e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.37e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.9e-05 sec ]
 [ GrB_Vector_nvals 1.64e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.22e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.94e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000414 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0116 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.68e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.72e-06 sec ]
 [ GrB_reduce (A full) 0.00279 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0293 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.05e-05 sec ]
 [ GrB_Vector_nvals 2.59e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.19e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.17e-05 sec ]
 [ GrB_eWiseAdd (B bitmap) add:(S<S>=S+B) 0.000373 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.7e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.09e-06 sec ]
 [ GrB_reduce (A full) 0.00279 sec ]
 [ GrB_assign (C empty) Method 06s: C(:,:)<M> = Z ; using S 0.0297 sec ]
 [ GxB_select (wait: 0 zombies, 1 pending) (hyper to sparse) 4.07e-05 sec ]
 [ GrB_Vector_nvals 2.66e-07 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 0 mwork 0 (nthreads 1 fine hash: 1) 5.17e-05 sec ]
 [ GrB_eWiseAdd add:(S<.>=S+S) (generic add: pair) 6.85e-05 sec ]
 [ GrB_Vector_nvals 1.62e-07 sec ]
 [ GrB_assign (C(:,:)<any mask>: C_replace early) (C empty) Method 25: (C empty)<M> = (Z bitmap) 2.19e-05 sec ]
 [ GrB_vxm (can do in place: 0) C=A*B, saxpy (compute C sparse) axbwork 1 mwork 0 (nthreads 1 fine hash: 1) 3.91e-05 sec ]
 [ GrB_eWiseAdd (wait: 0 zombies, 0 pending, jumbled) (B bitmap) add:(S<S>=S+B) 0.000568 sec ]
 [ GrB_apply (C bitmap) (shallow-op) (pure shallow) (C<M>=Z via assign) Method: bitmap_subassign Method:bit4 C<M> = A 0.0114 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 1.82e-05 sec ]
 [ GrB_assign Method 05d: (C full)<M> = scalar 6.53e-06 sec ]
 [ GrB_reduce (A full) 0.00494 sec ]
sssp13:  threads: 40 trial:  0 source   2338012 time:    36.7763 sec

  134217726x1 GraphBLAS int32_t vector, bitmap by col
  path_lengths1, 134217726 entries

    (0,0)   2147483647
    (1,0)   92
    (2,0)   49
    (3,0)   2147483647
    (4,0)   2147483647
    (5,0)   2147483647
    (6,0)   2147483647
    (7,0)   2147483647
    (8,0)   2147483647
    (9,0)   149
    (10,0)   2147483647
    (11,0)   12
    (12,0)   2147483647
    (13,0)   2147483647
    (14,0)   6
    (15,0)   14
    (16,0)   2147483647
    (17,0)   2147483647
    (18,0)   2147483647
    (19,0)   52
    (20,0)   2147483647
    (21,0)   2147483647
    (22,0)   2147483647
    (23,0)   2147483647
    (24,0)   178
    (25,0)   31
    (26,0)   8
    (27,0)   92
    (28,0)   12
    ...

40: SSSP12  time:      27.625299 sec  rate:   152.88 (delta 27)
40: SSSP12c time:      23.180459 sec  rate:   182.19 (delta 27)
40: SSSP13  time:      36.776257 sec  rate:   114.84 (delta 27)
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
 [ GxB_Matrix_import_CSR 7.9e-06 sec ]
 [ GxB_set 0.0215 sec ]
 [ GrB_Matrix_nvals 1.13e-05 sec ]
delta: 35
sources: /home/faculty/davis/GAP/GAP-urand/GAP-urand_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 4.66e-05 sec ]
read time: 67.9887 sec
 [ GrB_apply (shallow-op) 5.36 sec ]
 [ GrB_Matrix_nvals 5.35e-07 sec ]

  134217728x134217728 GraphBLAS int32_t matrix, sparse by row
  A, 4294966740 entries

    (0,8291853)   1
    (0,9845139)   123
    (0,14571172)   111
    (0,16459757)   193
    (0,27302127)   96
    (0,27726180)   228
    (0,30303523)   12
    (0,32640525)   66
    (0,33360373)   132
    (0,40782998)   157
    (0,41057943)   216
    (0,43348321)   159
    (0,50206206)   124
    (0,52510658)   101
    (0,53390371)   75
    (0,53579654)   246
    (0,54622695)   202
    (0,57696071)   78
    (0,59385788)   39
    (0,60365539)   153
    (0,64764501)   131
    (0,64889445)   241
    (0,72706136)   111
    (0,77394182)   98
    (0,82101150)   113
    (0,86364056)   243
    (0,86790574)   60
    (0,90287459)   70
    (0,104674459)   34
