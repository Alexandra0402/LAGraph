( cd build ; cmake  .. ; make --jobs=1 )
-- CMAKE build type:          Release
-- CMAKE C Flags release:     -O3 -DNDEBUG
-- CMAKE compiler ID:         GNU
-- CMAKE thread library:      -lpthread
-- CMAKE have pthreads:       1
-- CMAKE have Win32 pthreads: 
-- CMAKE have OpenMP:         TRUE
-- Automatic selection of synchronization method
-- Using OpenMP to synchronize user threads
-- CMAKE C flags:  -std=c11 -lm -Wno-pragmas  -O3 -DNDEBUG -fopenmp -DUSER_OPENMP_THREADS  -DHAVE_PTHREADS 
-- Configuring done
-- Generating done
-- Build files have been written to: /home/davis/sparse/LAGraph/Test/PageRank3/build
make[1]: Entering directory '/home/davis/sparse/LAGraph/Test/PageRank3/build'
make[2]: Entering directory '/home/davis/sparse/LAGraph/Test/PageRank3/build'
make[3]: Entering directory '/home/davis/sparse/LAGraph/Test/PageRank3/build'
Scanning dependencies of target gap_pr_test
make[3]: Leaving directory '/home/davis/sparse/LAGraph/Test/PageRank3/build'
make[3]: Entering directory '/home/davis/sparse/LAGraph/Test/PageRank3/build'
[ 50%] Building C object CMakeFiles/gap_pr_test.dir/gap_pr_test.c.o
[100%] Linking C executable gap_pr_test
make[3]: Leaving directory '/home/davis/sparse/LAGraph/Test/PageRank3/build'
[100%] Built target gap_pr_test
make[2]: Leaving directory '/home/davis/sparse/LAGraph/Test/PageRank3/build'
make[1]: Leaving directory '/home/davis/sparse/LAGraph/Test/PageRank3/build'
./build/gap_pr_test ../BinRead/west0067.grb
threads to test:  8
matrix: ../BinRead/west0067.grb
[.grb]
Reading binary file: ../BinRead/west0067.grb
 [ GxB_Matrix_import_CSR 7.04e-06 sec ]
 [ GxB_set 5.88e-06 sec ]
 [ GrB_apply (shallow-op) generic 8.99e-05 sec ]
 [ GxB_set (transpose) 2.3e-05 sec ]
 [ GrB_Matrix_nvals 1.25e-06 sec ]
 [ GrB_Matrix_dup 2.54e-06 sec ]
original # of edges: 294
 [ GrB_reduce 2.26e-05 sec ]
 [ GrB_reduce 2.11e-05 sec ]
 [ GrB_Vector_nvals 1.61e-07 sec ]
 [ GrB_Vector_nvals 7.2e-08 sec ]
 [ GrB_reduce 8.96e-06 sec ]
 [ GrB_Vector_nvals 4.9e-08 sec ]
 [ GrB_Vector_dup 1e-06 sec ]
 [ GxB_Vector_export 4.49e-07 sec ]

==========input graph: nodes: 67 edges: 294
diag entries added: 0
 [ GrB_Matrix_nvals 9.1e-08 sec ]
read time: 0.000310375 sec
# of trials: 16
chunk: 65536
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 2.45e-05 sec ]
 [ GrB_Vector_dup 9.43e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 1.47e-05 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 1.16e-05 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 7.58e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.25e-05 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0016 sec ]
 [ GrB_apply (inplace-op) 1.21e-05 sec ]
 [ GrB_reduce 4.06e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 9.02e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 6.78e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 1.27e-05 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 8.88e-06 sec ]
 [ GrB_apply (inplace-op) 2.9e-06 sec ]
 [ GrB_reduce 1.24e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.56e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.65e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.48e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.65e-06 sec ]
 [ GrB_apply (inplace-op) 2.49e-06 sec ]
 [ GrB_reduce 9.6e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.06e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.73e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.13e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.84e-06 sec ]
 [ GrB_apply (inplace-op) 2.64e-06 sec ]
 [ GrB_reduce 9.07e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.58e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.58e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.84e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.82e-06 sec ]
 [ GrB_apply (inplace-op) 2.75e-06 sec ]
 [ GrB_reduce 1.01e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.25e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.51e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.29e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.31e-06 sec ]
 [ GrB_apply (inplace-op) 2.47e-06 sec ]
 [ GrB_reduce 8.67e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.09e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.66e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.84e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.09e-06 sec ]
 [ GrB_apply (inplace-op) 2.67e-06 sec ]
 [ GrB_reduce 9.32e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.39e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.41e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.93e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.45e-06 sec ]
 [ GrB_apply (inplace-op) 2.47e-06 sec ]
 [ GrB_reduce 8.59e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.93e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.56e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.01e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.09e-06 sec ]
 [ GrB_apply (inplace-op) 2.65e-06 sec ]
 [ GrB_reduce 8.38e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.35e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.68e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.71e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.06e-06 sec ]
 [ GrB_apply (inplace-op) 2.75e-06 sec ]
 [ GrB_reduce 8.4e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.23e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.33e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.86e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.42e-06 sec ]
 [ GrB_apply (inplace-op) 2.49e-06 sec ]
 [ GrB_reduce 7.61e-07 sec ]
warmup (3f):      0.002 (threads: 8)

Method 3f:

--------------------------- nthreads:  8
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 7.89e-06 sec ]
 [ GrB_Vector_dup 1.23e-06 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 5.15e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.67e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.67e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.48e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.12e-06 sec ]
 [ GrB_apply (inplace-op) 2.77e-06 sec ]
 [ GrB_reduce 1e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.63e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.71e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.97e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.2e-06 sec ]
 [ GrB_apply (inplace-op) 2.59e-06 sec ]
 [ GrB_reduce 8.74e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.13e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.5e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.98e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.23e-06 sec ]
 [ GrB_apply (inplace-op) 2.43e-06 sec ]
 [ GrB_reduce 7.8e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.14e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.77e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.82e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.94e-06 sec ]
 [ GrB_apply (inplace-op) 2.59e-06 sec ]
 [ GrB_reduce 8.59e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.67e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.61e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.14e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.48e-06 sec ]
 [ GrB_apply (inplace-op) 2.48e-06 sec ]
 [ GrB_reduce 8.17e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.04e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.51e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.06e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.12e-06 sec ]
 [ GrB_apply (inplace-op) 2.63e-06 sec ]
 [ GrB_reduce 9.18e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.29e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.74e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.69e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.92e-06 sec ]
 [ GrB_apply (inplace-op) 2.7e-06 sec ]
 [ GrB_reduce 7.69e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.25e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.37e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.92e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.28e-06 sec ]
 [ GrB_apply (inplace-op) 2.44e-06 sec ]
 [ GrB_reduce 8.58e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.01e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.65e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.93e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.76e-06 sec ]
 [ GrB_apply (inplace-op) 2.63e-06 sec ]
 [ GrB_reduce 8.9e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.55e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.7e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.86e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.05e-06 sec ]
 [ GrB_apply (inplace-op) 2.59e-06 sec ]
 [ GrB_reduce 8.34e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.15e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.58e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.9e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.18e-06 sec ]
 [ GrB_apply (inplace-op) 2.49e-06 sec ]
 [ GrB_reduce 8.4e-07 sec ]
trial:  0 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 7.25e-06 sec ]
 [ GrB_Vector_dup 5.75e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.6e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.66e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.15e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.38e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.07e-06 sec ]
 [ GrB_apply (inplace-op) 2.87e-06 sec ]
 [ GrB_reduce 9.48e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.32e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.38e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.26e-06 sec ]
 [ GrB_apply (inplace-op) 2.47e-06 sec ]
 [ GrB_reduce 8.05e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.08e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.57e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.91e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.8e-06 sec ]
 [ GrB_apply (inplace-op) 2.62e-06 sec ]
 [ GrB_reduce 9.26e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.56e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.56e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 1.15e-05 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.3e-06 sec ]
 [ GrB_apply (inplace-op) 2.62e-06 sec ]
 [ GrB_reduce 8.03e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.16e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.45e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.09e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.16e-06 sec ]
 [ GrB_apply (inplace-op) 2.49e-06 sec ]
 [ GrB_reduce 8.65e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.11e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.7e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.78e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.97e-06 sec ]
 [ GrB_apply (inplace-op) 2.62e-06 sec ]
 [ GrB_reduce 7.63e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.36e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.43e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.95e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.3e-06 sec ]
 [ GrB_apply (inplace-op) 2.46e-06 sec ]
 [ GrB_reduce 7.92e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.91e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.68e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.07e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.99e-06 sec ]
 [ GrB_apply (inplace-op) 2.65e-06 sec ]
 [ GrB_reduce 7.71e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.3e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.76e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.68e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.88e-06 sec ]
 [ GrB_apply (inplace-op) 2.75e-06 sec ]
 [ GrB_reduce 8.59e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.17e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.33e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.88e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.24e-06 sec ]
 [ GrB_apply (inplace-op) 2.45e-06 sec ]
 [ GrB_reduce 8.47e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.01e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.31e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.92e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.82e-06 sec ]
 [ GrB_apply (inplace-op) 2.61e-06 sec ]
 [ GrB_reduce 8.13e-07 sec ]
trial:  1 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 7.17e-06 sec ]
 [ GrB_Vector_dup 6.07e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.63e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.36e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.26e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.15e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.6e-06 sec ]
 [ GrB_apply (inplace-op) 2.55e-06 sec ]
 [ GrB_reduce 1.02e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.93e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.68e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.13e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.99e-06 sec ]
 [ GrB_apply (inplace-op) 2.59e-06 sec ]
 [ GrB_reduce 8.93e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.3e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.76e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.66e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.85e-06 sec ]
 [ GrB_apply (inplace-op) 2.71e-06 sec ]
 [ GrB_reduce 7.94e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.48e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.47e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.03e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.4e-06 sec ]
 [ GrB_apply (inplace-op) 2.52e-06 sec ]
 [ GrB_reduce 7.81e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.05e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.59e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.94e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.9e-06 sec ]
 [ GrB_apply (inplace-op) 2.62e-06 sec ]
 [ GrB_reduce 7.72e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.54e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.68e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.79e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.08e-06 sec ]
 [ GrB_apply (inplace-op) 2.56e-06 sec ]
 [ GrB_reduce 8.59e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.16e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.54e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.93e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.17e-06 sec ]
 [ GrB_apply (inplace-op) 2.47e-06 sec ]
 [ GrB_reduce 8.51e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.16e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.6e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.73e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.1e-06 sec ]
 [ GrB_apply (inplace-op) 2.62e-06 sec ]
 [ GrB_reduce 8.84e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.41e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.43e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.96e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.28e-06 sec ]
 [ GrB_apply (inplace-op) 2.49e-06 sec ]
 [ GrB_reduce 8.45e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.97e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.58e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.05e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.07e-06 sec ]
 [ GrB_apply (inplace-op) 2.61e-06 sec ]
 [ GrB_reduce 9.54e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.32e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.74e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.65e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.07e-06 sec ]
 [ GrB_apply (inplace-op) 2.72e-06 sec ]
 [ GrB_reduce 9.06e-07 sec ]
trial:  2 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 7.02e-06 sec ]
 [ GrB_Vector_dup 5.29e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.69e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.11e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.27e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.33e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.28e-06 sec ]
 [ GrB_apply (inplace-op) 2.57e-06 sec ]
 [ GrB_reduce 1.02e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.2e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.71e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.8e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.05e-06 sec ]
 [ GrB_apply (inplace-op) 2.56e-06 sec ]
 [ GrB_reduce 7.46e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.39e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.55e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 1.12e-05 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.59e-06 sec ]
 [ GrB_apply (inplace-op) 2.5e-06 sec ]
 [ GrB_reduce 8.79e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.09e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.76e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.24e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.03e-06 sec ]
 [ GrB_apply (inplace-op) 2.67e-06 sec ]
 [ GrB_reduce 9.11e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.27e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.71e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.62e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.89e-06 sec ]
 [ GrB_apply (inplace-op) 2.72e-06 sec ]
 [ GrB_reduce 8.13e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.24e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.33e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.85e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.29e-06 sec ]
 [ GrB_apply (inplace-op) 2.47e-06 sec ]
 [ GrB_reduce 7.73e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.04e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.58e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.95e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.85e-06 sec ]
 [ GrB_apply (inplace-op) 2.62e-06 sec ]
 [ GrB_reduce 7.8e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.53e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.6e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.75e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.12e-06 sec ]
 [ GrB_apply (inplace-op) 2.54e-06 sec ]
 [ GrB_reduce 7.74e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.08e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.52e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.96e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.13e-06 sec ]
 [ GrB_apply (inplace-op) 2.44e-06 sec ]
 [ GrB_reduce 7.82e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.15e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.65e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.73e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.05e-06 sec ]
 [ GrB_apply (inplace-op) 2.61e-06 sec ]
 [ GrB_reduce 7.78e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.33e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.43e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.92e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.28e-06 sec ]
 [ GrB_apply (inplace-op) 2.47e-06 sec ]
 [ GrB_reduce 7.93e-07 sec ]
trial:  3 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.67e-06 sec ]
 [ GrB_Vector_dup 4.94e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.46e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.39e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.54e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.15e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.9e-06 sec ]
 [ GrB_apply (inplace-op) 2.74e-06 sec ]
 [ GrB_reduce 1.02e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.55e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.65e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.8e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.99e-06 sec ]
 [ GrB_apply (inplace-op) 2.57e-06 sec ]
 [ GrB_reduce 8.82e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.36e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.7e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.44e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.28e-06 sec ]
 [ GrB_apply (inplace-op) 2.52e-06 sec ]
 [ GrB_reduce 7.97e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.19e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.69e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.88e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.91e-06 sec ]
 [ GrB_apply (inplace-op) 2.6e-06 sec ]
 [ GrB_reduce 8.17e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.3e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.45e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.95e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.29e-06 sec ]
 [ GrB_apply (inplace-op) 2.52e-06 sec ]
 [ GrB_reduce 8.2e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.53e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.06e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.97e-06 sec ]
 [ GrB_apply (inplace-op) 2.62e-06 sec ]
 [ GrB_reduce 8.81e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.27e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.74e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.67e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.9e-06 sec ]
 [ GrB_apply (inplace-op) 2.72e-06 sec ]
 [ GrB_reduce 8.14e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.22e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.31e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 1.54e-05 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 8.34e-06 sec ]
 [ GrB_apply (inplace-op) 2.78e-06 sec ]
 [ GrB_reduce 1.01e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.94e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.94e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.58e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.02e-06 sec ]
 [ GrB_apply (inplace-op) 2.58e-06 sec ]
 [ GrB_reduce 9.16e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.29e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.68e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.78e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.9e-06 sec ]
 [ GrB_apply (inplace-op) 2.69e-06 sec ]
 [ GrB_reduce 9.3e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.17e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.41e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.79e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.24e-06 sec ]
 [ GrB_apply (inplace-op) 2.38e-06 sec ]
 [ GrB_reduce 8.44e-07 sec ]
trial:  4 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.99e-06 sec ]
 [ GrB_Vector_dup 6.26e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.45e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.51e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.38e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.19e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.19e-06 sec ]
 [ GrB_apply (inplace-op) 2.74e-06 sec ]
 [ GrB_reduce 1.03e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.3e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.38e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 1.21e-05 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.62e-06 sec ]
 [ GrB_apply (inplace-op) 2.55e-06 sec ]
 [ GrB_reduce 9.18e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.99e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.61e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.24e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.94e-06 sec ]
 [ GrB_apply (inplace-op) 2.6e-06 sec ]
 [ GrB_reduce 8.78e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.2e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.83e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.7e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.75e-06 sec ]
 [ GrB_apply (inplace-op) 2.72e-06 sec ]
 [ GrB_reduce 8.57e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.19e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.39e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.86e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.31e-06 sec ]
 [ GrB_apply (inplace-op) 2.39e-06 sec ]
 [ GrB_reduce 8.31e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.91e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.56e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.82e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.77e-06 sec ]
 [ GrB_apply (inplace-op) 2.53e-06 sec ]
 [ GrB_reduce 8.61e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.42e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.53e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.73e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.97e-06 sec ]
 [ GrB_apply (inplace-op) 2.5e-06 sec ]
 [ GrB_reduce 7.56e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.97e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.46e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.87e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.09e-06 sec ]
 [ GrB_apply (inplace-op) 2.41e-06 sec ]
 [ GrB_reduce 8.54e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.04e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.67e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.76e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.89e-06 sec ]
 [ GrB_apply (inplace-op) 2.6e-06 sec ]
 [ GrB_reduce 8.18e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.29e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.45e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.9e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.32e-06 sec ]
 [ GrB_apply (inplace-op) 2.43e-06 sec ]
 [ GrB_reduce 8.98e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.88e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.63e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.98e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.04e-06 sec ]
 [ GrB_apply (inplace-op) 2.54e-06 sec ]
 [ GrB_reduce 7.44e-07 sec ]
trial:  5 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.92e-06 sec ]
 [ GrB_Vector_dup 5.66e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.52e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.48e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.21e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.16e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.25e-06 sec ]
 [ GrB_apply (inplace-op) 2.65e-06 sec ]
 [ GrB_reduce 1.01e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.44e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.6e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.2e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.24e-06 sec ]
 [ GrB_apply (inplace-op) 2.48e-06 sec ]
 [ GrB_reduce 9.24e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.02e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.69e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.77e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.98e-06 sec ]
 [ GrB_apply (inplace-op) 2.53e-06 sec ]
 [ GrB_reduce 9.11e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.28e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.42e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.88e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.32e-06 sec ]
 [ GrB_apply (inplace-op) 2.39e-06 sec ]
 [ GrB_reduce 7.77e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.92e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.61e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.08e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.93e-06 sec ]
 [ GrB_apply (inplace-op) 2.54e-06 sec ]
 [ GrB_reduce 8.06e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.16e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.65e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.7e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.01e-06 sec ]
 [ GrB_apply (inplace-op) 2.65e-06 sec ]
 [ GrB_reduce 7.86e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.15e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.29e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.81e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.29e-06 sec ]
 [ GrB_apply (inplace-op) 2.39e-06 sec ]
 [ GrB_reduce 8.02e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.8e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.65e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.88e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.84e-06 sec ]
 [ GrB_apply (inplace-op) 2.56e-06 sec ]
 [ GrB_reduce 7.68e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.49e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.5e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.8e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.75e-06 sec ]
 [ GrB_apply (inplace-op) 2.51e-06 sec ]
 [ GrB_reduce 7.63e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.03e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.53e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.89e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.05e-06 sec ]
 [ GrB_apply (inplace-op) 2.39e-06 sec ]
 [ GrB_reduce 7.87e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.02e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.6e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.69e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.02e-06 sec ]
 [ GrB_apply (inplace-op) 2.51e-06 sec ]
 [ GrB_reduce 9.21e-07 sec ]
trial:  6 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.78e-06 sec ]
 [ GrB_Vector_dup 5.58e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.88e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.07e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.45e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 1.14e-05 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.6e-06 sec ]
 [ GrB_apply (inplace-op) 2.52e-06 sec ]
 [ GrB_reduce 9.66e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.02e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.61e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.2e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.84e-06 sec ]
 [ GrB_apply (inplace-op) 2.59e-06 sec ]
 [ GrB_reduce 8.74e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.47e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.52e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.79e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.13e-06 sec ]
 [ GrB_apply (inplace-op) 2.49e-06 sec ]
 [ GrB_reduce 7.92e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.04e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.52e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.98e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.1e-06 sec ]
 [ GrB_apply (inplace-op) 2.4e-06 sec ]
 [ GrB_reduce 8.57e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.13e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.67e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.73e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.05e-06 sec ]
 [ GrB_apply (inplace-op) 2.51e-06 sec ]
 [ GrB_reduce 8.91e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.27e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.44e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.91e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.29e-06 sec ]
 [ GrB_apply (inplace-op) 2.43e-06 sec ]
 [ GrB_reduce 8.53e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.85e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.69e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.04e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7e-06 sec ]
 [ GrB_apply (inplace-op) 2.52e-06 sec ]
 [ GrB_reduce 8.99e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.07e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.67e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.57e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.84e-06 sec ]
 [ GrB_apply (inplace-op) 2.64e-06 sec ]
 [ GrB_reduce 8.58e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.2e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.3e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.72e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.24e-06 sec ]
 [ GrB_apply (inplace-op) 2.39e-06 sec ]
 [ GrB_reduce 9.95e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.88e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.6e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.95e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.8e-06 sec ]
 [ GrB_apply (inplace-op) 2.54e-06 sec ]
 [ GrB_reduce 7.68e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.44e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.56e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.63e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.14e-06 sec ]
 [ GrB_apply (inplace-op) 2.49e-06 sec ]
 [ GrB_reduce 8.43e-07 sec ]
trial:  7 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.63e-06 sec ]
 [ GrB_Vector_dup 5.71e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.54e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.67e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.61e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.62e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.31e-06 sec ]
 [ GrB_apply (inplace-op) 2.7e-06 sec ]
 [ GrB_reduce 9.04e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.27e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.71e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.77e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.85e-06 sec ]
 [ GrB_apply (inplace-op) 2.69e-06 sec ]
 [ GrB_reduce 8.87e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.23e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.33e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.83e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.26e-06 sec ]
 [ GrB_apply (inplace-op) 2.38e-06 sec ]
 [ GrB_reduce 8.55e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.88e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.59e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.85e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.83e-06 sec ]
 [ GrB_apply (inplace-op) 2.54e-06 sec ]
 [ GrB_reduce 7.64e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.47e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.61e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.84e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.99e-06 sec ]
 [ GrB_apply (inplace-op) 2.48e-06 sec ]
 [ GrB_reduce 7.87e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.04e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.48e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.9e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.06e-06 sec ]
 [ GrB_apply (inplace-op) 2.4e-06 sec ]
 [ GrB_reduce 8.09e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.11e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.65e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.82e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.94e-06 sec ]
 [ GrB_apply (inplace-op) 2.54e-06 sec ]
 [ GrB_reduce 8.14e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.33e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.46e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.85e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.27e-06 sec ]
 [ GrB_apply (inplace-op) 2.38e-06 sec ]
 [ GrB_reduce 8.62e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.9e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.61e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.02e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.97e-06 sec ]
 [ GrB_apply (inplace-op) 2.4e-06 sec ]
 [ GrB_reduce 8.38e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.22e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.75e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.68e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.89e-06 sec ]
 [ GrB_apply (inplace-op) 2.66e-06 sec ]
 [ GrB_reduce 8.55e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.21e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.31e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.61e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.26e-06 sec ]
 [ GrB_apply (inplace-op) 2.39e-06 sec ]
 [ GrB_reduce 8.05e-07 sec ]
trial:  8 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 7.14e-06 sec ]
 [ GrB_Vector_dup 6.05e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.45e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.62e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.24e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.06e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.22e-06 sec ]
 [ GrB_apply (inplace-op) 2.72e-06 sec ]
 [ GrB_reduce 8.95e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.39e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.4e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.97e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.31e-06 sec ]
 [ GrB_apply (inplace-op) 2.42e-06 sec ]
 [ GrB_reduce 9.2e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.89e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.59e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.02e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7e-06 sec ]
 [ GrB_apply (inplace-op) 2.58e-06 sec ]
 [ GrB_reduce 9.65e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.25e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.75e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.6e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.79e-06 sec ]
 [ GrB_apply (inplace-op) 2.65e-06 sec ]
 [ GrB_reduce 8.61e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.16e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.38e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.76e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.22e-06 sec ]
 [ GrB_apply (inplace-op) 2.36e-06 sec ]
 [ GrB_reduce 7.88e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.91e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.57e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.93e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.7e-06 sec ]
 [ GrB_apply (inplace-op) 2.53e-06 sec ]
 [ GrB_reduce 8.72e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.41e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.51e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.81e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7e-06 sec ]
 [ GrB_apply (inplace-op) 2.52e-06 sec ]
 [ GrB_reduce 9.36e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.03e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.42e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.91e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.06e-06 sec ]
 [ GrB_apply (inplace-op) 2.41e-06 sec ]
 [ GrB_reduce 8e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.07e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.63e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.68e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.05e-06 sec ]
 [ GrB_apply (inplace-op) 2.52e-06 sec ]
 [ GrB_reduce 7.86e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.38e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.35e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.83e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.26e-06 sec ]
 [ GrB_apply (inplace-op) 2.39e-06 sec ]
 [ GrB_reduce 8.65e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.87e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.55e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.94e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.22e-06 sec ]
 [ GrB_apply (inplace-op) 2.69e-06 sec ]
 [ GrB_reduce 9.12e-07 sec ]
trial:  9 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.78e-06 sec ]
 [ GrB_Vector_dup 4.8e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.45e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.52e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.16e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.2e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.29e-06 sec ]
 [ GrB_apply (inplace-op) 2.65e-06 sec ]
 [ GrB_reduce 8.31e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.04e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.43e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.01e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.07e-06 sec ]
 [ GrB_apply (inplace-op) 2.47e-06 sec ]
 [ GrB_reduce 1e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.99e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.59e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.73e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.93e-06 sec ]
 [ GrB_apply (inplace-op) 2.55e-06 sec ]
 [ GrB_reduce 8.68e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.32e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.49e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.82e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.29e-06 sec ]
 [ GrB_apply (inplace-op) 2.39e-06 sec ]
 [ GrB_reduce 7.64e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.84e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.66e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.06e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.91e-06 sec ]
 [ GrB_apply (inplace-op) 2.57e-06 sec ]
 [ GrB_reduce 7.71e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.23e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.65e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.57e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.98e-06 sec ]
 [ GrB_apply (inplace-op) 2.65e-06 sec ]
 [ GrB_reduce 7.71e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.15e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.23e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.75e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.19e-06 sec ]
 [ GrB_apply (inplace-op) 2.39e-06 sec ]
 [ GrB_reduce 9.07e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.96e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.46e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.84e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.81e-06 sec ]
 [ GrB_apply (inplace-op) 2.55e-06 sec ]
 [ GrB_reduce 7.52e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.52e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.56e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.62e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.98e-06 sec ]
 [ GrB_apply (inplace-op) 2.48e-06 sec ]
 [ GrB_reduce 9.25e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.96e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.37e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.88e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.06e-06 sec ]
 [ GrB_apply (inplace-op) 2.38e-06 sec ]
 [ GrB_reduce 8.75e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 1.07e-05 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.91e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.91e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.94e-06 sec ]
 [ GrB_apply (inplace-op) 2.66e-06 sec ]
 [ GrB_reduce 8.95e-07 sec ]
trial: 10 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.76e-06 sec ]
 [ GrB_Vector_dup 5.32e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.84e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.15e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.35e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.95e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.41e-06 sec ]
 [ GrB_apply (inplace-op) 2.55e-06 sec ]
 [ GrB_reduce 9.54e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.04e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.51e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.94e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.83e-06 sec ]
 [ GrB_apply (inplace-op) 2.57e-06 sec ]
 [ GrB_reduce 8.68e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.36e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.52e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.84e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.02e-06 sec ]
 [ GrB_apply (inplace-op) 2.53e-06 sec ]
 [ GrB_reduce 8.61e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.03e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.49e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 1.15e-05 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 8.89e-06 sec ]
 [ GrB_apply (inplace-op) 2.84e-06 sec ]
 [ GrB_reduce 1.09e-06 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.39e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.84e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.29e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 1.11e-05 sec ]
 [ GrB_apply (inplace-op) 3.11e-06 sec ]
 [ GrB_reduce 9.92e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.76e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.89e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.39e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.2e-06 sec ]
 [ GrB_apply (inplace-op) 2.63e-06 sec ]
 [ GrB_reduce 8.61e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.05e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.46e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.94e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.07e-06 sec ]
 [ GrB_apply (inplace-op) 2.47e-06 sec ]
 [ GrB_reduce 7.64e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.14e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.58e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.78e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.9e-06 sec ]
 [ GrB_apply (inplace-op) 2.55e-06 sec ]
 [ GrB_reduce 7.97e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.41e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.36e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.9e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.32e-06 sec ]
 [ GrB_apply (inplace-op) 2.45e-06 sec ]
 [ GrB_reduce 7.47e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.88e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.55e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.99e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.29e-06 sec ]
 [ GrB_apply (inplace-op) 2.71e-06 sec ]
 [ GrB_reduce 9.53e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.43e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.72e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.89e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.95e-06 sec ]
 [ GrB_apply (inplace-op) 2.7e-06 sec ]
 [ GrB_reduce 9.13e-07 sec ]
trial: 11 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.93e-06 sec ]
 [ GrB_Vector_dup 6.4e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.66e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.13e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.29e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.16e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.26e-06 sec ]
 [ GrB_apply (inplace-op) 2.62e-06 sec ]
 [ GrB_reduce 8.25e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.11e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.59e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.82e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.03e-06 sec ]
 [ GrB_apply (inplace-op) 2.55e-06 sec ]
 [ GrB_reduce 8.68e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.19e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.44e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.89e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.29e-06 sec ]
 [ GrB_apply (inplace-op) 2.49e-06 sec ]
 [ GrB_reduce 7.91e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.86e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.62e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.01e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.06e-06 sec ]
 [ GrB_apply (inplace-op) 2.56e-06 sec ]
 [ GrB_reduce 9.13e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.22e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.74e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.6e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.89e-06 sec ]
 [ GrB_apply (inplace-op) 2.67e-06 sec ]
 [ GrB_reduce 8.78e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.22e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.44e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.8e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.19e-06 sec ]
 [ GrB_apply (inplace-op) 2.43e-06 sec ]
 [ GrB_reduce 7.82e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.93e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.61e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.79e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.84e-06 sec ]
 [ GrB_apply (inplace-op) 2.64e-06 sec ]
 [ GrB_reduce 9.14e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.48e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.58e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.77e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.99e-06 sec ]
 [ GrB_apply (inplace-op) 2.53e-06 sec ]
 [ GrB_reduce 9.48e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.98e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.49e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.9e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.05e-06 sec ]
 [ GrB_apply (inplace-op) 2.4e-06 sec ]
 [ GrB_reduce 8.35e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 1.18e-05 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.94e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.07e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.12e-06 sec ]
 [ GrB_apply (inplace-op) 2.65e-06 sec ]
 [ GrB_reduce 9.18e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.51e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.51e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.97e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 8.33e-06 sec ]
 [ GrB_apply (inplace-op) 3.72e-06 sec ]
 [ GrB_reduce 1.35e-06 sec ]
trial: 12 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 9.86e-06 sec ]
 [ GrB_Vector_dup 8.51e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.72e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.67e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.51e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.89e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.15e-06 sec ]
 [ GrB_apply (inplace-op) 2.88e-06 sec ]
 [ GrB_reduce 8.77e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.59e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.52e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.85e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.13e-06 sec ]
 [ GrB_apply (inplace-op) 2.49e-06 sec ]
 [ GrB_reduce 8.51e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.11e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.54e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.9e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.03e-06 sec ]
 [ GrB_apply (inplace-op) 2.44e-06 sec ]
 [ GrB_reduce 9.43e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.17e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.61e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.74e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.02e-06 sec ]
 [ GrB_apply (inplace-op) 2.57e-06 sec ]
 [ GrB_reduce 8.87e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.32e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.41e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.84e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.26e-06 sec ]
 [ GrB_apply (inplace-op) 2.48e-06 sec ]
 [ GrB_reduce 7.87e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.82e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.61e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.04e-06 sec ]
 [ GrB_apply (inplace-op) 2.58e-06 sec ]
 [ GrB_reduce 8.5e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.26e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.77e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.65e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.8e-06 sec ]
 [ GrB_apply (inplace-op) 2.67e-06 sec ]
 [ GrB_reduce 7.78e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.15e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.25e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.96e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.2e-06 sec ]
 [ GrB_apply (inplace-op) 2.44e-06 sec ]
 [ GrB_reduce 7.79e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.54e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.95e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 1.09e-05 sec ]
 [ GrB_apply (inplace-op) 2.69e-06 sec ]
 [ GrB_reduce 9.32e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.66e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.68e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.91e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.06e-06 sec ]
 [ GrB_apply (inplace-op) 2.49e-06 sec ]
 [ GrB_reduce 8.86e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.47e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.93e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.12e-06 sec ]
 [ GrB_apply (inplace-op) 2.39e-06 sec ]
 [ GrB_reduce 9.01e-07 sec ]
trial: 13 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.9e-06 sec ]
 [ GrB_Vector_dup 4.55e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.46e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.57e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.25e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.09e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.97e-06 sec ]
 [ GrB_apply (inplace-op) 2.87e-06 sec ]
 [ GrB_reduce 9.61e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.29e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.34e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.81e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.27e-06 sec ]
 [ GrB_apply (inplace-op) 2.4e-06 sec ]
 [ GrB_reduce 8.05e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.88e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.36e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.92e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.8e-06 sec ]
 [ GrB_apply (inplace-op) 2.57e-06 sec ]
 [ GrB_reduce 8.35e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.43e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.51e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.71e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.99e-06 sec ]
 [ GrB_apply (inplace-op) 2.54e-06 sec ]
 [ GrB_reduce 8.82e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.99e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.43e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.9e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.03e-06 sec ]
 [ GrB_apply (inplace-op) 2.44e-06 sec ]
 [ GrB_reduce 7.92e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.09e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.71e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.69e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.76e-06 sec ]
 [ GrB_apply (inplace-op) 2.56e-06 sec ]
 [ GrB_reduce 7.63e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.3e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.35e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.89e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.22e-06 sec ]
 [ GrB_apply (inplace-op) 2.42e-06 sec ]
 [ GrB_reduce 7.88e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.88e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.53e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.94e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.98e-06 sec ]
 [ GrB_apply (inplace-op) 2.57e-06 sec ]
 [ GrB_reduce 8.85e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 1.04e-05 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.86e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.84e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.94e-06 sec ]
 [ GrB_apply (inplace-op) 2.72e-06 sec ]
 [ GrB_reduce 8.6e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.24e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.31e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.79e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.25e-06 sec ]
 [ GrB_apply (inplace-op) 2.43e-06 sec ]
 [ GrB_reduce 9.59e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.89e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.65e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.84e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.82e-06 sec ]
 [ GrB_apply (inplace-op) 2.57e-06 sec ]
 [ GrB_reduce 8.96e-07 sec ]
trial: 14 time:     0.0006 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 7.04e-06 sec ]
 [ GrB_Vector_dup 5.4e-07 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 4.55e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 6.18e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 6.28e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.98e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.4e-06 sec ]
 [ GrB_apply (inplace-op) 2.55e-06 sec ]
 [ GrB_reduce 9.17e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.96e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.65e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.02e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.98e-06 sec ]
 [ GrB_apply (inplace-op) 2.61e-06 sec ]
 [ GrB_reduce 8.04e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.22e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.72e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.65e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.87e-06 sec ]
 [ GrB_apply (inplace-op) 2.66e-06 sec ]
 [ GrB_reduce 9.3e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.19e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.36e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.78e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.21e-06 sec ]
 [ GrB_apply (inplace-op) 2.42e-06 sec ]
 [ GrB_reduce 8.75e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.87e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.62e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.83e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.8e-06 sec ]
 [ GrB_apply (inplace-op) 2.58e-06 sec ]
 [ GrB_reduce 8.69e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.48e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.55e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.77e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.9e-06 sec ]
 [ GrB_apply (inplace-op) 2.51e-06 sec ]
 [ GrB_reduce 9.21e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.16e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.43e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.85e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.08e-06 sec ]
 [ GrB_apply (inplace-op) 2.45e-06 sec ]
 [ GrB_reduce 9.37e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.06e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.58e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.66e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 1.03e-05 sec ]
 [ GrB_apply (inplace-op) 2.73e-06 sec ]
 [ GrB_reduce 8.34e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.42e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.46e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 8.13e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 7.34e-06 sec ]
 [ GrB_apply (inplace-op) 2.4e-06 sec ]
 [ GrB_reduce 8.09e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 6.91e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.61e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.99e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.92e-06 sec ]
 [ GrB_apply (inplace-op) 2.52e-06 sec ]
 [ GrB_reduce 9.07e-07 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 7.17e-06 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 4.79e-06 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 7.66e-06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 6.82e-06 sec ]
 [ GrB_apply (inplace-op) 2.65e-06 sec ]
 [ GrB_reduce 8.4e-07 sec ]
trial: 15 time:     0.0006 sec
3f:  8: avg time:      0.001 (sec), rate:      5.448 iters: 11

  67x1 GraphBLAS float vector, sparse by col:
  PR, 67 entries

    (0,0)    0.0233754
    (1,0)    0.0139228
    (2,0)    0.0123471
    (3,0)    0.0145696
    (4,0)    0.014201
    (5,0)    0.0100776
    (6,0)    0.0128739
    (7,0)    0.0143955
    (8,0)    0.0110162
    (9,0)    0.0110455
    (10,0)    0.0119336
    (11,0)    0.00723155
    (12,0)    0.0188687
    (13,0)    0.0141571
    (14,0)    0.0174838
    (15,0)    0.0170369
    (16,0)    0.0120391
    (17,0)    0.0219961
    (18,0)    0.0195227
    (19,0)    0.0394481
    (20,0)    0.0111962
    (21,0)    0.00901421
    (22,0)    0.0140042
    (23,0)    0.0122487
    (24,0)    0.0153409
    (25,0)    0.0135281
    (26,0)    0.0158792
    (27,0)    0.0149652
    (28,0)    0.0144109
    (29,0)    0.0137657
    ...
