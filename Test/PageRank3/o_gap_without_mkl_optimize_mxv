MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 1.05e-05 sec ]
 [ GxB_set 2.77e-06 sec ]
 [ GrB_apply (shallow-op) generic 9.51 sec ]
 [ GxB_set (transpose) 71 sec ]
 [ GrB_Matrix_nvals 1.2e-05 sec ]
 [ GrB_Matrix_dup 2.06 sec ]
original # of edges: 4223264644
 [ GrB_reduce 19.9 sec ]
 [ GrB_reduce wait (zombies: 71143742, pending: 0) 0.398 sec ]
 [ GrB_Vector_nvals 5.55e-07 sec ]
 [ GrB_Vector_nvals 5.1e-08 sec ]
Matrix has 71143742 empty rows
Matrix has 71143742 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 71143742) generic add 24.7 sec ]
 [ GrB_Vector_nvals 9.44e-07 sec ]
 [ GrB_Vector_dup 0.066 sec ]
 [ GxB_Vector_export 2.98e-06 sec ]

==========input graph: nodes: 134217726 edges: 4223264644
diag entries added: 71143742
 [ GrB_Matrix_nvals 6.21e-07 sec ]
read time: 195.472 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.072 sec ]
 [ GrB_Vector_dup 0.0647 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0718 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0725 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.26 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0289 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.0087 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.25 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.019 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0323 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.26 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00886 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0188 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.26 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.25 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.25 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0186 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.26 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0247 sec ]
 [ GrB_apply (inplace-op) 0.0188 sec ]
 [ GrB_reduce 0.00882 sec ]
info 0
iters 7
warmup (3f):     23.762 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0724 sec ]
 [ GrB_Vector_dup 0.0647 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0717 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0722 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.56381) (cblas_saxpy) 3.65 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00886 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0328 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.4935) (cblas_saxpy) 3.58 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.55029) (cblas_saxpy) 3.64 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.026 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.55604) (cblas_saxpy) 3.65 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.025 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00884 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.49006) (cblas_saxpy) 3.58 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.55544) (cblas_saxpy) 3.65 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0258 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.48283) (cblas_saxpy) 3.57 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
info 0
iters 7
warmup (3f):     26.287 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    23.7432 sec
trial:  1 time:    23.7474 sec
3f: 40: avg time:     23.745 (sec), rate:   1244.997 iters: 7

--------------------------- nthreads: 20
trial:  0 time:    24.8926 sec
trial:  1 time:    24.8429 sec
3f: 20: avg time:     24.868 (sec), rate:   1188.802 iters: 7

  134217726x1 GraphBLAS float vector, sparse by col:
  PR, 134217726 entries

    (0,0)    1.11759e-09
    (1,0)    1.21291e-09
    (2,0)    1.21297e-09
    (3,0)    1.11759e-09
    (4,0)    1.11759e-09
    (5,0)    1.11759e-09
    (6,0)    1.11759e-09
    (7,0)    1.11759e-09
    (8,0)    1.11759e-09
    (9,0)    1.52821e-09
    (10,0)    1.11759e-09
    (11,0)    2.92415e-09
    (12,0)    1.11759e-09
    (13,0)    1.11759e-09
    (14,0)    1.68495e-09
    (15,0)    1.60349e-09
    (16,0)    1.11759e-09
    (17,0)    1.11759e-09
    (18,0)    1.11759e-09
    (19,0)    1.6263e-09
    (20,0)    1.11759e-09
    (21,0)    1.11759e-09
    (22,0)    1.11759e-09
    (23,0)    1.11759e-09
    (24,0)    1.1994e-09
    (25,0)    1.45084e-09
    (26,0)    9.28271e-09
    (27,0)    1.35811e-09
    (28,0)    2.13301e-09
    (29,0)    1.52126e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    26.2917 sec
trial:  1 time:    26.1052 sec
3f: 40: avg time:     26.198 (sec), rate:   1128.421 iters: 7

--------------------------- nthreads: 20
trial:  0 time:    26.2016 sec
trial:  1 time:    26.1430 sec
3f: 20: avg time:     26.172 (sec), rate:   1129.548 iters: 7

  134217726x1 GraphBLAS float vector, sparse by col:
  PR, 134217726 entries

    (0,0)    1.11759e-09
    (1,0)    1.21291e-09
    (2,0)    1.21297e-09
    (3,0)    1.11759e-09
    (4,0)    1.11759e-09
    (5,0)    1.11759e-09
    (6,0)    1.11759e-09
    (7,0)    1.11759e-09
    (8,0)    1.11759e-09
    (9,0)    1.52822e-09
    (10,0)    1.11759e-09
    (11,0)    2.92418e-09
    (12,0)    1.11759e-09
    (13,0)    1.11759e-09
    (14,0)    1.68496e-09
    (15,0)    1.60349e-09
    (16,0)    1.11759e-09
    (17,0)    1.11759e-09
    (18,0)    1.11759e-09
    (19,0)    1.62631e-09
    (20,0)    1.11759e-09
    (21,0)    1.11759e-09
    (22,0)    1.11759e-09
    (23,0)    1.11759e-09
    (24,0)    1.1994e-09
    (25,0)    1.45085e-09
    (26,0)    9.28282e-09
    (27,0)    1.35812e-09
    (28,0)    2.13303e-09
    (29,0)    1.52126e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
 [ GxB_Matrix_import_CSR 1.42e-05 sec ]
 [ GxB_set 3.3e-06 sec ]
 [ GrB_apply (shallow-op) generic 6.87 sec ]
 [ GxB_set (transpose) 76.2 sec ]
 [ GrB_Matrix_nvals 2e-06 sec ]
 [ GrB_Matrix_dup 2.11 sec ]
original # of edges: 4294966740
 [ GrB_reduce 24.4 sec ]
 [ GrB_reduce 0.334 sec ]
 [ GrB_Vector_nvals 4e-07 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_reduce 24.3 sec ]
 [ GrB_Vector_nvals 6.16e-07 sec ]
 [ GrB_Vector_dup 0.0656 sec ]
 [ GxB_Vector_export 1.65e-06 sec ]

==========input graph: nodes: 134217728 edges: 4294966740
diag entries added: 0
 [ GrB_Matrix_nvals 6.41e-07 sec ]
read time: 201.205 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0708 sec ]
 [ GrB_Vector_dup 0.0652 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0766 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0709 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0288 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00888 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.019 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00888 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0192 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0247 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0255 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00884 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0188 sec ]
 [ GrB_reduce 0.00934 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0187 sec ]
 [ GrB_reduce 0.00886 sec ]
info 0
iters 6
warmup (3f):     29.351 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0715 sec ]
 [ GrB_Vector_dup 0.0652 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0776 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0717 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.03097) (cblas_saxpy) 5.12 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.04256) (cblas_saxpy) 5.13 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.019 sec ]
 [ GrB_reduce 0.0098 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.01896) (cblas_saxpy) 5.11 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0251 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.99877) (cblas_saxpy) 5.09 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.025 sec ]
 [ GrB_apply (inplace-op) 0.0188 sec ]
 [ GrB_reduce 0.0103 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0339 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0186 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.03033) (cblas_saxpy) 5.12 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.019 sec ]
 [ GrB_reduce 0.00896 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.97269) (cblas_saxpy) 5.06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.019 sec ]
 [ GrB_reduce 0.00865 sec ]
info 0
iters 6
warmup (3f):     31.502 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    29.3544 sec
trial:  1 time:    29.4166 sec
3f: 40: avg time:     29.385 (sec), rate:    876.957 iters: 6

--------------------------- nthreads: 20
trial:  0 time:    30.4187 sec
trial:  1 time:    30.3789 sec
3f: 20: avg time:     30.399 (sec), rate:    847.724 iters: 6

  134217728x1 GraphBLAS float vector, sparse by col:
  PR, 134217728 entries

    (0,0)    8.25985e-09
    (1,0)    7.23841e-09
    (2,0)    8.28931e-09
    (3,0)    7.71854e-09
    (4,0)    8.2541e-09
    (5,0)    9.05594e-09
    (6,0)    8.01646e-09
    (7,0)    7.62977e-09
    (8,0)    8.79943e-09
    (9,0)    7.01721e-09
    (10,0)    7.44634e-09
    (11,0)    7.82501e-09
    (12,0)    9.04071e-09
    (13,0)    4.5071e-09
    (14,0)    6.88887e-09
    (15,0)    5.91511e-09
    (16,0)    9.80993e-09
    (17,0)    7.49341e-09
    (18,0)    7.61506e-09
    (19,0)    6.4787e-09
    (20,0)    6.24013e-09
    (21,0)    7.03518e-09
    (22,0)    7.64445e-09
    (23,0)    7.88618e-09
    (24,0)    6.68367e-09
    (25,0)    8.81481e-09
    (26,0)    7.06337e-09
    (27,0)    5.87844e-09
    (28,0)    7.54203e-09
    (29,0)    8.4015e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    31.4945 sec
trial:  1 time:    31.5195 sec
3f: 40: avg time:     31.507 (sec), rate:    817.907 iters: 6

--------------------------- nthreads: 20
trial:  0 time:    31.6269 sec
trial:  1 time:    31.5880 sec
3f: 20: avg time:     31.607 (sec), rate:    815.308 iters: 6

  134217728x1 GraphBLAS float vector, sparse by col:
  PR, 134217728 entries

    (0,0)    8.25985e-09
    (1,0)    7.23841e-09
    (2,0)    8.28931e-09
    (3,0)    7.71854e-09
    (4,0)    8.2541e-09
    (5,0)    9.05594e-09
    (6,0)    8.01646e-09
    (7,0)    7.62977e-09
    (8,0)    8.79943e-09
    (9,0)    7.01721e-09
    (10,0)    7.44634e-09
    (11,0)    7.82501e-09
    (12,0)    9.04071e-09
    (13,0)    4.5071e-09
    (14,0)    6.88888e-09
    (15,0)    5.91511e-09
    (16,0)    9.80993e-09
    (17,0)    7.49341e-09
    (18,0)    7.61506e-09
    (19,0)    6.4787e-09
    (20,0)    6.24013e-09
    (21,0)    7.03518e-09
    (22,0)    7.64445e-09
    (23,0)    7.88618e-09
    (24,0)    6.68367e-09
    (25,0)    8.81481e-09
    (26,0)    7.06337e-09
    (27,0)    5.87844e-09
    (28,0)    7.54203e-09
    (29,0)    8.4015e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
 [ GxB_Matrix_import_CSR 1.37e-05 sec ]
 [ GxB_set 3.31e-06 sec ]
 [ GrB_apply (shallow-op) generic 1.02 sec ]
 [ GxB_set (transpose) 21 sec ]
 [ GrB_Matrix_nvals 2.29e-06 sec ]
 [ GrB_Matrix_dup 0.73 sec ]
original # of edges: 1468364884
 [ GrB_reduce 4.62 sec ]
 [ GrB_reduce wait (zombies: 25889280, pending: 0) 0.159 sec ]
 [ GrB_Vector_nvals 5.38e-07 sec ]
 [ GrB_Vector_nvals 5.1e-08 sec ]
Matrix has 21475137 empty rows
Matrix has 25889280 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 27438232) generic add 5.58 sec ]
 [ GrB_Vector_nvals 5.26e-07 sec ]
 [ GrB_Vector_dup 0.0307 sec ]
 [ GxB_Vector_export 2.49e-06 sec ]

==========input graph: nodes: 61578415 edges: 1468364884
diag entries added: 27438232
 [ GrB_Matrix_nvals 6.28e-07 sec ]
read time: 69.245 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.035 sec ]
 [ GrB_Vector_dup 0.0309 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00795 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0358 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.034 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.796 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0137 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00453 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00826 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.796 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00798 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.796 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00818 sec ]
 [ GrB_reduce 0.00549 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.796 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00477 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.794 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00819 sec ]
 [ GrB_reduce 0.00478 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00793 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.798 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0126 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00454 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00797 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.793 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0135 sec ]
 [ GrB_apply (inplace-op) 0.00819 sec ]
 [ GrB_reduce 0.00542 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00797 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.792 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00483 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.796 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0113 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.796 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00454 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.792 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00468 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.796 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00455 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.792 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.799 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00839 sec ]
 [ GrB_reduce 0.00456 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.794 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00857 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.795 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0113 sec ]
 [ GrB_apply (inplace-op) 0.00838 sec ]
 [ GrB_reduce 0.00455 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.794 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.0089 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.795 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00864 sec ]
 [ GrB_reduce 0.00457 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00797 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.797 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00837 sec ]
 [ GrB_reduce 0.00453 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.794 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00832 sec ]
 [ GrB_reduce 0.00453 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.791 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00469 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.797 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0125 sec ]
 [ GrB_apply (inplace-op) 0.00838 sec ]
 [ GrB_reduce 0.00451 sec ]
info 0
iters 22
warmup (3f):     18.646 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0345 sec ]
 [ GrB_Vector_dup 0.0312 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00878 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0353 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.034 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.994316) (cblas_saxpy) 1.04 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00815 sec ]
 [ GrB_reduce 0.00454 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00793 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.966841) (cblas_saxpy) 1.01 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00818 sec ]
 [ GrB_reduce 0.00456 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00816 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.957079) (cblas_saxpy) 0.998 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00815 sec ]
 [ GrB_reduce 0.00453 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.968368) (cblas_saxpy) 1.01 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00453 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.903721) (cblas_saxpy) 0.945 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0122 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00456 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0148 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.928709) (cblas_saxpy) 0.971 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0133 sec ]
 [ GrB_apply (inplace-op) 0.00841 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.942643) (cblas_saxpy) 0.984 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00815 sec ]
 [ GrB_reduce 0.00454 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00814 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.944036) (cblas_saxpy) 0.986 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0123 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00543 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00793 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.939928) (cblas_saxpy) 0.981 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0124 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00455 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00797 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.946664) (cblas_saxpy) 0.988 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00454 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00793 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.972904) (cblas_saxpy) 1.01 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00819 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0148 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00819 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.98324) (cblas_saxpy) 1.02 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00958 sec ]
 [ GrB_reduce 0.0047 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0154 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00797 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.948227) (cblas_saxpy) 0.99 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00818 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.977068) (cblas_saxpy) 1.02 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0118 sec ]
 [ GrB_apply (inplace-op) 0.0082 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.896386) (cblas_saxpy) 0.938 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00818 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.909956) (cblas_saxpy) 0.951 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0119 sec ]
 [ GrB_apply (inplace-op) 0.0082 sec ]
 [ GrB_reduce 0.00467 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.923254) (cblas_saxpy) 0.964 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0132 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00453 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0151 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00836 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.941303) (cblas_saxpy) 0.983 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0117 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00455 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.905013) (cblas_saxpy) 0.946 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00863 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.985735) (cblas_saxpy) 1.03 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0123 sec ]
 [ GrB_apply (inplace-op) 0.00838 sec ]
 [ GrB_reduce 0.00472 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.971589) (cblas_saxpy) 1.01 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00453 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00797 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.916963) (cblas_saxpy) 0.958 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00835 sec ]
 [ GrB_reduce 0.00454 sec ]
info 0
iters 22
warmup (3f):     22.903 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    18.6562 sec
trial:  1 time:    18.6768 sec
3f: 40: avg time:     18.667 (sec), rate:   1730.585 iters: 22

--------------------------- nthreads: 20
trial:  0 time:    19.6002 sec
trial:  1 time:    19.5630 sec
3f: 20: avg time:     19.582 (sec), rate:   1649.714 iters: 22

  61578415x1 GraphBLAS float vector, sparse by col:
  PR, 61578415 entries

    (0,0)    2.43592e-09
    (1,0)    2.43592e-09
    (2,0)    2.43592e-09
    (3,0)    2.43592e-09
    (4,0)    2.43592e-09
    (5,0)    2.43592e-09
    (6,0)    2.43592e-09
    (7,0)    2.43592e-09
    (8,0)    2.43592e-09
    (9,0)    2.43592e-09
    (10,0)    2.43592e-09
    (11,0)    2.43592e-09
    (12,0)    4.28999e-08
    (13,0)    1.2926e-08
    (14,0)    9.12961e-09
    (15,0)    2.06278e-08
    (16,0)    2.98579e-08
    (17,0)    1.53682e-08
    (18,0)    6.56924e-09
    (19,0)    2.43592e-09
    (20,0)    3.5879e-08
    (21,0)    4.50838e-08
    (22,0)    2.62213e-08
    (23,0)    9.79812e-09
    (24,0)    9.27327e-09
    (25,0)    2.43592e-09
    (26,0)    2.43592e-09
    (27,0)    2.43592e-09
    (28,0)    2.43592e-09
    (29,0)    2.43592e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    23.1688 sec
trial:  1 time:    23.4814 sec
3f: 40: avg time:     23.325 (sec), rate:   1384.944 iters: 22

--------------------------- nthreads: 20
trial:  0 time:    22.1870 sec
trial:  1 time:    22.0593 sec
3f: 20: avg time:     22.123 (sec), rate:   1460.190 iters: 22

  61578415x1 GraphBLAS float vector, sparse by col:
  PR, 61578415 entries

    (0,0)    2.43592e-09
    (1,0)    2.43592e-09
    (2,0)    2.43592e-09
    (3,0)    2.43592e-09
    (4,0)    2.43592e-09
    (5,0)    2.43592e-09
    (6,0)    2.43592e-09
    (7,0)    2.43592e-09
    (8,0)    2.43592e-09
    (9,0)    2.43592e-09
    (10,0)    2.43592e-09
    (11,0)    2.43592e-09
    (12,0)    4.28998e-08
    (13,0)    1.29259e-08
    (14,0)    9.12961e-09
    (15,0)    2.06278e-08
    (16,0)    2.98579e-08
    (17,0)    1.53682e-08
    (18,0)    6.56924e-09
    (19,0)    2.43592e-09
    (20,0)    3.5879e-08
    (21,0)    4.50838e-08
    (22,0)    2.62212e-08
    (23,0)    9.79811e-09
    (24,0)    9.27327e-09
    (25,0)    2.43592e-09
    (26,0)    2.43592e-09
    (27,0)    2.43592e-09
    (28,0)    2.43592e-09
    (29,0)    2.43592e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
 [ GxB_Matrix_import_CSR 1.29e-05 sec ]
 [ GxB_set 2.58e-06 sec ]
 [ GrB_apply (shallow-op) generic 1.31 sec ]
 [ GxB_set (transpose) 4.8 sec ]
 [ GrB_Matrix_nvals 1.97e-06 sec ]
 [ GrB_Matrix_dup 0.947 sec ]
original # of edges: 1930292948
 [ GrB_reduce 0.829 sec ]
 [ GrB_reduce wait (zombies: 438, pending: 0) 0.181 sec ]
 [ GrB_Vector_nvals 5.12e-07 sec ]
 [ GrB_Vector_nvals 5.1e-08 sec ]
Matrix has 7236618 empty rows
Matrix has 438 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 7236964) generic add 1.96 sec ]
 [ GrB_Vector_nvals 3.34e-07 sec ]
 [ GrB_Vector_dup 0.0249 sec ]
 [ GxB_Vector_export 2.07e-06 sec ]

==========input graph: nodes: 50636151 edges: 1930292948
diag entries added: 7236964
 [ GrB_Matrix_nvals 5.01e-07 sec ]
read time: 51.0159 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0268 sec ]
 [ GrB_Vector_dup 0.0254 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00639 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0291 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0117 sec ]
 [ GrB_apply (inplace-op) 0.00682 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00897 sec ]
 [ GrB_apply (inplace-op) 0.00768 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0125 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00806 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00906 sec ]
 [ GrB_apply (inplace-op) 0.00661 sec ]
 [ GrB_reduce 0.00413 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00747 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00909 sec ]
 [ GrB_apply (inplace-op) 0.0067 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0129 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00905 sec ]
 [ GrB_apply (inplace-op) 0.00684 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00662 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00897 sec ]
 [ GrB_apply (inplace-op) 0.00651 sec ]
 [ GrB_reduce 0.00405 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00639 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.367 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00889 sec ]
 [ GrB_apply (inplace-op) 0.0066 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00753 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00915 sec ]
 [ GrB_apply (inplace-op) 0.00651 sec ]
 [ GrB_reduce 0.00387 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00904 sec ]
 [ GrB_apply (inplace-op) 0.00681 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00909 sec ]
 [ GrB_apply (inplace-op) 0.00655 sec ]
 [ GrB_reduce 0.00387 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.371 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00954 sec ]
 [ GrB_apply (inplace-op) 0.00696 sec ]
 [ GrB_reduce 0.00413 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00732 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00912 sec ]
 [ GrB_apply (inplace-op) 0.0065 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0136 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00717 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.37 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00893 sec ]
 [ GrB_apply (inplace-op) 0.00678 sec ]
 [ GrB_reduce 0.00503 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0122 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00662 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00909 sec ]
 [ GrB_apply (inplace-op) 0.00675 sec ]
 [ GrB_reduce 0.00385 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00636 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0105 sec ]
 [ GrB_apply (inplace-op) 0.0066 sec ]
 [ GrB_reduce 0.00387 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00733 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00952 sec ]
 [ GrB_apply (inplace-op) 0.00677 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00636 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00988 sec ]
 [ GrB_apply (inplace-op) 0.00661 sec ]
 [ GrB_reduce 0.00388 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00664 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00896 sec ]
 [ GrB_apply (inplace-op) 0.00649 sec ]
 [ GrB_reduce 0.00404 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00892 sec ]
 [ GrB_apply (inplace-op) 0.00679 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0127 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00706 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00899 sec ]
 [ GrB_apply (inplace-op) 0.00691 sec ]
 [ GrB_reduce 0.00388 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0122 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00639 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00909 sec ]
 [ GrB_apply (inplace-op) 0.00662 sec ]
 [ GrB_reduce 0.00406 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00906 sec ]
 [ GrB_apply (inplace-op) 0.00651 sec ]
 [ GrB_reduce 0.00407 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00905 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00683 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0105 sec ]
 [ GrB_apply (inplace-op) 0.00656 sec ]
 [ GrB_reduce 0.00387 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00762 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00891 sec ]
 [ GrB_apply (inplace-op) 0.0068 sec ]
 [ GrB_reduce 0.00388 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0127 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00687 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00911 sec ]
 [ GrB_apply (inplace-op) 0.00671 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00637 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00982 sec ]
 [ GrB_apply (inplace-op) 0.00662 sec ]
 [ GrB_reduce 0.00403 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00898 sec ]
 [ GrB_apply (inplace-op) 0.00648 sec ]
 [ GrB_reduce 0.00388 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00892 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00392 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00697 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00908 sec ]
 [ GrB_apply (inplace-op) 0.00652 sec ]
 [ GrB_reduce 0.00387 sec ]
info 0
iters 30
warmup (3f):     12.321 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0275 sec ]
 [ GrB_Vector_dup 0.0254 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0064 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.029 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0277 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.468378) (cblas_saxpy) 0.503 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00949 sec ]
 [ GrB_apply (inplace-op) 0.00662 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0126 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00685 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.446244) (cblas_saxpy) 0.481 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00945 sec ]
 [ GrB_apply (inplace-op) 0.00653 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.438941) (cblas_saxpy) 0.474 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0095 sec ]
 [ GrB_apply (inplace-op) 0.00687 sec ]
 [ GrB_reduce 0.00501 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424455) (cblas_saxpy) 0.459 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00947 sec ]
 [ GrB_apply (inplace-op) 0.00654 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.431659) (cblas_saxpy) 0.467 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0103 sec ]
 [ GrB_apply (inplace-op) 0.00735 sec ]
 [ GrB_reduce 0.00391 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0131 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00892 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.428867) (cblas_saxpy) 0.463 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00944 sec ]
 [ GrB_apply (inplace-op) 0.00677 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00637 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.423472) (cblas_saxpy) 0.458 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00951 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00391 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00717 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.432682) (cblas_saxpy) 0.467 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00944 sec ]
 [ GrB_apply (inplace-op) 0.0067 sec ]
 [ GrB_reduce 0.00387 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00639 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.432924) (cblas_saxpy) 0.467 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00935 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00737 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.440922) (cblas_saxpy) 0.474 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00961 sec ]
 [ GrB_apply (inplace-op) 0.00681 sec ]
 [ GrB_reduce 0.00385 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00652 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.42247) (cblas_saxpy) 0.457 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00933 sec ]
 [ GrB_apply (inplace-op) 0.00665 sec ]
 [ GrB_reduce 0.00497 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0124 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00664 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.431565) (cblas_saxpy) 0.465 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00959 sec ]
 [ GrB_apply (inplace-op) 0.00656 sec ]
 [ GrB_reduce 0.00387 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00698 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424943) (cblas_saxpy) 0.459 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00934 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00486 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00664 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.434795) (cblas_saxpy) 0.468 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00944 sec ]
 [ GrB_apply (inplace-op) 0.00653 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00651 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424633) (cblas_saxpy) 0.459 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00933 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00661 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.422543) (cblas_saxpy) 0.456 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00962 sec ]
 [ GrB_apply (inplace-op) 0.00678 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00637 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.425236) (cblas_saxpy) 0.459 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00933 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00643 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.431987) (cblas_saxpy) 0.465 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00961 sec ]
 [ GrB_apply (inplace-op) 0.00678 sec ]
 [ GrB_reduce 0.00385 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.423286) (cblas_saxpy) 0.457 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0101 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00699 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.430266) (cblas_saxpy) 0.463 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00959 sec ]
 [ GrB_apply (inplace-op) 0.00679 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00637 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.430974) (cblas_saxpy) 0.466 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00946 sec ]
 [ GrB_apply (inplace-op) 0.00665 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.438238) (cblas_saxpy) 0.471 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00944 sec ]
 [ GrB_apply (inplace-op) 0.00746 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00656 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.422261) (cblas_saxpy) 0.457 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00933 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00409 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.428548) (cblas_saxpy) 0.463 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00959 sec ]
 [ GrB_apply (inplace-op) 0.00661 sec ]
 [ GrB_reduce 0.00494 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00758 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424863) (cblas_saxpy) 0.458 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00951 sec ]
 [ GrB_apply (inplace-op) 0.00662 sec ]
 [ GrB_reduce 0.00481 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.431421) (cblas_saxpy) 0.466 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00758 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00654 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.469929) (cblas_saxpy) 0.505 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00933 sec ]
 [ GrB_apply (inplace-op) 0.00688 sec ]
 [ GrB_reduce 0.00476 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.013 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00644 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.428603) (cblas_saxpy) 0.462 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00945 sec ]
 [ GrB_apply (inplace-op) 0.00675 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0127 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00804 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.43323) (cblas_saxpy) 0.467 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00948 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00395 sec ]
info 0
iters 29
warmup (3f):     14.776 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    12.3004 sec
trial:  1 time:    12.2985 sec
3f: 40: avg time:     12.299 (sec), rate:   4708.246 iters: 30

--------------------------- nthreads: 20
trial:  0 time:    12.3479 sec
trial:  1 time:    12.3167 sec
3f: 20: avg time:     12.332 (sec), rate:   4695.696 iters: 30

  50636151x1 GraphBLAS float vector, sparse by col:
  PR, 50636151 entries

    (0,0)    3.04448e-09
    (1,0)    3.04448e-09
    (2,0)    3.04448e-09
    (3,0)    3.04448e-09
    (4,0)    3.04448e-09
    (5,0)    3.04448e-09
    (6,0)    3.04448e-09
    (7,0)    3.04448e-09
    (8,0)    3.04448e-09
    (9,0)    3.04448e-09
    (10,0)    5.78254e-09
    (11,0)    3.31792e-09
    (12,0)    3.04448e-09
    (13,0)    3.04448e-09
    (14,0)    3.04448e-09
    (15,0)    3.04448e-09
    (16,0)    3.04448e-09
    (17,0)    3.04448e-09
    (18,0)    3.06634e-09
    (19,0)    3.06634e-09
    (20,0)    3.06634e-09
    (21,0)    3.06634e-09
    (22,0)    3.06634e-09
    (23,0)    3.06634e-09
    (24,0)    3.05126e-09
    (25,0)    3.05126e-09
    (26,0)    3.05126e-09
    (27,0)    3.05126e-09
    (28,0)    3.05126e-09
    (29,0)    3.05126e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    14.7108 sec
trial:  1 time:    14.6448 sec
3f: 40: avg time:     14.678 (sec), rate:   3813.818 iters: 29

--------------------------- nthreads: 20
trial:  0 time:    14.3853 sec
trial:  1 time:    14.3818 sec
3f: 20: avg time:     14.384 (sec), rate:   3891.840 iters: 29

  50636151x1 GraphBLAS float vector, sparse by col:
  PR, 50636151 entries

    (0,0)    3.04448e-09
    (1,0)    3.04448e-09
    (2,0)    3.04448e-09
    (3,0)    3.04448e-09
    (4,0)    3.04448e-09
    (5,0)    3.04448e-09
    (6,0)    3.04448e-09
    (7,0)    3.04448e-09
    (8,0)    3.04448e-09
    (9,0)    3.04448e-09
    (10,0)    5.78254e-09
    (11,0)    3.31792e-09
    (12,0)    3.04448e-09
    (13,0)    3.04448e-09
    (14,0)    3.04448e-09
    (15,0)    3.04448e-09
    (16,0)    3.04448e-09
    (17,0)    3.04448e-09
    (18,0)    3.06634e-09
    (19,0)    3.06634e-09
    (20,0)    3.06634e-09
    (21,0)    3.06634e-09
    (22,0)    3.06634e-09
    (23,0)    3.06634e-09
    (24,0)    3.05126e-09
    (25,0)    3.05126e-09
    (26,0)    3.05126e-09
    (27,0)    3.05126e-09
    (28,0)    3.05126e-09
    (29,0)    3.05126e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
 [ GxB_Matrix_import_CSR 1.41e-05 sec ]
 [ GxB_set 3.01e-06 sec ]
 [ GrB_apply (shallow-op) generic 0.0651 sec ]
 [ GxB_set (transpose) 0.63 sec ]
 [ GrB_Matrix_nvals 1.23e-06 sec ]
 [ GrB_Matrix_dup 0.0391 sec ]
original # of edges: 57708624
 [ GrB_reduce 0.23 sec ]
 [ GrB_reduce 0.0208 sec ]
 [ GrB_Vector_nvals 6.99e-07 sec ]
 [ GrB_Vector_nvals 6.5e-08 sec ]
 [ GrB_reduce 0.189 sec ]
 [ GrB_Vector_nvals 5.51e-07 sec ]
 [ GrB_Vector_dup 0.0118 sec ]
 [ GxB_Vector_export 2.37e-06 sec ]

==========input graph: nodes: 23947347 edges: 57708624
diag entries added: 0
 [ GrB_Matrix_nvals 6.8e-07 sec ]
read time: 2.25987 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0173 sec ]
 [ GrB_Vector_dup 0.0136 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00319 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0202 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0197 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0074 sec ]
 [ GrB_apply (inplace-op) 0.00277 sec ]
 [ GrB_reduce 0.00216 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00573 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0196 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00405 sec ]
 [ GrB_apply (inplace-op) 0.00353 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00609 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00303 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0196 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00408 sec ]
 [ GrB_apply (inplace-op) 0.00411 sec ]
 [ GrB_reduce 0.00215 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00677 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00406 sec ]
 [ GrB_reduce 0.00226 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00665 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00265 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00291 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0056 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00341 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00407 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00227 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00564 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00213 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00587 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00262 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00225 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00553 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00312 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00216 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00554 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00406 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00226 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00213 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00557 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00325 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00405 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00232 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0202 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00282 sec ]
 [ GrB_reduce 0.00217 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00554 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00263 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00424 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00406 sec ]
 [ GrB_apply (inplace-op) 0.00314 sec ]
 [ GrB_reduce 0.00211 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00352 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00399 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00553 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00263 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00507 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00263 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0044 sec ]
 [ GrB_apply (inplace-op) 0.00291 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00567 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00313 sec ]
 [ GrB_reduce 0.0021 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00625 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00263 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00405 sec ]
 [ GrB_apply (inplace-op) 0.00402 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00654 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00263 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.02 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00289 sec ]
 [ GrB_reduce 0.00241 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00323 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00407 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00345 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00372 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00406 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00215 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00557 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00276 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00632 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00309 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00407 sec ]
 [ GrB_apply (inplace-op) 0.00357 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00676 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00265 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.02 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00405 sec ]
 [ GrB_apply (inplace-op) 0.00407 sec ]
 [ GrB_reduce 0.00225 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00678 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00289 sec ]
 [ GrB_reduce 0.00234 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00342 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0197 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00409 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00424 sec ]
 [ GrB_apply (inplace-op) 0.00282 sec ]
 [ GrB_reduce 0.00213 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00613 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00263 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00526 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00226 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00391 sec ]
 [ GrB_reduce 0.00213 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00557 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00406 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00296 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00274 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00213 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00568 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00262 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00405 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00626 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00217 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00352 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00408 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00213 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00561 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00262 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00405 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00226 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0065 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00265 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00405 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00213 sec ]
info 0
iters 39
warmup (3f):      1.539 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0137 sec ]
 [ GrB_Vector_dup 0.0112 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00316 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0136 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0136 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0910503) (cblas_saxpy) 0.103 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00448 sec ]
 [ GrB_apply (inplace-op) 0.00289 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00685 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00265 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0517165) (cblas_saxpy) 0.0688 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00463 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00563 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0027 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.050929) (cblas_saxpy) 0.0684 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00445 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00219 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00557 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00377 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0520899) (cblas_saxpy) 0.0677 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00448 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00564 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0514044) (cblas_saxpy) 0.0681 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00571 sec ]
 [ GrB_apply (inplace-op) 0.00289 sec ]
 [ GrB_reduce 0.00213 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00571 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00262 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0509119) (cblas_saxpy) 0.0673 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.00291 sec ]
 [ GrB_reduce 0.00227 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00327 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0495335) (cblas_saxpy) 0.0666 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0045 sec ]
 [ GrB_apply (inplace-op) 0.00282 sec ]
 [ GrB_reduce 0.00217 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0057 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0513198) (cblas_saxpy) 0.0669 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00448 sec ]
 [ GrB_apply (inplace-op) 0.00392 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0514144) (cblas_saxpy) 0.0671 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00458 sec ]
 [ GrB_apply (inplace-op) 0.00282 sec ]
 [ GrB_reduce 0.00217 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00567 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0518019) (cblas_saxpy) 0.069 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0057 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00226 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00647 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0498851) (cblas_saxpy) 0.0667 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00342 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00558 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00262 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0520906) (cblas_saxpy) 0.0681 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00531 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00225 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0525434) (cblas_saxpy) 0.0722 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00315 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00263 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0510032) (cblas_saxpy) 0.0667 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00569 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00619 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00265 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0525523) (cblas_saxpy) 0.0697 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00446 sec ]
 [ GrB_apply (inplace-op) 0.00308 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00558 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0524382) (cblas_saxpy) 0.0695 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00449 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00333 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.050603) (cblas_saxpy) 0.0674 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0056 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00558 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00262 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.051826) (cblas_saxpy) 0.069 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00448 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00239 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0506513) (cblas_saxpy) 0.0664 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.00282 sec ]
 [ GrB_reduce 0.00298 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00558 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00262 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0522348) (cblas_saxpy) 0.069 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00468 sec ]
 [ GrB_apply (inplace-op) 0.00282 sec ]
 [ GrB_reduce 0.00227 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00265 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0508259) (cblas_saxpy) 0.0666 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00446 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00263 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0524454) (cblas_saxpy) 0.0682 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00464 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00227 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00568 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.051596) (cblas_saxpy) 0.0697 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00444 sec ]
 [ GrB_apply (inplace-op) 0.00312 sec ]
 [ GrB_reduce 0.00213 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00558 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.052126) (cblas_saxpy) 0.0706 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00449 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00227 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0067 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0508299) (cblas_saxpy) 0.068 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00216 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0525846) (cblas_saxpy) 0.0698 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00465 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00226 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00564 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0512828) (cblas_saxpy) 0.0688 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00565 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00215 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00669 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00263 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0517346) (cblas_saxpy) 0.069 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.0038 sec ]
 [ GrB_reduce 0.00227 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0522744) (cblas_saxpy) 0.0691 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00446 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00216 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00367 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0525592) (cblas_saxpy) 0.0682 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00448 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00348 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00554 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0524099) (cblas_saxpy) 0.0695 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00465 sec ]
 [ GrB_apply (inplace-op) 0.00282 sec ]
 [ GrB_reduce 0.00218 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00571 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.051191) (cblas_saxpy) 0.0669 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0045 sec ]
 [ GrB_apply (inplace-op) 0.00293 sec ]
 [ GrB_reduce 0.00227 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00265 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.050571) (cblas_saxpy) 0.0662 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00451 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00216 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00645 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00263 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0506262) (cblas_saxpy) 0.0678 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0045 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00225 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0510071) (cblas_saxpy) 0.068 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.00282 sec ]
 [ GrB_reduce 0.00216 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00567 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0512688) (cblas_saxpy) 0.0684 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00451 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00226 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00265 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0500492) (cblas_saxpy) 0.0672 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0045 sec ]
 [ GrB_apply (inplace-op) 0.00282 sec ]
 [ GrB_reduce 0.00216 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0502694) (cblas_saxpy) 0.066 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0045 sec ]
 [ GrB_apply (inplace-op) 0.00299 sec ]
 [ GrB_reduce 0.00228 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0502331) (cblas_saxpy) 0.0673 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00214 sec ]
info 0
iters 39
warmup (3f):      3.464 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:     1.5166 sec
trial:  1 time:     1.5094 sec
3f: 40: avg time:      1.513 (sec), rate:   1487.513 iters: 39

--------------------------- nthreads: 20
trial:  0 time:     1.5157 sec
trial:  1 time:     1.4954 sec
3f: 20: avg time:      1.506 (sec), rate:   1494.892 iters: 39

  23947347x1 GraphBLAS float vector, sparse by col:
  PR, 23947347 entries

    (0,0)    4.75579e-08
    (1,0)    3.20307e-08
    (2,0)    4.95218e-08
    (3,0)    3.69073e-08
    (4,0)    3.75892e-08
    (5,0)    5.17024e-08
    (6,0)    5.35032e-08
    (7,0)    2.14235e-08
    (8,0)    3.78229e-08
    (9,0)    4.74456e-08
    (10,0)    4.79489e-08
    (11,0)    4.80614e-08
    (12,0)    4.3424e-08
    (13,0)    5.12736e-08
    (14,0)    3.66438e-08
    (15,0)    3.99929e-08
    (16,0)    6.02066e-08
    (17,0)    2.33178e-08
    (18,0)    2.27628e-08
    (19,0)    5.77866e-08
    (20,0)    3.66638e-08
    (21,0)    3.55786e-08
    (22,0)    6.66583e-08
    (23,0)    2.18603e-08
    (24,0)    2.51435e-08
    (25,0)    5.51881e-08
    (26,0)    5.21458e-08
    (27,0)    3.66357e-08
    (28,0)    7.3439e-08
    (29,0)    5.27261e-08
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:     3.3820 sec
trial:  1 time:     3.4120 sec
3f: 40: avg time:      3.397 (sec), rate:    662.534 iters: 39

--------------------------- nthreads: 20
trial:  0 time:     3.1341 sec
trial:  1 time:     3.1133 sec
3f: 20: avg time:      3.124 (sec), rate:    720.505 iters: 39

  23947347x1 GraphBLAS float vector, sparse by col:
  PR, 23947347 entries

    (0,0)    4.75579e-08
    (1,0)    3.20307e-08
    (2,0)    4.95218e-08
    (3,0)    3.69073e-08
    (4,0)    3.75892e-08
    (5,0)    5.17024e-08
    (6,0)    5.35032e-08
    (7,0)    2.14235e-08
    (8,0)    3.78229e-08
    (9,0)    4.74456e-08
    (10,0)    4.79489e-08
    (11,0)    4.80614e-08
    (12,0)    4.3424e-08
    (13,0)    5.12736e-08
    (14,0)    3.66438e-08
    (15,0)    3.99929e-08
    (16,0)    6.02066e-08
    (17,0)    2.33178e-08
    (18,0)    2.27628e-08
    (19,0)    5.77866e-08
    (20,0)    3.66638e-08
    (21,0)    3.55786e-08
    (22,0)    6.66583e-08
    (23,0)    2.18603e-08
    (24,0)    2.51435e-08
    (25,0)    5.51881e-08
    (26,0)    5.21458e-08
    (27,0)    3.66357e-08
    (28,0)    7.3439e-08
    (29,0)    5.27261e-08
    ...
