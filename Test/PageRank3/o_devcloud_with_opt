MKL version: 202101
threads to test:  64 32
matrix: /home/u32248/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/u32248/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 2.49e-05 sec ]
 [ GxB_set 1.54e-05 sec ]
 [ GrB_apply (shallow-op) generic 3.89 sec ]
 [ GxB_set (transpose) 93.4 sec ]
 [ GrB_Matrix_nvals 2.05e-05 sec ]
 [ GrB_Matrix_dup 2.98 sec ]
original # of edges: 4223264644
 [ GrB_reduce 13.5 sec ]
 [ GrB_reduce wait (zombies: 71143742, pending: 0) 0.478 sec ]
 [ GrB_Vector_nvals 1.06e-06 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
Matrix has 71143742 empty rows
Matrix has 71143742 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 71143742) generic add 14.4 sec ]
 [ GrB_Vector_nvals 7.53e-07 sec ]
 [ GrB_Vector_dup 0.058 sec ]
 [ GxB_Vector_export 3.87e-06 sec ]

==========input graph: nodes: 134217726 edges: 4223264644
diag entries added: 71143742
 [ GrB_Matrix_nvals 1.53e-06 sec ]
read time: 804.396 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0509 sec ]
 [ GrB_Vector_dup 0.0501 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0122 sec ]
 [ GxB_mxv_optimize 3.13e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0498 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0444 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.39 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.037 sec ]
 [ GrB_apply (inplace-op) 0.0176 sec ]
 [ GrB_reduce 0.00961 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0211 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0113 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.36 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0204 sec ]
 [ GrB_apply (inplace-op) 0.0128 sec ]
 [ GrB_reduce 0.00675 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0188 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0087 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.37 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0147 sec ]
 [ GrB_apply (inplace-op) 0.0175 sec ]
 [ GrB_reduce 0.00946 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.021 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.36 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0162 sec ]
 [ GrB_apply (inplace-op) 0.0128 sec ]
 [ GrB_reduce 0.00679 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0188 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00867 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.37 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0148 sec ]
 [ GrB_apply (inplace-op) 0.0175 sec ]
 [ GrB_reduce 0.0095 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.021 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.37 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0161 sec ]
 [ GrB_apply (inplace-op) 0.0128 sec ]
 [ GrB_reduce 0.00677 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0188 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00868 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.38 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0147 sec ]
 [ GrB_apply (inplace-op) 0.0174 sec ]
 [ GrB_reduce 0.00953 sec ]
 [ GxB_mxv_optimize_free info 0
iters 7
warmup (3f):     17.297 (threads: 64) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0466 sec ]
 [ GrB_Vector_dup 0.0467 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0122 sec ]
 [ GxB_mxv_optimize 8.33 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.114 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.11 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.63235) (cblas_saxpy) 4.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0173 sec ]
 [ GrB_apply (inplace-op) 0.0172 sec ]
 [ GrB_reduce 0.00961 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0221 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.13333) (cblas_saxpy) 4.26 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.04 sec ]
 [ GrB_apply (inplace-op) 0.0286 sec ]
 [ GrB_reduce 0.00703 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0191 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00874 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.32227) (cblas_saxpy) 4.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0421 sec ]
 [ GrB_apply (inplace-op) 0.0209 sec ]
 [ GrB_reduce 0.00961 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0221 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.09173) (cblas_saxpy) 4.2 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0161 sec ]
 [ GrB_apply (inplace-op) 0.0128 sec ]
 [ GrB_reduce 0.00704 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0192 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00869 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.19311) (cblas_saxpy) 4.32 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0328 sec ]
 [ GrB_apply (inplace-op) 0.0173 sec ]
 [ GrB_reduce 0.00963 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0216 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.20208) (cblas_saxpy) 4.33 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0335 sec ]
 [ GrB_apply (inplace-op) 0.0188 sec ]
 [ GrB_reduce 0.00699 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0191 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00871 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.19033) (cblas_saxpy) 4.31 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.031 sec ]
 [ GrB_apply (inplace-op) 0.0172 sec ]
 [ GrB_reduce 0.00963 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0218 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.13029) (cblas_saxpy) 4.26 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.016 sec ]
 [ GrB_apply (inplace-op) 0.0128 sec ]
 [ GrB_reduce 0.00697 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0187 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00871 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.18923) (cblas_saxpy) 4.31 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0153 sec ]
 [ GrB_apply (inplace-op) 0.0173 sec ]
 [ GrB_reduce 0.00965 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0213 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.10687) (cblas_saxpy) 4.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0298 sec ]
 [ GrB_apply (inplace-op) 0.0322 sec ]
 [ GrB_reduce 0.0311 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0218 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00877 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.13891) (cblas_saxpy) 4.25 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0411 sec ]
 [ GrB_apply (inplace-op) 0.0173 sec ]
 [ GrB_reduce 0.00963 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0214 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.19242) (cblas_saxpy) 4.32 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0128 sec ]
 [ GrB_reduce 0.00702 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0187 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0087 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.09019) (cblas_saxpy) 4.22 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0229 sec ]
 [ GrB_apply (inplace-op) 0.0173 sec ]
 [ GrB_reduce 0.00965 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0213 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.16353) (cblas_saxpy) 4.28 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0314 sec ]
 [ GrB_apply (inplace-op) 0.0323 sec ]
 [ GrB_reduce 0.00841 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0194 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00869 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.13415) (cblas_saxpy) 4.26 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.03 sec ]
 [ GrB_apply (inplace-op) 0.0172 sec ]
 [ GrB_reduce 0.00964 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0219 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.1156) (cblas_saxpy) 4.24 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0336 sec ]
 [ GrB_apply (inplace-op) 0.0157 sec ]
 [ GrB_reduce 0.00706 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0192 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00871 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.09732) (cblas_saxpy) 4.21 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0222 sec ]
 [ GrB_apply (inplace-op) 0.0177 sec ]
 [ GrB_reduce 0.00963 sec ]
 [ GxB_mxv_optimize_free info 0
iters 17
warmup (3f):     83.540 (threads: 64) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 64
trial:  0 time:    17.5726 sec
trial:  1 time:    17.3850 sec
3f: 64: avg time:     17.479 (sec), rate:   1691.356 iters: 7

--------------------------- nthreads: 32
trial:  0 time:    19.2695 sec
trial:  1 time:    19.2414 sec
3f: 32: avg time:     19.255 (sec), rate:   1535.296 iters: 7

  134217726x1 GraphBLAS float vector, sparse by col:
  PR, 134217726 entries

    (0,0)    1.11759e-09
    (1,0)    1.21291e-09
    (2,0)    1.21297e-09
    (3,0)    1.11759e-09
    (4,0)    1.11759e-09
    (5,0)    1.11759e-09
    (6,0)    1.11759e-09
    (7,0)    1.11759e-09
    (8,0)    1.11759e-09
    (9,0)    1.52821e-09
    (10,0)    1.11759e-09
    (11,0)    2.92415e-09
    (12,0)    1.11759e-09
    (13,0)    1.11759e-09
    (14,0)    1.68495e-09
    (15,0)    1.60349e-09
    (16,0)    1.11759e-09
    (17,0)    1.11759e-09
    (18,0)    1.11759e-09
    (19,0)    1.6263e-09
    (20,0)    1.11759e-09
    (21,0)    1.11759e-09
    (22,0)    1.11759e-09
    (23,0)    1.11759e-09
    (24,0)    1.1994e-09
    (25,0)    1.45084e-09
    (26,0)    9.28271e-09
    (27,0)    1.35811e-09
    (28,0)    2.13301e-09
    (29,0)    1.52126e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 64
trial:  0 time:    82.1843 sec
trial:  1 time:    87.5345 sec
3f: 64: avg time:     84.859 (sec), rate:    846.052 iters: 17

--------------------------- nthreads: 32
trial:  0 time:    80.5280 sec
trial:  1 time:    80.6348 sec
3f: 32: avg time:     80.581 (sec), rate:    890.969 iters: 17

  134217726x1 GraphBLAS float vector, sparse by col:
  PR, 134217726 entries

    (0,0)    1.1825e-09
    (1,0)    1.18066e-09
    (2,0)    1.33977e-09
    (3,0)    4.12253e-09
    (4,0)    1.52316e-09
    (5,0)    1.31944e-09
    (6,0)    1.38714e-09
    (7,0)    1.11771e-09
    (8,0)    1.26326e-09
    (9,0)    5.64546e-09
    (10,0)    1.33961e-09
    (11,0)    1.89349e-09
    (12,0)    1.42799e-09
    (13,0)    1.1177e-09
    (14,0)    1.20687e-09
    (15,0)    1.2193e-09
    (16,0)    1.19267e-09
    (17,0)    1.20552e-09
    (18,0)    2.21616e-09
    (19,0)    1.19176e-09
    (20,0)    5.08504e-08
    (21,0)    1.19161e-09
    (22,0)    1.52429e-09
    (23,0)    1.18859e-09
    (24,0)    1.13096e-09
    (25,0)    1.25301e-09
    (26,0)    1.19913e-09
    (27,0)    2.82556e-09
    (28,0)    1.12293e-09
    (29,0)    1.95427e-09
    ...
