threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
 [ GxB_Matrix_import_CSR 1.43e-05 sec ]
 [ GxB_set 4.17e-06 sec ]
 [ GrB_apply (shallow-op) generic 7.13 sec ]
 [ GxB_set (transpose) 74.4 sec ]
 [ GrB_Matrix_nvals 1.26e-06 sec ]
 [ GrB_Matrix_dup 1.6 sec ]
original # of edges: 4294966740
 [ GrB_reduce generic 26.9 sec ]
 [ GrB_reduce generic 0.902 sec ]
 [ GrB_Vector_nvals 6.25e-07 sec ]
 [ GrB_Vector_nvals 5.52e-08 sec ]
 [ GrB_reduce generic 26.8 sec ]
 [ GrB_Vector_nvals 4.09e-07 sec ]
 [ GrB_Vector_dup 0.0617 sec ]
 [ GxB_Vector_export 1.97e-06 sec ]

==========input graph: nodes: 134217728 edges: 4294966740
diag entries added: 0
 [ GrB_Matrix_nvals 6.27e-07 sec ]
read time: 170.304 sec
# of trials: 16
chunk: 65536
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0711 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0768 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0706 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.0087 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0186 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00882 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00872 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0255 sec ]
 [ GrB_apply (inplace-op) 0.0193 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0323 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0186 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0191 sec ]
 [ GrB_reduce 0.00864 sec ]
warmup (3f):     27.634 (threads: 40)

Method 3f:

--------------------------- nthreads: 40
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0716 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0769 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.07 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0255 sec ]
 [ GrB_apply (inplace-op) 0.0189 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00922 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00972 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
trial:  0 time:    27.6355 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0721 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0768 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0716 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.47 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0192 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0323 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
trial:  1 time:    27.6338 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0713 sec ]
 [ GrB_Vector_dup 0.0666 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0766 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0706 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0254 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.0089 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00962 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.0087 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
trial:  2 time:    27.6346 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0697 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0768 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0705 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0202 sec ]
 [ GrB_reduce 0.0104 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.53 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.026 sec ]
 [ GrB_apply (inplace-op) 0.019 sec ]
 [ GrB_reduce 0.0103 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0325 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.52 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0255 sec ]
 [ GrB_apply (inplace-op) 0.0228 sec ]
 [ GrB_reduce 0.0127 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0352 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.021 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.53 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0274 sec ]
 [ GrB_apply (inplace-op) 0.0214 sec ]
 [ GrB_reduce 0.0112 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0342 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0208 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.56 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00889 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.034 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0204 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.55 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0273 sec ]
 [ GrB_apply (inplace-op) 0.0217 sec ]
 [ GrB_reduce 0.0128 sec ]
trial:  3 time:    28.0525 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0937 sec ]
 [ GrB_Vector_dup 0.0728 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.021 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0819 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0892 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.55 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0277 sec ]
 [ GrB_apply (inplace-op) 0.0221 sec ]
 [ GrB_reduce 0.014 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0361 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0198 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.54 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0275 sec ]
 [ GrB_apply (inplace-op) 0.0218 sec ]
 [ GrB_reduce 0.015 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0336 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0213 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.56 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0267 sec ]
 [ GrB_apply (inplace-op) 0.0239 sec ]
 [ GrB_reduce 0.0108 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0338 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0207 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.55 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.026 sec ]
 [ GrB_apply (inplace-op) 0.022 sec ]
 [ GrB_reduce 0.0116 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0353 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0199 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.57 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0277 sec ]
 [ GrB_apply (inplace-op) 0.0245 sec ]
 [ GrB_reduce 0.011 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0352 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0207 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.54 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0274 sec ]
 [ GrB_apply (inplace-op) 0.0225 sec ]
 [ GrB_reduce 0.0132 sec ]
trial:  4 time:    28.3165 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0947 sec ]
 [ GrB_Vector_dup 0.0701 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0207 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0812 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0833 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.52 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0323 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0192 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0253 sec ]
 [ GrB_apply (inplace-op) 0.021 sec ]
 [ GrB_reduce 0.00885 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0254 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00985 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0324 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
trial:  5 time:    27.7307 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0724 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0776 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0721 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00872 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0258 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00887 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00887 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
trial:  6 time:    27.6383 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0707 sec ]
 [ GrB_Vector_dup 0.0663 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0189 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0767 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0717 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.51 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0247 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
trial:  7 time:    27.6821 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0717 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0768 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0708 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.47 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00891 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0186 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0276 sec ]
 [ GrB_apply (inplace-op) 0.0223 sec ]
 [ GrB_reduce 0.0156 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0334 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0207 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00891 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
trial:  8 time:    27.6496 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0712 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0768 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0711 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.51 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0323 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.47 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0257 sec ]
 [ GrB_apply (inplace-op) 0.0224 sec ]
 [ GrB_reduce 0.0126 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0323 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0331 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0186 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0196 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00866 sec ]
trial:  9 time:    27.6938 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0722 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0769 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.07 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0259 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0323 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00948 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0261 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0192 sec ]
 [ GrB_reduce 0.00866 sec ]
trial: 10 time:    27.6324 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.071 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0767 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0731 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0193 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.026 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00865 sec ]
trial: 11 time:    27.6348 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0717 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0767 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0717 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00889 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00889 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0263 sec ]
 [ GrB_apply (inplace-op) 0.0195 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.019 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00867 sec ]
trial: 12 time:    27.6314 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.07 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0768 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0708 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00879 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00889 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0261 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00884 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.026 sec ]
 [ GrB_apply (inplace-op) 0.019 sec ]
 [ GrB_reduce 0.00884 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
trial: 13 time:    27.6327 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0706 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0769 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0718 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00983 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0255 sec ]
 [ GrB_apply (inplace-op) 0.0191 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0264 sec ]
 [ GrB_apply (inplace-op) 0.0191 sec ]
 [ GrB_reduce 0.00965 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0338 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0209 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0192 sec ]
 [ GrB_reduce 0.00864 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0324 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0198 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.026 sec ]
 [ GrB_apply (inplace-op) 0.0195 sec ]
 [ GrB_reduce 0.00885 sec ]
trial: 14 time:    27.6398 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0714 sec ]
 [ GrB_Vector_dup 0.0661 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0766 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0705 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0254 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00864 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00895 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00865 sec ]
trial: 15 time:    27.6299 sec
3f: 40: avg time:     27.717 (sec), rate:    929.754 iters: 6
