MKL version: 202101
threads to test:  64 32
matrix: /home/u32248/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/u32248/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 6.49e-06 sec ]
 [ GxB_set 1.05e-05 sec ]
 [ GrB_apply (shallow-op) generic 3.97 sec ]
 [ GxB_set (transpose) 95.5 sec ]
 [ GrB_Matrix_nvals 1.9e-05 sec ]
 [ GrB_Matrix_dup 2.98 sec ]
original # of edges: 4223264644
 [ GrB_reduce 12.8 sec ]
 [ GrB_reduce wait (zombies: 71143742, pending: 0) 0.755 sec ]
 [ GrB_Vector_nvals 8.37e-07 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
Matrix has 71143742 empty rows
Matrix has 71143742 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 71143742) generic add 15 sec ]
 [ GrB_Vector_nvals 7.05e-07 sec ]
 [ GrB_Vector_dup 0.0637 sec ]
 [ GxB_Vector_export 5.07e-06 sec ]

==========input graph: nodes: 134217726 edges: 4223264644
diag entries added: 71143742
 [ GrB_Matrix_nvals 1.99e-06 sec ]
read time: 203.377 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0534 sec ]
 [ GrB_Vector_dup 0.0641 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0095 sec ]
 [ GxB_mxv_optimize 2.03e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0533 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0506 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.09 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0465 sec ]
 [ GrB_apply (inplace-op) 0.0242 sec ]
 [ GrB_reduce 0.00945 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0186 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.45 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0165 sec ]
 [ GrB_apply (inplace-op) 0.0105 sec ]
 [ GrB_reduce 0.00555 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0203 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00809 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.4 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0422 sec ]
 [ GrB_apply (inplace-op) 0.0441 sec ]
 [ GrB_reduce 0.0325 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0332 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0113 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.37 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0179 sec ]
 [ GrB_apply (inplace-op) 0.0105 sec ]
 [ GrB_reduce 0.00554 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0203 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00807 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.36 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0303 sec ]
 [ GrB_apply (inplace-op) 0.0464 sec ]
 [ GrB_reduce 0.0253 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0181 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.35 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0163 sec ]
 [ GrB_apply (inplace-op) 0.0104 sec ]
 [ GrB_reduce 0.00555 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0202 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00806 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.36 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0169 sec ]
 [ GrB_apply (inplace-op) 0.0175 sec ]
 [ GrB_reduce 0.00938 sec ]
 [ GxB_mxv_optimize_free info 0
iters 7
warmup (3f):     18.248 (threads: 64) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0519 sec ]
 [ GrB_Vector_dup 0.0976 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00958 sec ]
 [ GxB_mxv_optimize 7.46 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0541 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0461 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.1524) (cblas_saxpy) 4.28 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0285 sec ]
 [ GrB_apply (inplace-op) 0.0172 sec ]
 [ GrB_reduce 0.00956 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0188 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0199 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.96077) (cblas_saxpy) 4.09 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0164 sec ]
 [ GrB_apply (inplace-op) 0.0105 sec ]
 [ GrB_reduce 0.00584 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0204 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00813 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.99732) (cblas_saxpy) 4.12 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0314 sec ]
 [ GrB_apply (inplace-op) 0.0173 sec ]
 [ GrB_reduce 0.022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0187 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.01768) (cblas_saxpy) 4.15 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0166 sec ]
 [ GrB_apply (inplace-op) 0.0105 sec ]
 [ GrB_reduce 0.00585 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0237 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00813 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.92398) (cblas_saxpy) 4.05 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0423 sec ]
 [ GrB_apply (inplace-op) 0.0173 sec ]
 [ GrB_reduce 0.00954 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0186 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.96142) (cblas_saxpy) 4.1 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0472 sec ]
 [ GrB_apply (inplace-op) 0.0302 sec ]
 [ GrB_reduce 0.0311 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0521 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00817 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.01009) (cblas_saxpy) 5.13 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.033 sec ]
 [ GrB_apply (inplace-op) 0.0173 sec ]
 [ GrB_reduce 0.0154 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.019 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.32255) (cblas_saxpy) 4.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.041 sec ]
 [ GrB_apply (inplace-op) 0.0264 sec ]
 [ GrB_reduce 0.00584 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0207 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00813 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.3329) (cblas_saxpy) 4.47 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0278 sec ]
 [ GrB_apply (inplace-op) 0.0253 sec ]
 [ GrB_reduce 0.00958 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0184 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.06945) (cblas_saxpy) 4.19 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0194 sec ]
 [ GrB_apply (inplace-op) 0.0105 sec ]
 [ GrB_reduce 0.0059 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0205 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00813 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.10005) (cblas_saxpy) 4.22 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0192 sec ]
 [ GrB_apply (inplace-op) 0.0173 sec ]
 [ GrB_reduce 0.00954 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.019 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.13021) (cblas_saxpy) 4.27 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0438 sec ]
 [ GrB_apply (inplace-op) 0.0262 sec ]
 [ GrB_reduce 0.00582 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0209 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00813 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.06554) (cblas_saxpy) 4.2 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0327 sec ]
 [ GrB_apply (inplace-op) 0.0172 sec ]
 [ GrB_reduce 0.00957 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0187 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.23342) (cblas_saxpy) 4.36 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0383 sec ]
 [ GrB_apply (inplace-op) 0.0106 sec ]
 [ GrB_reduce 0.00583 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0295 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00815 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.38352) (cblas_saxpy) 4.51 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0429 sec ]
 [ GrB_apply (inplace-op) 0.0441 sec ]
 [ GrB_reduce 0.0325 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0438 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0261 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.07359) (cblas_saxpy) 4.21 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0203 sec ]
 [ GrB_apply (inplace-op) 0.0106 sec ]
 [ GrB_reduce 0.00585 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0205 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00813 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.13183) (cblas_saxpy) 4.3 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0184 sec ]
 [ GrB_apply (inplace-op) 0.0172 sec ]
 [ GrB_reduce 0.00946 sec ]
 [ GxB_mxv_optimize_free info 0
iters 17
warmup (3f):     82.428 (threads: 64) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 64
trial:  0 time:    17.3626 sec
trial:  1 time:    17.3238 sec
3f: 64: avg time:     17.343 (sec), rate:   1704.578 iters: 7

--------------------------- nthreads: 32
trial:  0 time:    19.8896 sec
trial:  1 time:    18.9435 sec
3f: 32: avg time:     19.417 (sec), rate:   1522.561 iters: 7

  134217726x1 GraphBLAS float vector, sparse by col:
  PR, 134217726 entries

    (0,0)    1.11759e-09
    (1,0)    1.21291e-09
    (2,0)    1.21297e-09
    (3,0)    1.11759e-09
    (4,0)    1.11759e-09
    (5,0)    1.11759e-09
    (6,0)    1.11759e-09
    (7,0)    1.11759e-09
    (8,0)    1.11759e-09
    (9,0)    1.52821e-09
    (10,0)    1.11759e-09
    (11,0)    2.92415e-09
    (12,0)    1.11759e-09
    (13,0)    1.11759e-09
    (14,0)    1.68495e-09
    (15,0)    1.60349e-09
    (16,0)    1.11759e-09
    (17,0)    1.11759e-09
    (18,0)    1.11759e-09
    (19,0)    1.6263e-09
    (20,0)    1.11759e-09
    (21,0)    1.11759e-09
    (22,0)    1.11759e-09
    (23,0)    1.11759e-09
    (24,0)    1.1994e-09
    (25,0)    1.45084e-09
    (26,0)    9.28271e-09
    (27,0)    1.35811e-09
    (28,0)    2.13301e-09
    (29,0)    1.52126e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 64
trial:  0 time:    79.8306 sec
trial:  1 time:    80.7007 sec
3f: 64: avg time:     80.266 (sec), rate:    894.474 iters: 17

--------------------------- nthreads: 32
trial:  0 time:    80.0357 sec
trial:  1 time:    80.6621 sec
3f: 32: avg time:     80.349 (sec), rate:    893.547 iters: 17

  134217726x1 GraphBLAS float vector, sparse by col:
  PR, 134217726 entries

    (0,0)    1.1825e-09
    (1,0)    1.18066e-09
    (2,0)    1.33977e-09
    (3,0)    4.12253e-09
    (4,0)    1.52316e-09
    (5,0)    1.31944e-09
    (6,0)    1.38714e-09
    (7,0)    1.11771e-09
    (8,0)    1.26326e-09
    (9,0)    5.64546e-09
    (10,0)    1.33961e-09
    (11,0)    1.89349e-09
    (12,0)    1.42799e-09
    (13,0)    1.1177e-09
    (14,0)    1.20687e-09
    (15,0)    1.2193e-09
    (16,0)    1.19267e-09
    (17,0)    1.20552e-09
    (18,0)    2.21616e-09
    (19,0)    1.19176e-09
    (20,0)    5.08504e-08
    (21,0)    1.19161e-09
    (22,0)    1.52429e-09
    (23,0)    1.18859e-09
    (24,0)    1.13096e-09
    (25,0)    1.25301e-09
    (26,0)    1.19913e-09
    (27,0)    2.82556e-09
    (28,0)    1.12293e-09
    (29,0)    1.95427e-09
    ...
MKL version: 202101
threads to test:  64 32
matrix: /home/u32248/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/u32248/GAP/GAP-urand/GAP-urand.grb
 [ GxB_Matrix_import_CSR 1.4e-05 sec ]
 [ GxB_set 2.37e-05 sec ]
 [ GrB_apply (shallow-op) generic 4.88 sec ]
 [ GxB_set (transpose) 107 sec ]
 [ GrB_Matrix_nvals 0.000113 sec ]
 [ GrB_Matrix_dup 2.86 sec ]
original # of edges: 4294966740
 [ GrB_reduce 15.8 sec ]
 [ GrB_reduce 0.705 sec ]
 [ GrB_Vector_nvals 1.19e-06 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_reduce 13.5 sec ]
 [ GrB_Vector_nvals 6.73e-07 sec ]
 [ GrB_Vector_dup 0.055 sec ]
 [ GxB_Vector_export 4.06e-06 sec ]

==========input graph: nodes: 134217728 edges: 4294966740
diag entries added: 0
 [ GrB_Matrix_nvals 1.08e-06 sec ]
read time: 381.152 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0497 sec ]
 [ GrB_Vector_dup 0.0556 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0172 sec ]
 [ GxB_mxv_optimize 2.42e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0658 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0509 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.12 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0461 sec ]
 [ GrB_apply (inplace-op) 0.0357 sec ]
 [ GrB_reduce 0.0284 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0382 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.01 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0354 sec ]
 [ GrB_apply (inplace-op) 0.0176 sec ]
 [ GrB_reduce 0.00945 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.024 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.016 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.01 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0217 sec ]
 [ GrB_apply (inplace-op) 0.0174 sec ]
 [ GrB_reduce 0.00933 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0245 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.011 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.02 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0351 sec ]
 [ GrB_apply (inplace-op) 0.0176 sec ]
 [ GrB_reduce 0.00946 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0238 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0112 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0212 sec ]
 [ GrB_apply (inplace-op) 0.0262 sec ]
 [ GrB_reduce 0.00933 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0237 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0111 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.99 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0262 sec ]
 [ GrB_apply (inplace-op) 0.0175 sec ]
 [ GrB_reduce 0.00937 sec ]
 [ GxB_mxv_optimize_free info 0
iters 6
warmup (3f):     24.977 (threads: 64) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.108 sec ]
 [ GrB_Vector_dup 0.127 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.017 sec ]
 [ GxB_mxv_optimize 9.4 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0608 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0767 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.47178) (cblas_saxpy) 4.89 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0424 sec ]
 [ GrB_apply (inplace-op) 0.0171 sec ]
 [ GrB_reduce 0.0136 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0267 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.011 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.45046) (cblas_saxpy) 4.69 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0472 sec ]
 [ GrB_apply (inplace-op) 0.0439 sec ]
 [ GrB_reduce 0.0328 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.038 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.026 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.49914) (cblas_saxpy) 4.69 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0221 sec ]
 [ GrB_apply (inplace-op) 0.0167 sec ]
 [ GrB_reduce 0.00937 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0335 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0111 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.35357) (cblas_saxpy) 4.54 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0439 sec ]
 [ GrB_apply (inplace-op) 0.0434 sec ]
 [ GrB_reduce 0.0249 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0586 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0293 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.40391) (cblas_saxpy) 4.7 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0377 sec ]
 [ GrB_apply (inplace-op) 0.0166 sec ]
 [ GrB_reduce 0.00919 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0265 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0109 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.40751) (cblas_saxpy) 4.6 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0339 sec ]
 [ GrB_apply (inplace-op) 0.0111 sec ]
 [ GrB_reduce 0.00609 sec ]
 [ GxB_mxv_optimize_free info 0
iters 6
warmup (3f):     38.646 (threads: 64) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 64
trial:  0 time:    24.8694 sec
trial:  1 time:    24.7750 sec
3f: 64: avg time:     24.822 (sec), rate:   1038.175 iters: 6

--------------------------- nthreads: 32
trial:  0 time:    25.0625 sec
trial:  1 time:    25.3671 sec
3f: 32: avg time:     25.215 (sec), rate:   1022.011 iters: 6

  134217728x1 GraphBLAS float vector, sparse by col:
  PR, 134217728 entries

    (0,0)    8.25985e-09
    (1,0)    7.23841e-09
    (2,0)    8.28931e-09
    (3,0)    7.71854e-09
    (4,0)    8.2541e-09
    (5,0)    9.05594e-09
    (6,0)    8.01646e-09
    (7,0)    7.62977e-09
    (8,0)    8.79943e-09
    (9,0)    7.01721e-09
    (10,0)    7.44634e-09
    (11,0)    7.82501e-09
    (12,0)    9.04071e-09
    (13,0)    4.5071e-09
    (14,0)    6.88887e-09
    (15,0)    5.91511e-09
    (16,0)    9.80993e-09
    (17,0)    7.49341e-09
    (18,0)    7.61506e-09
    (19,0)    6.4787e-09
    (20,0)    6.24013e-09
    (21,0)    7.03518e-09
    (22,0)    7.64445e-09
    (23,0)    7.88618e-09
    (24,0)    6.68367e-09
    (25,0)    8.81481e-09
    (26,0)    7.06337e-09
    (27,0)    5.87844e-09
    (28,0)    7.54203e-09
    (29,0)    8.4015e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 64
trial:  0 time:    35.4071 sec
trial:  1 time:    41.4141 sec
3f: 64: avg time:     38.411 (sec), rate:    670.904 iters: 6

--------------------------- nthreads: 32
trial:  0 time:    37.9360 sec
trial:  1 time:    34.6308 sec
3f: 32: avg time:     36.283 (sec), rate:    710.236 iters: 6

  134217728x1 GraphBLAS float vector, sparse by col:
  PR, 134217728 entries

    (0,0)    8.25985e-09
    (1,0)    7.23841e-09
    (2,0)    8.28931e-09
    (3,0)    7.71854e-09
    (4,0)    8.2541e-09
    (5,0)    9.05594e-09
    (6,0)    8.01646e-09
    (7,0)    7.62977e-09
    (8,0)    8.79943e-09
    (9,0)    7.01721e-09
    (10,0)    7.44634e-09
    (11,0)    7.82501e-09
    (12,0)    9.04071e-09
    (13,0)    4.5071e-09
    (14,0)    6.88888e-09
    (15,0)    5.91511e-09
    (16,0)    9.80993e-09
    (17,0)    7.49341e-09
    (18,0)    7.61506e-09
    (19,0)    6.4787e-09
    (20,0)    6.24013e-09
    (21,0)    7.03518e-09
    (22,0)    7.64445e-09
    (23,0)    7.88618e-09
    (24,0)    6.68367e-09
    (25,0)    8.81481e-09
    (26,0)    7.06337e-09
    (27,0)    5.87844e-09
    (28,0)    7.54203e-09
    (29,0)    8.4015e-09
    ...
MKL version: 202101
threads to test:  64 32
matrix: /home/u32248/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/u32248/GAP/GAP-twitter/GAP-twitter.grb
 [ GxB_Matrix_import_CSR 1.52e-05 sec ]
 [ GxB_set 3.72e-05 sec ]
 [ GrB_apply (shallow-op) generic 1.74 sec ]
 [ GxB_set (transpose) 28.3 sec ]
 [ GrB_Matrix_nvals 1.82e-05 sec ]
 [ GrB_Matrix_dup 0.927 sec ]
original # of edges: 1468364884
 [ GrB_reduce 3.89 sec ]
 [ GrB_reduce wait (zombies: 25889280, pending: 0) 0.122 sec ]
 [ GrB_Vector_nvals 1.06e-06 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
Matrix has 21475137 empty rows
Matrix has 25889280 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 27438232) generic add 5.23 sec ]
 [ GrB_Vector_nvals 4.81e-07 sec ]
 [ GrB_Vector_dup 0.0625 sec ]
 [ GxB_Vector_export 2.71e-06 sec ]

==========input graph: nodes: 61578415 edges: 1468364884
diag entries added: 27438232
 [ GrB_Matrix_nvals 7.69e-07 sec ]
read time: 281.498 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0645 sec ]
 [ GrB_Vector_dup 0.0634 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0327 sec ]
 [ GxB_mxv_optimize 1.97e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0707 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0224 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 1.11 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0154 sec ]
 [ GrB_apply (inplace-op) 0.00704 sec ]
 [ GrB_reduce 0.00413 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00903 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00448 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.592 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00691 sec ]
 [ GrB_apply (inplace-op) 0.00394 sec ]
 [ GrB_reduce 0.00246 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00951 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00356 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.58 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0069 sec ]
 [ GrB_apply (inplace-op) 0.00668 sec ]
 [ GrB_reduce 0.00404 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00866 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00446 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.581 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00689 sec ]
 [ GrB_apply (inplace-op) 0.00403 sec ]
 [ GrB_reduce 0.00247 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00948 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00355 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.579 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00696 sec ]
 [ GrB_apply (inplace-op) 0.00665 sec ]
 [ GrB_reduce 0.00397 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00865 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00447 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.582 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00691 sec ]
 [ GrB_apply (inplace-op) 0.00395 sec ]
 [ GrB_reduce 0.00249 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00952 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00354 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.582 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00693 sec ]
 [ GrB_apply (inplace-op) 0.00667 sec ]
 [ GrB_reduce 0.00398 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00863 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00447 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.583 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00692 sec ]
 [ GrB_apply (inplace-op) 0.00399 sec ]
 [ GrB_reduce 0.00247 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00951 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00354 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.583 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00691 sec ]
 [ GrB_apply (inplace-op) 0.00665 sec ]
 [ GrB_reduce 0.00402 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00862 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00447 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.584 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00695 sec ]
 [ GrB_apply (inplace-op) 0.004 sec ]
 [ GrB_reduce 0.00262 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0095 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00378 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.581 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00691 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00398 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0086 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00841 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.58 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00687 sec ]
 [ GrB_apply (inplace-op) 0.00389 sec ]
 [ GrB_reduce 0.00249 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00949 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00354 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.586 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00687 sec ]
 [ GrB_apply (inplace-op) 0.00663 sec ]
 [ GrB_reduce 0.00399 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00863 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00448 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.583 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00691 sec ]
 [ GrB_apply (inplace-op) 0.00396 sec ]
 [ GrB_reduce 0.00247 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0105 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00356 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.581 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00698 sec ]
 [ GrB_apply (inplace-op) 0.00671 sec ]
 [ GrB_reduce 0.00415 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00864 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00446 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.613 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00689 sec ]
 [ GrB_apply (inplace-op) 0.00411 sec ]
 [ GrB_reduce 0.0025 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0095 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00354 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.592 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00688 sec ]
 [ GrB_apply (inplace-op) 0.00653 sec ]
 [ GrB_reduce 0.00402 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00863 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00447 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.583 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0069 sec ]
 [ GrB_apply (inplace-op) 0.0039 sec ]
 [ GrB_reduce 0.00248 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00953 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00375 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.582 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00686 sec ]
 [ GrB_apply (inplace-op) 0.00663 sec ]
 [ GrB_reduce 0.00397 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00864 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00448 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.583 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00687 sec ]
 [ GrB_apply (inplace-op) 0.00395 sec ]
 [ GrB_reduce 0.00251 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00949 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00354 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.61 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0174 sec ]
 [ GrB_apply (inplace-op) 0.00658 sec ]
 [ GrB_reduce 0.00398 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00863 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00447 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.604 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00691 sec ]
 [ GrB_apply (inplace-op) 0.00391 sec ]
 [ GrB_reduce 0.00247 sec ]
 [ GxB_mxv_optimize_free info 0
iters 22
warmup (3f):     14.328 (threads: 64) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0207 sec ]
 [ GrB_Vector_dup 0.0286 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00439 sec ]
 [ GxB_mxv_optimize 3.15 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0616 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0505 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.4066) (cblas_saxpy) 1.57 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00743 sec ]
 [ GrB_apply (inplace-op) 0.00704 sec ]
 [ GrB_reduce 0.00414 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00923 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0045 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.34166) (cblas_saxpy) 1.41 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0241 sec ]
 [ GrB_reduce 0.00257 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0105 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00358 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.41987) (cblas_saxpy) 1.49 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0362 sec ]
 [ GrB_apply (inplace-op) 0.0219 sec ]
 [ GrB_reduce 0.00405 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00937 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00446 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.38325) (cblas_saxpy) 1.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.032 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0312 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.34894) (cblas_saxpy) 1.42 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0226 sec ]
 [ GrB_apply (inplace-op) 0.00699 sec ]
 [ GrB_reduce 0.00407 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00927 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00449 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.29121) (cblas_saxpy) 1.36 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0221 sec ]
 [ GrB_apply (inplace-op) 0.00418 sec ]
 [ GrB_reduce 0.00253 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0104 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00359 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.32891) (cblas_saxpy) 1.4 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0222 sec ]
 [ GrB_reduce 0.00405 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00949 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00446 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.3497) (cblas_saxpy) 1.41 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00708 sec ]
 [ GrB_apply (inplace-op) 0.00419 sec ]
 [ GrB_reduce 0.00257 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0105 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0036 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.31791) (cblas_saxpy) 1.39 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0241 sec ]
 [ GrB_apply (inplace-op) 0.00715 sec ]
 [ GrB_reduce 0.0188 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00956 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00455 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.37175) (cblas_saxpy) 1.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0323 sec ]
 [ GrB_apply (inplace-op) 0.00722 sec ]
 [ GrB_reduce 0.00265 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0103 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00362 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.34844) (cblas_saxpy) 1.42 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0273 sec ]
 [ GrB_apply (inplace-op) 0.00715 sec ]
 [ GrB_reduce 0.00421 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00951 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00458 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.21526) (cblas_saxpy) 1.28 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00709 sec ]
 [ GrB_apply (inplace-op) 0.00431 sec ]
 [ GrB_reduce 0.00252 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0104 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0036 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.31322) (cblas_saxpy) 1.38 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0223 sec ]
 [ GrB_reduce 0.0041 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0091 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00452 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.26397) (cblas_saxpy) 1.34 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0322 sec ]
 [ GrB_apply (inplace-op) 0.0193 sec ]
 [ GrB_reduce 0.00254 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0106 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00361 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.31106) (cblas_saxpy) 1.38 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0395 sec ]
 [ GrB_apply (inplace-op) 0.0286 sec ]
 [ GrB_reduce 0.0298 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00939 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00446 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.38176) (cblas_saxpy) 1.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00706 sec ]
 [ GrB_apply (inplace-op) 0.0042 sec ]
 [ GrB_reduce 0.00253 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0104 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00362 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.3781) (cblas_saxpy) 1.45 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0311 sec ]
 [ GrB_apply (inplace-op) 0.0354 sec ]
 [ GrB_reduce 0.0322 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0394 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0359 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.36297) (cblas_saxpy) 1.42 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0122 sec ]
 [ GrB_apply (inplace-op) 0.00418 sec ]
 [ GrB_reduce 0.00254 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0104 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00359 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.30879) (cblas_saxpy) 1.38 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0321 sec ]
 [ GrB_apply (inplace-op) 0.0281 sec ]
 [ GrB_reduce 0.0195 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00934 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00448 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.23083) (cblas_saxpy) 1.29 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00701 sec ]
 [ GrB_apply (inplace-op) 0.00427 sec ]
 [ GrB_reduce 0.00259 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0105 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00361 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.36372) (cblas_saxpy) 1.43 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0323 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0286 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.35657) (cblas_saxpy) 1.43 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0323 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0197 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0106 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00362 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.32326) (cblas_saxpy) 1.39 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0159 sec ]
 [ GrB_reduce 0.00405 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00938 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00446 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.32802) (cblas_saxpy) 1.4 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0194 sec ]
 [ GrB_apply (inplace-op) 0.00426 sec ]
 [ GrB_reduce 0.00252 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0104 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0036 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.34864) (cblas_saxpy) 1.42 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.00541 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00916 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00458 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.37429) (cblas_saxpy) 1.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0355 sec ]
 [ GrB_apply (inplace-op) 0.0326 sec ]
 [ GrB_reduce 0.0257 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0306 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0192 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.27661) (cblas_saxpy) 1.35 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0321 sec ]
 [ GrB_apply (inplace-op) 0.0223 sec ]
 [ GrB_reduce 0.00416 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00926 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00456 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.53962) (cblas_saxpy) 1.62 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0356 sec ]
 [ GrB_apply (inplace-op) 0.0326 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.51975) (cblas_saxpy) 1.59 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0337 sec ]
 [ GrB_apply (inplace-op) 0.0387 sec ]
 [ GrB_reduce 0.0321 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0355 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0324 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.50808) (cblas_saxpy) 1.58 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.036 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0197 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0103 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0036 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.5096) (cblas_saxpy) 1.6 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0251 sec ]
 [ GrB_apply (inplace-op) 0.041 sec ]
 [ GrB_reduce 0.0305 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0312 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.37601) (cblas_saxpy) 1.45 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0322 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0326 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.37618) (cblas_saxpy) 1.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0321 sec ]
 [ GrB_apply (inplace-op) 0.0318 sec ]
 [ GrB_reduce 0.00699 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00943 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00452 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.36963) (cblas_saxpy) 1.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0313 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.29147) (cblas_saxpy) 1.35 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00733 sec ]
 [ GrB_apply (inplace-op) 0.0072 sec ]
 [ GrB_reduce 0.00403 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00922 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00447 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.30595) (cblas_saxpy) 1.37 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0201 sec ]
 [ GrB_reduce 0.00254 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0105 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00359 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.32092) (cblas_saxpy) 1.39 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0266 sec ]
 [ GrB_apply (inplace-op) 0.00702 sec ]
 [ GrB_reduce 0.00407 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00915 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00449 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.34232) (cblas_saxpy) 1.41 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0221 sec ]
 [ GrB_apply (inplace-op) 0.00421 sec ]
 [ GrB_reduce 0.00257 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0105 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00358 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.39434) (cblas_saxpy) 1.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.01 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00452 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.36885) (cblas_saxpy) 1.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.00257 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0105 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00364 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.3425) (cblas_saxpy) 1.4 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0077 sec ]
 [ GrB_apply (inplace-op) 0.00706 sec ]
 [ GrB_reduce 0.00414 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00939 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00447 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.16396) (cblas_saxpy) 1.22 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00703 sec ]
 [ GrB_apply (inplace-op) 0.00427 sec ]
 [ GrB_reduce 0.00261 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0102 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00359 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.18956) (cblas_saxpy) 1.25 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0074 sec ]
 [ GrB_apply (inplace-op) 0.00713 sec ]
 [ GrB_reduce 0.00422 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00928 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00456 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.15877) (cblas_saxpy) 1.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.22524) (cblas_saxpy) 1.28 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00713 sec ]
 [ GrB_apply (inplace-op) 0.00724 sec ]
 [ GrB_reduce 0.00417 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00921 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00456 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.28765) (cblas_saxpy) 1.35 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00712 sec ]
 [ GrB_apply (inplace-op) 0.00418 sec ]
 [ GrB_reduce 0.00285 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0104 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0036 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.35939) (cblas_saxpy) 1.43 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.55202) (cblas_saxpy) 1.62 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0322 sec ]
 [ GrB_apply (inplace-op) 0.036 sec ]
 [ GrB_reduce 0.0356 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0553 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.032 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.37777) (cblas_saxpy) 1.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0524 sec ]
 [ GrB_apply (inplace-op) 0.00619 sec ]
 [ GrB_reduce 0.00372 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00974 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00423 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.39653) (cblas_saxpy) 1.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0217 sec ]
 [ GrB_apply (inplace-op) 0.00419 sec ]
 [ GrB_reduce 0.00268 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.01 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00362 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.37205) (cblas_saxpy) 1.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0161 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0215 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00436 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.38387) (cblas_saxpy) 1.45 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0322 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0286 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0314 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.46511) (cblas_saxpy) 1.53 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0187 sec ]
 [ GrB_apply (inplace-op) 0.00638 sec ]
 [ GrB_reduce 0.00374 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00952 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00422 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.16997) (cblas_saxpy) 1.25 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.024 sec ]
 [ GrB_apply (inplace-op) 0.00738 sec ]
 [ GrB_reduce 0.00248 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0102 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00361 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.42031) (cblas_saxpy) 1.5 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0228 sec ]
 [ GrB_apply (inplace-op) 0.00618 sec ]
 [ GrB_reduce 0.00367 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00959 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00423 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.30485) (cblas_saxpy) 1.37 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0284 sec ]
 [ GrB_reduce 0.00248 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0103 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00362 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.2808) (cblas_saxpy) 1.35 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0318 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0238 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00953 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00422 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.21696) (cblas_saxpy) 1.28 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00679 sec ]
 [ GrB_apply (inplace-op) 0.00421 sec ]
 [ GrB_reduce 0.00253 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0103 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00358 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.17473) (cblas_saxpy) 1.24 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0221 sec ]
 [ GrB_apply (inplace-op) 0.00645 sec ]
 [ GrB_reduce 0.00374 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00941 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0042 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.25174) (cblas_saxpy) 1.32 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0322 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.00545 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0104 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00357 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.22422) (cblas_saxpy) 1.29 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0227 sec ]
 [ GrB_apply (inplace-op) 0.00659 sec ]
 [ GrB_reduce 0.00383 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0096 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00424 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.22352) (cblas_saxpy) 1.29 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0295 sec ]
 [ GrB_apply (inplace-op) 0.00411 sec ]
 [ GrB_reduce 0.00249 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0101 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00357 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.15506) (cblas_saxpy) 1.22 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0309 sec ]
 [ GrB_reduce 0.00353 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00969 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00424 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.27318) (cblas_saxpy) 1.34 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.00413 sec ]
 [ GrB_reduce 0.00253 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0101 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00358 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.23221) (cblas_saxpy) 1.29 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00724 sec ]
 [ GrB_apply (inplace-op) 0.00651 sec ]
 [ GrB_reduce 0.0038 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00941 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00424 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.16703) (cblas_saxpy) 1.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.00735 sec ]
 [ GrB_reduce 0.00254 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0102 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00358 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.25255) (cblas_saxpy) 1.32 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0356 sec ]
 [ GrB_reduce 0.0321 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0173 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00426 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.18996) (cblas_saxpy) 1.25 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0361 sec ]
 [ GrB_apply (inplace-op) 0.0202 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0106 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00357 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.20799) (cblas_saxpy) 1.26 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00717 sec ]
 [ GrB_apply (inplace-op) 0.00633 sec ]
 [ GrB_reduce 0.0037 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00935 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00422 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.21635) (cblas_saxpy) 1.29 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0321 sec ]
 [ GrB_apply (inplace-op) 0.032 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.4083) (cblas_saxpy) 1.47 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0224 sec ]
 [ GrB_apply (inplace-op) 0.00648 sec ]
 [ GrB_reduce 0.00381 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00936 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00423 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.19114) (cblas_saxpy) 1.26 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0257 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00356 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.3219) (cblas_saxpy) 1.39 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0361 sec ]
 [ GrB_apply (inplace-op) 0.0286 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0287 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0312 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.3103) (cblas_saxpy) 1.38 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0322 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.00546 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0104 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00359 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.31987) (cblas_saxpy) 1.38 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00731 sec ]
 [ GrB_apply (inplace-op) 0.00642 sec ]
 [ GrB_reduce 0.00371 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00941 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00422 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.23607) (cblas_saxpy) 1.29 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00671 sec ]
 [ GrB_apply (inplace-op) 0.0042 sec ]
 [ GrB_reduce 0.00253 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0102 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00357 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.27127) (cblas_saxpy) 1.34 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0283 sec ]
 [ GrB_reduce 0.00373 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0093 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00426 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.36516) (cblas_saxpy) 1.43 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.032 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0215 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00363 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.36095) (cblas_saxpy) 1.42 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0076 sec ]
 [ GrB_apply (inplace-op) 0.00645 sec ]
 [ GrB_reduce 0.0037 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00954 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00422 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.22971) (cblas_saxpy) 1.3 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0361 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0396 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0323 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.3233) (cblas_saxpy) 1.38 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00728 sec ]
 [ GrB_apply (inplace-op) 0.00646 sec ]
 [ GrB_reduce 0.00367 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0094 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00423 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.18104) (cblas_saxpy) 1.26 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0199 sec ]
 [ GrB_apply (inplace-op) 0.0213 sec ]
 [ GrB_reduce 0.0025 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0102 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00361 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.1546) (cblas_saxpy) 1.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0324 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0137 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00932 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00422 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.39459) (cblas_saxpy) 1.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0434 sec ]
 [ GrB_apply (inplace-op) 0.0051 sec ]
 [ GrB_reduce 0.00251 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0103 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00359 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.34782) (cblas_saxpy) 1.4 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0072 sec ]
 [ GrB_apply (inplace-op) 0.00644 sec ]
 [ GrB_reduce 0.00361 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00938 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00421 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.14093) (cblas_saxpy) 1.21 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.047 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00367 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.31914) (cblas_saxpy) 1.39 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0355 sec ]
 [ GrB_apply (inplace-op) 0.0326 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0361 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0319 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.38097) (cblas_saxpy) 1.45 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.02 sec ]
 [ GrB_reduce 0.00254 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00973 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00357 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.14225) (cblas_saxpy) 1.21 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0241 sec ]
 [ GrB_apply (inplace-op) 0.00627 sec ]
 [ GrB_reduce 0.00354 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00909 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00425 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.37741) (cblas_saxpy) 1.45 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0324 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0212 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00359 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.38849) (cblas_saxpy) 1.48 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00761 sec ]
 [ GrB_apply (inplace-op) 0.0061 sec ]
 [ GrB_reduce 0.0036 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0093 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00424 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.29746) (cblas_saxpy) 1.37 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0281 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0325 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0275 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.40231) (cblas_saxpy) 1.63 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0322 sec ]
 [ GrB_reduce 0.0185 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0089 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00423 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.12444) (cblas_saxpy) 1.18 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.018 sec ]
 [ GrB_apply (inplace-op) 0.00365 sec ]
 [ GrB_reduce 0.00235 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00996 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00305 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.4165) (cblas_saxpy) 1.46 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00698 sec ]
 [ GrB_apply (inplace-op) 0.00628 sec ]
 [ GrB_reduce 0.00355 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00904 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0042 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.12253) (cblas_saxpy) 1.17 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0173 sec ]
 [ GrB_apply (inplace-op) 0.00368 sec ]
 [ GrB_reduce 0.00236 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00997 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00311 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.15457) (cblas_saxpy) 1.2 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00747 sec ]
 [ GrB_apply (inplace-op) 0.00626 sec ]
 [ GrB_reduce 0.00356 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00389 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.12912) (cblas_saxpy) 1.19 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0323 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0287 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00579 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.14163) (cblas_saxpy) 1.19 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0221 sec ]
 [ GrB_apply (inplace-op) 0.00628 sec ]
 [ GrB_reduce 0.00357 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00913 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.30588) (cblas_saxpy) 1.35 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0321 sec ]
 [ GrB_apply (inplace-op) 0.0068 sec ]
 [ GrB_reduce 0.00234 sec ]
 [ GxB_mxv_optimize_free info 0
iters 100
warmup (3f):    148.990 (threads: 64) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 64
trial:  0 time:    13.9472 sec
trial:  1 time:    13.5317 sec
3f: 64: avg time:     13.739 (sec), rate:   2351.191 iters: 22

--------------------------- nthreads: 32
trial:  0 time:    15.2352 sec
trial:  1 time:    15.0564 sec
3f: 32: avg time:     15.146 (sec), rate:   2132.872 iters: 22

  61578415x1 GraphBLAS float vector, sparse by col:
  PR, 61578415 entries

    (0,0)    2.43592e-09
    (1,0)    2.43592e-09
    (2,0)    2.43592e-09
    (3,0)    2.43592e-09
    (4,0)    2.43592e-09
    (5,0)    2.43592e-09
    (6,0)    2.43592e-09
    (7,0)    2.43592e-09
    (8,0)    2.43592e-09
    (9,0)    2.43592e-09
    (10,0)    2.43592e-09
    (11,0)    2.43592e-09
    (12,0)    4.28999e-08
    (13,0)    1.2926e-08
    (14,0)    9.12961e-09
    (15,0)    2.06278e-08
    (16,0)    2.98579e-08
    (17,0)    1.53682e-08
    (18,0)    6.56924e-09
    (19,0)    2.43592e-09
    (20,0)    3.5879e-08
    (21,0)    4.50838e-08
    (22,0)    2.62213e-08
    (23,0)    9.79812e-09
    (24,0)    9.27327e-09
    (25,0)    2.43592e-09
    (26,0)    2.43592e-09
    (27,0)    2.43592e-09
    (28,0)    2.43592e-09
    (29,0)    2.43592e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 64
trial:  0 time:   141.5297 sec
trial:  1 time:   143.5732 sec
3f: 64: avg time:    142.551 (sec), rate:   1030.060 iters: 100

--------------------------- nthreads: 32
trial:  0 time:   127.6524 sec
trial:  1 time:   127.0403 sec
3f: 32: avg time:    127.346 (sec), rate:   1153.048 iters: 100

  61578415x1 GraphBLAS float vector, sparse by col:
  PR, 61578415 entries

    (0,0)    2.82986e-06
    (1,0)    4.12913e-07
    (2,0)    2.66543e-07
    (3,0)    4.65607e-07
    (4,0)    1.70477e-05
    (5,0)    4.12705e-07
    (6,0)    8.33231e-08
    (7,0)    1.10289e-06
    (8,0)    1.76326e-06
    (9,0)    6.77368e-07
    (10,0)    9.44423e-07
    (11,0)    1.65323e-07
    (12,0)    7.8012e-07
    (13,0)    2.76072e-08
    (14,0)    2.04231e-07
    (15,0)    7.505e-07
    (16,0)    5.78122e-06
    (17,0)    2.69996e-08
    (18,0)    6.34142e-07
    (19,0)    2.74336e-07
    (20,0)    1.57666e-06
    (21,0)    6.18638e-07
    (22,0)    6.8039e-07
    (23,0)    3.60927e-07
    (24,0)    6.73362e-07
    (25,0)    7.87918e-08
    (26,0)    3.98534e-08
    (27,0)    5.70966e-09
    (28,0)    2.93436e-07
    (29,0)    3.43484e-09
    ...
MKL version: 202101
threads to test:  64 32
matrix: /home/u32248/GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: /home/u32248/GAP/GAP-web/GAP-web.grb
 [ GxB_Matrix_import_CSR 1.51e-05 sec ]
 [ GxB_set 2.35e-05 sec ]
 [ GrB_apply (shallow-op) generic 1.78 sec ]
 [ GxB_set (transpose) 8.14 sec ]
 [ GrB_Matrix_nvals 6.09e-06 sec ]
 [ GrB_Matrix_dup 0.995 sec ]
original # of edges: 1930292948
 [ GrB_reduce 0.925 sec ]
 [ GrB_reduce wait (zombies: 438, pending: 0) 0.145 sec ]
 [ GrB_Vector_nvals 7.63e-07 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
Matrix has 7236618 empty rows
Matrix has 438 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 7236964) generic add 3.88 sec ]
 [ GrB_Vector_nvals 8.48e-07 sec ]
 [ GrB_Vector_dup 0.0236 sec ]
 [ GxB_Vector_export 3.42e-06 sec ]

==========input graph: nodes: 50636151 edges: 1930292948
diag entries added: 7236964
 [ GrB_Matrix_nvals 1.08e-06 sec ]
read time: 310.769 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0168 sec ]
 [ GrB_Vector_dup 0.0188 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00351 sec ]
 [ GxB_mxv_optimize 2.61e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0215 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0192 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 1.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0186 sec ]
 [ GrB_apply (inplace-op) 0.00376 sec ]
 [ GrB_reduce 0.00225 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00908 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00295 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.299 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00618 sec ]
 [ GrB_apply (inplace-op) 0.00608 sec ]
 [ GrB_reduce 0.00362 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00829 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00407 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.299 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00603 sec ]
 [ GrB_apply (inplace-op) 0.00337 sec ]
 [ GrB_reduce 0.00216 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0093 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00291 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.299 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00714 sec ]
 [ GrB_apply (inplace-op) 0.00605 sec ]
 [ GrB_reduce 0.00371 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00835 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00414 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.296 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00605 sec ]
 [ GrB_apply (inplace-op) 0.00336 sec ]
 [ GrB_reduce 0.00217 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00928 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00293 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.295 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0313 sec ]
 [ GrB_apply (inplace-op) 0.00607 sec ]
 [ GrB_reduce 0.00364 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00819 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00405 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.297 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0138 sec ]
 [ GrB_apply (inplace-op) 0.00329 sec ]
 [ GrB_reduce 0.00207 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0308 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0244 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.291 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00531 sec ]
 [ GrB_apply (inplace-op) 0.00608 sec ]
 [ GrB_reduce 0.00362 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0186 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00416 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.3 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0051 sec ]
 [ GrB_apply (inplace-op) 0.00342 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00864 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.295 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.024 sec ]
 [ GrB_apply (inplace-op) 0.00598 sec ]
 [ GrB_reduce 0.00359 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00781 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00406 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.3 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0112 sec ]
 [ GrB_apply (inplace-op) 0.00339 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0085 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.291 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00522 sec ]
 [ GrB_apply (inplace-op) 0.00603 sec ]
 [ GrB_reduce 0.00359 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00786 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00405 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.298 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00507 sec ]
 [ GrB_apply (inplace-op) 0.00343 sec ]
 [ GrB_reduce 0.00213 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0085 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.295 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00521 sec ]
 [ GrB_apply (inplace-op) 0.00613 sec ]
 [ GrB_reduce 0.00365 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00773 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00406 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.299 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00508 sec ]
 [ GrB_apply (inplace-op) 0.00338 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00849 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.296 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0052 sec ]
 [ GrB_apply (inplace-op) 0.00602 sec ]
 [ GrB_reduce 0.00365 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00774 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00405 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.303 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00507 sec ]
 [ GrB_apply (inplace-op) 0.00339 sec ]
 [ GrB_reduce 0.00215 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00856 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.298 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00521 sec ]
 [ GrB_apply (inplace-op) 0.00598 sec ]
 [ GrB_reduce 0.00364 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00767 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00408 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.296 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00508 sec ]
 [ GrB_apply (inplace-op) 0.00339 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00851 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.286 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00521 sec ]
 [ GrB_apply (inplace-op) 0.00604 sec ]
 [ GrB_reduce 0.0036 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0078 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00406 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.303 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00508 sec ]
 [ GrB_apply (inplace-op) 0.00339 sec ]
 [ GrB_reduce 0.00213 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00853 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.3 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0052 sec ]
 [ GrB_apply (inplace-op) 0.00598 sec ]
 [ GrB_reduce 0.00361 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00781 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00404 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.298 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00507 sec ]
 [ GrB_apply (inplace-op) 0.00341 sec ]
 [ GrB_reduce 0.00215 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00854 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00265 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.294 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0052 sec ]
 [ GrB_apply (inplace-op) 0.00601 sec ]
 [ GrB_reduce 0.00366 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00775 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00406 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.294 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00508 sec ]
 [ GrB_apply (inplace-op) 0.00341 sec ]
 [ GrB_reduce 0.00215 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00851 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.301 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0052 sec ]
 [ GrB_apply (inplace-op) 0.00603 sec ]
 [ GrB_reduce 0.00364 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0094 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00405 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.299 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00508 sec ]
 [ GrB_apply (inplace-op) 0.00338 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00855 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.292 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0052 sec ]
 [ GrB_apply (inplace-op) 0.006 sec ]
 [ GrB_reduce 0.00366 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00764 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00406 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.288 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00507 sec ]
 [ GrB_apply (inplace-op) 0.00341 sec ]
 [ GrB_reduce 0.00213 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00854 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00264 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.295 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0052 sec ]
 [ GrB_apply (inplace-op) 0.006 sec ]
 [ GrB_reduce 0.00362 sec ]
 [ GxB_mxv_optimize_free info 0
iters 30
warmup (3f):     11.508 (threads: 64) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0527 sec ]
 [ GrB_Vector_dup 0.0612 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00428 sec ]
 [ GxB_mxv_optimize 5.83 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.103 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0706 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.686514) (cblas_saxpy) 0.851 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0323 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.036 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.032 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.437819) (cblas_saxpy) 0.508 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0322 sec ]
 [ GrB_apply (inplace-op) 0.0319 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0247 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00747 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.396588) (cblas_saxpy) 0.468 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0326 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0314 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.394476) (cblas_saxpy) 0.468 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0312 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.374102) (cblas_saxpy) 0.452 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00868 sec ]
 [ GrB_apply (inplace-op) 0.00387 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0131 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00271 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.372995) (cblas_saxpy) 0.445 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0321 sec ]
 [ GrB_apply (inplace-op) 0.032 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0325 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0315 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.369758) (cblas_saxpy) 0.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.032 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0247 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.369024) (cblas_saxpy) 0.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0308 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0332 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.370723) (cblas_saxpy) 0.434 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00518 sec ]
 [ GrB_apply (inplace-op) 0.00378 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00746 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00271 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.360929) (cblas_saxpy) 0.432 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0321 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0275 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0248 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0314 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.363223) (cblas_saxpy) 0.432 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0318 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0326 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0353 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.362159) (cblas_saxpy) 0.432 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0322 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0324 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0315 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.365278) (cblas_saxpy) 0.436 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0325 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0314 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.354813) (cblas_saxpy) 0.424 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0324 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0315 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.35346) (cblas_saxpy) 0.424 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0326 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.361128) (cblas_saxpy) 0.432 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0316 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0312 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.368269) (cblas_saxpy) 0.437 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0318 sec ]
 [ GrB_apply (inplace-op) 0.032 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0247 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.353643) (cblas_saxpy) 0.424 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0324 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0316 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.352678) (cblas_saxpy) 0.424 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0318 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0399 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0321 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.390527) (cblas_saxpy) 0.464 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0323 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0324 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0315 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.361239) (cblas_saxpy) 0.432 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0361 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0312 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.361567) (cblas_saxpy) 0.436 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0394 sec ]
 [ GrB_apply (inplace-op) 0.0325 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.036 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.032 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.354662) (cblas_saxpy) 0.424 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.032 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0246 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.35731) (cblas_saxpy) 0.417 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00578 sec ]
 [ GrB_apply (inplace-op) 0.00617 sec ]
 [ GrB_reduce 0.00351 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0067 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00389 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.357136) (cblas_saxpy) 0.433 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0319 sec ]
 [ GrB_apply (inplace-op) 0.0242 sec ]
 [ GrB_reduce 0.00214 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0076 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00273 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.35616) (cblas_saxpy) 0.428 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0314 sec ]
 [ GrB_apply (inplace-op) 0.0321 sec ]
 [ GrB_reduce 0.0317 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0313 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.359394) (cblas_saxpy) 0.428 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0204 sec ]
 [ GrB_apply (inplace-op) 0.00373 sec ]
 [ GrB_reduce 0.00219 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00748 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00273 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.365053) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0213 sec ]
 [ GrB_apply (inplace-op) 0.0062 sec ]
 [ GrB_reduce 0.00347 sec ]
 [ GxB_mxv_optimize_free info 0
iters 28
warmup (3f):     22.519 (threads: 64) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 64
trial:  0 time:    10.4014 sec
trial:  1 time:     9.0751 sec
3f: 64: avg time:      9.738 (sec), rate:   5946.517 iters: 30

--------------------------- nthreads: 32
trial:  0 time:     8.9321 sec
trial:  1 time:     8.8388 sec
3f: 32: avg time:      8.885 (sec), rate:   6517.263 iters: 30

  50636151x1 GraphBLAS float vector, sparse by col:
  PR, 50636151 entries

    (0,0)    3.04448e-09
    (1,0)    3.04448e-09
    (2,0)    3.04448e-09
    (3,0)    3.04448e-09
    (4,0)    3.04448e-09
    (5,0)    3.04448e-09
    (6,0)    3.04448e-09
    (7,0)    3.04448e-09
    (8,0)    3.04448e-09
    (9,0)    3.04448e-09
    (10,0)    5.78254e-09
    (11,0)    3.31792e-09
    (12,0)    3.04448e-09
    (13,0)    3.04448e-09
    (14,0)    3.04448e-09
    (15,0)    3.04448e-09
    (16,0)    3.04448e-09
    (17,0)    3.04448e-09
    (18,0)    3.06634e-09
    (19,0)    3.06634e-09
    (20,0)    3.06634e-09
    (21,0)    3.06634e-09
    (22,0)    3.06634e-09
    (23,0)    3.06634e-09
    (24,0)    3.05126e-09
    (25,0)    3.05126e-09
    (26,0)    3.05126e-09
    (27,0)    3.05126e-09
    (28,0)    3.05126e-09
    (29,0)    3.05126e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 64
trial:  0 time:    19.0939 sec
trial:  1 time:    18.4478 sec
3f: 64: avg time:     18.771 (sec), rate:   2879.366 iters: 28

--------------------------- nthreads: 32
trial:  0 time:    16.8947 sec
trial:  1 time:    15.4709 sec
3f: 32: avg time:     16.183 (sec), rate:   3339.855 iters: 28

  50636151x1 GraphBLAS float vector, sparse by col:
  PR, 50636151 entries

    (0,0)    3.02613e-09
    (1,0)    3.02613e-09
    (2,0)    3.02613e-09
    (3,0)    3.02613e-09
    (4,0)    3.02613e-09
    (5,0)    3.02613e-09
    (6,0)    3.02613e-09
    (7,0)    3.02613e-09
    (8,0)    3.02613e-09
    (9,0)    3.02613e-09
    (10,0)    5.58832e-09
    (11,0)    3.08942e-09
    (12,0)    3.02613e-09
    (13,0)    3.02613e-09
    (14,0)    3.02613e-09
    (15,0)    3.02613e-09
    (16,0)    3.02613e-09
    (17,0)    3.02613e-09
    (18,0)    3.04325e-09
    (19,0)    3.04325e-09
    (20,0)    3.04325e-09
    (21,0)    3.04325e-09
    (22,0)    3.04325e-09
    (23,0)    3.04325e-09
    (24,0)    2.98567e-09
    (25,0)    2.98567e-09
    (26,0)    2.98567e-09
    (27,0)    2.98567e-09
    (28,0)    2.98567e-09
    (29,0)    2.98567e-09
    ...
MKL version: 202101
threads to test:  64 32
matrix: /home/u32248/GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: /home/u32248/GAP/GAP-road/GAP-road.grb
 [ GxB_Matrix_import_CSR 1.27e-05 sec ]
 [ GxB_set 2.22e-05 sec ]
 [ GrB_apply (shallow-op) generic 0.0877 sec ]
 [ GxB_set (transpose) 0.793 sec ]
 [ GrB_Matrix_nvals 5.72e-06 sec ]
 [ GrB_Matrix_dup 0.104 sec ]
original # of edges: 57708624
 [ GrB_reduce 0.283 sec ]
 [ GrB_reduce 0.0451 sec ]
 [ GrB_Vector_nvals 1.33e-06 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_reduce 0.64 sec ]
 [ GrB_Vector_nvals 7.57e-07 sec ]
 [ GrB_Vector_dup 0.0283 sec ]
 [ GxB_Vector_export 5.87e-06 sec ]

==========input graph: nodes: 23947347 edges: 57708624
diag entries added: 0
 [ GrB_Matrix_nvals 1.13e-06 sec ]
read time: 8.44623 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.014 sec ]
 [ GrB_Vector_dup 0.0196 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00156 sec ]
 [ GxB_mxv_optimize 2.86e-06 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0193 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0201 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.141 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00904 sec ]
 [ GrB_apply (inplace-op) 0.00097 sec ]
 [ GrB_reduce 0.00071 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0027 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000768 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0151 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000927 sec ]
 [ GrB_reduce 0.000637 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0027 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000814 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.033 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00159 sec ]
 [ GrB_apply (inplace-op) 0.000927 sec ]
 [ GrB_reduce 0.000642 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00271 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000792 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0581 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0016 sec ]
 [ GrB_apply (inplace-op) 0.000927 sec ]
 [ GrB_reduce 0.000636 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00269 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00156 sec ]
 [ GrB_apply (inplace-op) 0.000901 sec ]
 [ GrB_reduce 0.000613 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00271 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000762 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0151 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000927 sec ]
 [ GrB_reduce 0.000618 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00271 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0151 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00156 sec ]
 [ GrB_apply (inplace-op) 0.000902 sec ]
 [ GrB_reduce 0.000628 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00277 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000761 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0152 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00156 sec ]
 [ GrB_apply (inplace-op) 0.000923 sec ]
 [ GrB_reduce 0.000625 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00275 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000797 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00158 sec ]
 [ GrB_apply (inplace-op) 0.000902 sec ]
 [ GrB_reduce 0.000612 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00274 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000768 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0152 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00156 sec ]
 [ GrB_apply (inplace-op) 0.000934 sec ]
 [ GrB_reduce 0.000626 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00269 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000824 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0153 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00158 sec ]
 [ GrB_apply (inplace-op) 0.00089 sec ]
 [ GrB_reduce 0.000618 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00273 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00077 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00156 sec ]
 [ GrB_apply (inplace-op) 0.000943 sec ]
 [ GrB_reduce 0.000617 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00272 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000807 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000898 sec ]
 [ GrB_reduce 0.000617 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00274 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000772 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0152 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00158 sec ]
 [ GrB_apply (inplace-op) 0.000901 sec ]
 [ GrB_reduce 0.000632 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00267 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000798 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00639 sec ]
 [ GrB_apply (inplace-op) 0.00089 sec ]
 [ GrB_reduce 0.000609 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00273 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000759 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0151 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000923 sec ]
 [ GrB_reduce 0.00062 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0027 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000809 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00159 sec ]
 [ GrB_apply (inplace-op) 0.000902 sec ]
 [ GrB_reduce 0.000621 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00273 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000761 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0151 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000905 sec ]
 [ GrB_reduce 0.000633 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00272 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000787 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00158 sec ]
 [ GrB_apply (inplace-op) 0.0009 sec ]
 [ GrB_reduce 0.000625 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00273 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000768 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0151 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000915 sec ]
 [ GrB_reduce 0.000615 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00272 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000888 sec ]
 [ GrB_reduce 0.000617 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00272 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000775 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00156 sec ]
 [ GrB_apply (inplace-op) 0.000902 sec ]
 [ GrB_reduce 0.000609 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00272 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000793 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0149 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.00092 sec ]
 [ GrB_reduce 0.000615 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00273 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000781 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00158 sec ]
 [ GrB_apply (inplace-op) 0.000916 sec ]
 [ GrB_reduce 0.000629 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00274 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0008 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00156 sec ]
 [ GrB_apply (inplace-op) 0.000893 sec ]
 [ GrB_reduce 0.000627 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00271 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000807 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00158 sec ]
 [ GrB_apply (inplace-op) 0.00091 sec ]
 [ GrB_reduce 0.000624 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0102 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000791 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00465 sec ]
 [ GrB_apply (inplace-op) 0.000857 sec ]
 [ GrB_reduce 0.000592 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00273 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000761 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0151 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000911 sec ]
 [ GrB_reduce 0.000653 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0027 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0008 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0149 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000895 sec ]
 [ GrB_reduce 0.00063 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00271 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000762 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0151 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000906 sec ]
 [ GrB_reduce 0.000619 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00272 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000798 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0192 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00442 sec ]
 [ GrB_apply (inplace-op) 0.000862 sec ]
 [ GrB_reduce 0.000612 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0183 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000847 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00159 sec ]
 [ GrB_apply (inplace-op) 0.000904 sec ]
 [ GrB_reduce 0.00062 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00269 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000799 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000901 sec ]
 [ GrB_reduce 0.000611 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00269 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000774 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000926 sec ]
 [ GrB_reduce 0.000625 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00271 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00156 sec ]
 [ GrB_apply (inplace-op) 0.000898 sec ]
 [ GrB_reduce 0.000613 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00271 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000776 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.015 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000925 sec ]
 [ GrB_reduce 0.000625 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00268 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000853 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0148 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0056 sec ]
 [ GrB_apply (inplace-op) 0.000887 sec ]
 [ GrB_reduce 0.000611 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0181 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000892 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0149 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00157 sec ]
 [ GrB_apply (inplace-op) 0.000903 sec ]
 [ GrB_reduce 0.000626 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00252 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000787 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0149 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00155 sec ]
 [ GrB_apply (inplace-op) 0.000911 sec ]
 [ GrB_reduce 0.000608 sec ]
 [ GxB_mxv_optimize_free info 0
iters 39
warmup (3f):      1.172 (threads: 64) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.04 sec ]
 [ GrB_Vector_dup 0.0632 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.000922 sec ]
 [ GxB_mxv_optimize 0.325 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0615 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0392 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0642913) (cblas_saxpy) 0.101 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00188 sec ]
 [ GrB_apply (inplace-op) 0.00105 sec ]
 [ GrB_reduce 0.000771 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00273 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000843 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0284303) (cblas_saxpy) 0.0602 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00206 sec ]
 [ GrB_apply (inplace-op) 0.0012 sec ]
 [ GrB_reduce 0.00083 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0029 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000918 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0282582) (cblas_saxpy) 0.0582 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00193 sec ]
 [ GrB_apply (inplace-op) 0.0012 sec ]
 [ GrB_reduce 0.000825 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00278 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000844 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0283403) (cblas_saxpy) 0.0643 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00204 sec ]
 [ GrB_apply (inplace-op) 0.00124 sec ]
 [ GrB_reduce 0.000826 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00288 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000903 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0283191) (cblas_saxpy) 0.0561 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00217 sec ]
 [ GrB_apply (inplace-op) 0.00127 sec ]
 [ GrB_reduce 0.000889 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00304 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000937 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0282377) (cblas_saxpy) 0.0636 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00208 sec ]
 [ GrB_apply (inplace-op) 0.00117 sec ]
 [ GrB_reduce 0.000845 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0029 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000919 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0297029) (cblas_saxpy) 0.0779 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00188 sec ]
 [ GrB_apply (inplace-op) 0.00108 sec ]
 [ GrB_reduce 0.000786 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00273 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000832 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0284647) (cblas_saxpy) 0.0728 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00199 sec ]
 [ GrB_apply (inplace-op) 0.00112 sec ]
 [ GrB_reduce 0.000813 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00283 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000898 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0284075) (cblas_saxpy) 0.0722 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00203 sec ]
 [ GrB_apply (inplace-op) 0.00113 sec ]
 [ GrB_reduce 0.000828 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00284 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000881 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0289234) (cblas_saxpy) 0.0661 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.002 sec ]
 [ GrB_apply (inplace-op) 0.00114 sec ]
 [ GrB_reduce 0.000833 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00286 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000891 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0271705) (cblas_saxpy) 0.0554 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00203 sec ]
 [ GrB_apply (inplace-op) 0.00127 sec ]
 [ GrB_reduce 0.000857 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00289 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000886 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.018968) (cblas_saxpy) 0.0709 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0233 sec ]
 [ GrB_apply (inplace-op) 0.00111 sec ]
 [ GrB_reduce 0.000821 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00287 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000893 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0186302) (cblas_saxpy) 0.0669 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00193 sec ]
 [ GrB_apply (inplace-op) 0.00111 sec ]
 [ GrB_reduce 0.000815 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00276 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000867 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.017235) (cblas_saxpy) 0.0463 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0019 sec ]
 [ GrB_apply (inplace-op) 0.00109 sec ]
 [ GrB_reduce 0.000795 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00279 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000885 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0173688) (cblas_saxpy) 0.0525 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00192 sec ]
 [ GrB_apply (inplace-op) 0.00111 sec ]
 [ GrB_reduce 0.000796 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00281 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000866 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0173037) (cblas_saxpy) 0.0444 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00191 sec ]
 [ GrB_apply (inplace-op) 0.00111 sec ]
 [ GrB_reduce 0.000827 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00278 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000893 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0172247) (cblas_saxpy) 0.0564 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.002 sec ]
 [ GrB_apply (inplace-op) 0.00112 sec ]
 [ GrB_reduce 0.000848 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00284 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000883 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0173187) (cblas_saxpy) 0.0704 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00948 sec ]
 [ GrB_apply (inplace-op) 0.00108 sec ]
 [ GrB_reduce 0.000789 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00279 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000876 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0260627) (cblas_saxpy) 0.0769 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00559 sec ]
 [ GrB_apply (inplace-op) 0.00113 sec ]
 [ GrB_reduce 0.000848 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00287 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000893 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0261612) (cblas_saxpy) 0.0544 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00207 sec ]
 [ GrB_apply (inplace-op) 0.00121 sec ]
 [ GrB_reduce 0.000837 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00293 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00091 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0262143) (cblas_saxpy) 0.0561 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.002 sec ]
 [ GrB_apply (inplace-op) 0.00121 sec ]
 [ GrB_reduce 0.000823 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00284 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000852 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0289088) (cblas_saxpy) 0.0822 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.032 sec ]
 [ GrB_apply (inplace-op) 0.0251 sec ]
 [ GrB_reduce 0.000797 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00285 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000897 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0264697) (cblas_saxpy) 0.0601 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00205 sec ]
 [ GrB_apply (inplace-op) 0.00121 sec ]
 [ GrB_reduce 0.000827 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00289 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00089 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0277644) (cblas_saxpy) 0.0744 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00202 sec ]
 [ GrB_apply (inplace-op) 0.00121 sec ]
 [ GrB_reduce 0.000948 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00287 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00092 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0282191) (cblas_saxpy) 0.0615 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00208 sec ]
 [ GrB_apply (inplace-op) 0.00113 sec ]
 [ GrB_reduce 0.000938 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00281 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000843 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0280802) (cblas_saxpy) 0.0601 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00188 sec ]
 [ GrB_apply (inplace-op) 0.00111 sec ]
 [ GrB_reduce 0.000849 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00274 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000879 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0278134) (cblas_saxpy) 0.0524 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0019 sec ]
 [ GrB_apply (inplace-op) 0.00118 sec ]
 [ GrB_reduce 0.000862 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00278 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000835 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0278677) (cblas_saxpy) 0.0604 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00252 sec ]
 [ GrB_apply (inplace-op) 0.00118 sec ]
 [ GrB_reduce 0.000876 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00285 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000895 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.02812) (cblas_saxpy) 0.0587 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00193 sec ]
 [ GrB_apply (inplace-op) 0.00126 sec ]
 [ GrB_reduce 0.000921 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00278 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000861 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0276869) (cblas_saxpy) 0.0792 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00551 sec ]
 [ GrB_apply (inplace-op) 0.00114 sec ]
 [ GrB_reduce 0.000933 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0028 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000884 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0278252) (cblas_saxpy) 0.073 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00196 sec ]
 [ GrB_apply (inplace-op) 0.00116 sec ]
 [ GrB_reduce 0.000891 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00283 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0009 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0281823) (cblas_saxpy) 0.0576 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00192 sec ]
 [ GrB_apply (inplace-op) 0.00112 sec ]
 [ GrB_reduce 0.000869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0028 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000892 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0281205) (cblas_saxpy) 0.0603 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.002 sec ]
 [ GrB_apply (inplace-op) 0.00116 sec ]
 [ GrB_reduce 0.000918 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00283 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000882 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0280524) (cblas_saxpy) 0.0601 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00196 sec ]
 [ GrB_apply (inplace-op) 0.00122 sec ]
 [ GrB_reduce 0.000918 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0028 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000911 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.027911) (cblas_saxpy) 0.0568 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00193 sec ]
 [ GrB_apply (inplace-op) 0.00116 sec ]
 [ GrB_reduce 0.000914 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0028 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000844 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.027627) (cblas_saxpy) 0.0595 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00191 sec ]
 [ GrB_apply (inplace-op) 0.0012 sec ]
 [ GrB_reduce 0.000872 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00276 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000911 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0282) (cblas_saxpy) 0.0704 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00195 sec ]
 [ GrB_apply (inplace-op) 0.00113 sec ]
 [ GrB_reduce 0.000935 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00283 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000889 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0281834) (cblas_saxpy) 0.0762 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00556 sec ]
 [ GrB_apply (inplace-op) 0.00115 sec ]
 [ GrB_reduce 0.000969 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00284 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.000902 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0284224) (cblas_saxpy) 0.0645 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00194 sec ]
 [ GrB_apply (inplace-op) 0.00112 sec ]
 [ GrB_reduce 0.000945 sec ]
 [ GxB_mxv_optimize_free info 0
iters 39
warmup (3f):      3.435 (threads: 64) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 64
trial:  0 time:     0.9488 sec
trial:  1 time:     0.9630 sec
3f: 64: avg time:      0.956 (sec), rate:   2354.410 iters: 39

--------------------------- nthreads: 32
trial:  0 time:     1.0832 sec
trial:  1 time:     1.0233 sec
3f: 32: avg time:      1.053 (sec), rate:   2136.889 iters: 39

  23947347x1 GraphBLAS float vector, sparse by col:
  PR, 23947347 entries

    (0,0)    4.75579e-08
    (1,0)    3.20307e-08
    (2,0)    4.95218e-08
    (3,0)    3.69073e-08
    (4,0)    3.75892e-08
    (5,0)    5.17024e-08
    (6,0)    5.35032e-08
    (7,0)    2.14235e-08
    (8,0)    3.78229e-08
    (9,0)    4.74456e-08
    (10,0)    4.79489e-08
    (11,0)    4.80614e-08
    (12,0)    4.3424e-08
    (13,0)    5.12736e-08
    (14,0)    3.66438e-08
    (15,0)    3.99929e-08
    (16,0)    6.02066e-08
    (17,0)    2.33178e-08
    (18,0)    2.27628e-08
    (19,0)    5.77866e-08
    (20,0)    3.66638e-08
    (21,0)    3.55786e-08
    (22,0)    6.66583e-08
    (23,0)    2.18603e-08
    (24,0)    2.51435e-08
    (25,0)    5.51881e-08
    (26,0)    5.21458e-08
    (27,0)    3.66357e-08
    (28,0)    7.3439e-08
    (29,0)    5.27261e-08
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 64
trial:  0 time:     4.2065 sec
trial:  1 time:     3.7725 sec
3f: 64: avg time:      3.990 (sec), rate:    564.136 iters: 39

--------------------------- nthreads: 32
trial:  0 time:     2.1196 sec
trial:  1 time:     2.4761 sec
3f: 32: avg time:      2.298 (sec), rate:    979.451 iters: 39

  23947347x1 GraphBLAS float vector, sparse by col:
  PR, 23947347 entries

    (0,0)    4.75579e-08
    (1,0)    3.20307e-08
    (2,0)    4.95218e-08
    (3,0)    3.69073e-08
    (4,0)    3.75892e-08
    (5,0)    5.17024e-08
    (6,0)    5.35032e-08
    (7,0)    2.14235e-08
    (8,0)    3.78229e-08
    (9,0)    4.74456e-08
    (10,0)    4.79489e-08
    (11,0)    4.80614e-08
    (12,0)    4.3424e-08
    (13,0)    5.12736e-08
    (14,0)    3.66438e-08
    (15,0)    3.99929e-08
    (16,0)    6.02066e-08
    (17,0)    2.33178e-08
    (18,0)    2.27628e-08
    (19,0)    5.77866e-08
    (20,0)    3.66638e-08
    (21,0)    3.55786e-08
    (22,0)    6.66583e-08
    (23,0)    2.18603e-08
    (24,0)    2.51435e-08
    (25,0)    5.51881e-08
    (26,0)    5.21458e-08
    (27,0)    3.66357e-08
    (28,0)    7.3439e-08
    (29,0)    5.27261e-08
    ...
