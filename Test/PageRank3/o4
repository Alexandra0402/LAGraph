threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 1.18e-05 sec ]
 [ GxB_set 6.77e-06 sec ]
 [ GrB_apply (shallow-op) generic 2.37 sec ]
 [ GxB_set (transpose) 69.2 sec ]
 [ GrB_Matrix_nvals 1.12e-06 sec ]
 [ GrB_Matrix_dup 1.57 sec ]
original # of edges: 4223264644
 [ GrB_reduce generic 22.3 sec ]
 [ GrB_reduce generic wait (zombies: 71143742, pending: 0) 0.963 sec ]
 [ GrB_Vector_nvals 5.76e-07 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
Matrix has 71143742 empty rows
Matrix has 71143742 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 71143742) generic add generic 24.6 sec ]
 [ GrB_Vector_nvals 4.2e-07 sec ]
 [ GrB_Vector_dup 0.0652 sec ]
 [ GxB_Vector_export 1.65e-06 sec ]

==========input graph: nodes: 134217726 edges: 4223264644
diag entries added: 71143742
 [ GrB_Matrix_nvals 5.2e-07 sec ]
read time: 181.205 sec
# of trials: 16
chunk: 65536
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0719 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0763 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0711 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.0087 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0251 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00884 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00881 sec ]
warmup (3f):     21.740 (threads: 40)

Method 3f:

--------------------------- nthreads: 40
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0723 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0771 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0726 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00886 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.0087 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0256 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0188 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
trial:  0 time:    21.7323 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0745 sec ]
 [ GrB_Vector_dup 0.0672 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0767 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0717 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00864 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00885 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00864 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00995 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
trial:  1 time:    21.7489 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0711 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0192 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0776 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0728 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0191 sec ]
 [ GrB_reduce 0.00882 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0329 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0191 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00889 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0261 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
trial:  2 time:    21.7341 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0728 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0764 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0715 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00888 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00864 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0264 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0192 sec ]
 [ GrB_reduce 0.00931 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0324 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00892 sec ]
trial:  3 time:    21.7550 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0723 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0764 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0713 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0253 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00887 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0186 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0188 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0324 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00872 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00886 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00866 sec ]
trial:  4 time:    21.7502 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0712 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0764 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.071 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00875 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.033 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00891 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.025 sec ]
 [ GrB_apply (inplace-op) 0.0188 sec ]
 [ GrB_reduce 0.0089 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00883 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.98 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
trial:  5 time:    21.7513 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0714 sec ]
 [ GrB_Vector_dup 0.0661 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0764 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0714 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0274 sec ]
 [ GrB_apply (inplace-op) 0.0225 sec ]
 [ GrB_reduce 0.013 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0352 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0206 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0253 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0253 sec ]
 [ GrB_apply (inplace-op) 0.0196 sec ]
 [ GrB_reduce 0.00891 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00864 sec ]
trial:  6 time:    21.7985 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0718 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0764 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0716 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0253 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0188 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.0093 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0254 sec ]
 [ GrB_apply (inplace-op) 0.0197 sec ]
 [ GrB_reduce 0.00887 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0328 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0205 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00865 sec ]
trial:  7 time:    21.7469 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0724 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0764 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.071 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0253 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00886 sec ]
trial:  8 time:    21.7410 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.072 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0763 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.071 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0256 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00887 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0191 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.98 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.0087 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00889 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00887 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00888 sec ]
trial:  9 time:    21.7443 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0721 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0763 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0719 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0259 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00864 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0323 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00876 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.019 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
trial: 10 time:    21.7545 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0725 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0763 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0711 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.033 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0189 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.0101 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0251 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00885 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0251 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00867 sec ]
trial: 11 time:    21.7252 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0721 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0773 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0727 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0254 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00864 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00886 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0254 sec ]
 [ GrB_apply (inplace-op) 0.0191 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0195 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00865 sec ]
trial: 12 time:    21.7585 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0711 sec ]
 [ GrB_Vector_dup 0.0654 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0765 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0718 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.019 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00889 sec ]
trial: 13 time:    21.7405 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0722 sec ]
 [ GrB_Vector_dup 0.068 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0763 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0737 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.0087 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.96 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0186 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00865 sec ]
trial: 14 time:    21.7491 sec
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0716 sec ]
 [ GrB_Vector_dup 0.0653 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0764 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0728 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00891 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0326 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0194 sec ]
 [ GrB_reduce 0.00887 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0329 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.02 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 2.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
trial: 15 time:    21.7493 sec
3f: 40: avg time:     21.749 (sec), rate:   1359.291 iters: 7
