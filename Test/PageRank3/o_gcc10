MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 1.65e-05 sec ]
 [ GxB_set 4.19e-06 sec ]
 [ GrB_apply (shallow-op) generic 9.29 sec ]
 [ GxB_set (transpose) 71.2 sec ]
 [ GrB_Matrix_nvals 2.21e-06 sec ]
 [ GrB_Matrix_dup 1.94 sec ]
original # of edges: 4223264644
 [ GrB_reduce 20.1 sec ]
 [ GrB_reduce wait (zombies: 71143742, pending: 0) 0.396 sec ]
 [ GrB_Vector_nvals 6.79e-07 sec ]
 [ GrB_Vector_nvals 7.22e-08 sec ]
Matrix has 71143742 empty rows
Matrix has 71143742 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 71143742) generic add 25.4 sec ]
 [ GrB_Vector_nvals 4.73e-07 sec ]
 [ GrB_Vector_dup 0.0659 sec ]
 [ GxB_Vector_export 4.13e-06 sec ]

==========input graph: nodes: 134217726 edges: 4223264644
diag entries added: 71143742
 [ GrB_Matrix_nvals 9.19e-07 sec ]
read time: 220.818 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0727 sec ]
 [ GrB_Vector_dup 0.0603 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0184 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0717 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0712 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0298 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00872 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0327 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0189 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0193 sec ]
 [ GrB_reduce 0.00887 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0325 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0253 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00977 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0326 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0203 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00864 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0193 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00865 sec ]
warmup (3f):     23.580 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0715 sec ]
 [ GrB_Vector_dup 0.0603 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0717 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0715 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.4398) (cblas_saxpy) 3.47 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.44706) (cblas_saxpy) 3.47 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00889 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0183 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.44993) (cblas_saxpy) 3.48 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.5225) (cblas_saxpy) 3.55 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.61334) (cblas_saxpy) 3.64 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.019 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.46592) (cblas_saxpy) 3.49 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.025 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0323 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.50974) (cblas_saxpy) 3.54 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00865 sec ]
warmup (3f):     25.595 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    23.5463 sec
trial:  1 time:    23.5663 sec
3f: 40: avg time:     23.556 (sec), rate:   1254.987 iters: 7

--------------------------- nthreads: 20
trial:  0 time:    24.7269 sec
trial:  1 time:    24.7262 sec
3f: 20: avg time:     24.727 (sec), rate:   1195.592 iters: 7

  134217726x1 GraphBLAS float vector, sparse by col:
  PR, 134217726 entries

    (0,0)    1.11759e-09
    (1,0)    1.21291e-09
    (2,0)    1.21297e-09
    (3,0)    1.11759e-09
    (4,0)    1.11759e-09
    (5,0)    1.11759e-09
    (6,0)    1.11759e-09
    (7,0)    1.11759e-09
    (8,0)    1.11759e-09
    (9,0)    1.52821e-09
    (10,0)    1.11759e-09
    (11,0)    2.92415e-09
    (12,0)    1.11759e-09
    (13,0)    1.11759e-09
    (14,0)    1.68495e-09
    (15,0)    1.60349e-09
    (16,0)    1.11759e-09
    (17,0)    1.11759e-09
    (18,0)    1.11759e-09
    (19,0)    1.6263e-09
    (20,0)    1.11759e-09
    (21,0)    1.11759e-09
    (22,0)    1.11759e-09
    (23,0)    1.11759e-09
    (24,0)    1.1994e-09
    (25,0)    1.45084e-09
    (26,0)    9.28271e-09
    (27,0)    1.35811e-09
    (28,0)    2.13301e-09
    (29,0)    1.52126e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    25.6144 sec
trial:  1 time:    25.4871 sec
3f: 40: avg time:     25.551 (sec), rate:   1157.024 iters: 7

--------------------------- nthreads: 20
trial:  0 time:    25.4633 sec
trial:  1 time:    25.4644 sec
3f: 20: avg time:     25.464 (sec), rate:   1160.973 iters: 7

  134217726x1 GraphBLAS float vector, sparse by col:
  PR, 134217726 entries

    (0,0)    1.11759e-09
    (1,0)    1.21291e-09
    (2,0)    1.21297e-09
    (3,0)    1.11759e-09
    (4,0)    1.11759e-09
    (5,0)    1.11759e-09
    (6,0)    1.11759e-09
    (7,0)    1.11759e-09
    (8,0)    1.11759e-09
    (9,0)    1.52822e-09
    (10,0)    1.11759e-09
    (11,0)    2.92418e-09
    (12,0)    1.11759e-09
    (13,0)    1.11759e-09
    (14,0)    1.68496e-09
    (15,0)    1.60349e-09
    (16,0)    1.11759e-09
    (17,0)    1.11759e-09
    (18,0)    1.11759e-09
    (19,0)    1.62631e-09
    (20,0)    1.11759e-09
    (21,0)    1.11759e-09
    (22,0)    1.11759e-09
    (23,0)    1.11759e-09
    (24,0)    1.1994e-09
    (25,0)    1.45085e-09
    (26,0)    9.28282e-09
    (27,0)    1.35812e-09
    (28,0)    2.13303e-09
    (29,0)    1.52126e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
 [ GxB_Matrix_import_CSR 1.67e-05 sec ]
 [ GxB_set 3.94e-06 sec ]
 [ GrB_apply (shallow-op) generic 7.31 sec ]
 [ GxB_set (transpose) 75.9 sec ]
 [ GrB_Matrix_nvals 1.75e-06 sec ]
 [ GrB_Matrix_dup 1.97 sec ]
original # of edges: 4294966740
 [ GrB_reduce 24.6 sec ]
 [ GrB_reduce 0.336 sec ]
 [ GrB_Vector_nvals 5.77e-07 sec ]
 [ GrB_Vector_nvals 5.1e-08 sec ]
 [ GrB_reduce 24.5 sec ]
 [ GrB_Vector_nvals 4.26e-07 sec ]
 [ GrB_Vector_dup 0.061 sec ]
 [ GxB_Vector_export 3.33e-06 sec ]

==========input graph: nodes: 134217728 edges: 4294966740
diag entries added: 0
 [ GrB_Matrix_nvals 7.98e-07 sec ]
read time: 201.599 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0707 sec ]
 [ GrB_Vector_dup 0.0652 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0184 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0766 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0706 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.74 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0282 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00894 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.033 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.74 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0204 sec ]
 [ GrB_reduce 0.00956 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.74 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.74 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0326 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.74 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.74 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00867 sec ]
warmup (3f):     29.331 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0725 sec ]
 [ GrB_Vector_dup 0.0652 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0783 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0718 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.03764) (cblas_saxpy) 5.06 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0251 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0325 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.07193) (cblas_saxpy) 5.1 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00888 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0323 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.94677) (cblas_saxpy) 4.97 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.01964) (cblas_saxpy) 5.05 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00891 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.97848) (cblas_saxpy) 5 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.0082) (cblas_saxpy) 5.03 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00889 sec ]
warmup (3f):     31.098 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    29.3246 sec
trial:  1 time:    29.3370 sec
3f: 40: avg time:     29.331 (sec), rate:    878.592 iters: 6

--------------------------- nthreads: 20
trial:  0 time:    30.3868 sec
trial:  1 time:    30.3808 sec
3f: 20: avg time:     30.384 (sec), rate:    848.143 iters: 6

  134217728x1 GraphBLAS float vector, sparse by col:
  PR, 134217728 entries

    (0,0)    8.25985e-09
    (1,0)    7.23841e-09
    (2,0)    8.28931e-09
    (3,0)    7.71854e-09
    (4,0)    8.2541e-09
    (5,0)    9.05594e-09
    (6,0)    8.01646e-09
    (7,0)    7.62977e-09
    (8,0)    8.79943e-09
    (9,0)    7.01721e-09
    (10,0)    7.44634e-09
    (11,0)    7.82501e-09
    (12,0)    9.04071e-09
    (13,0)    4.5071e-09
    (14,0)    6.88887e-09
    (15,0)    5.91511e-09
    (16,0)    9.80993e-09
    (17,0)    7.49341e-09
    (18,0)    7.61506e-09
    (19,0)    6.4787e-09
    (20,0)    6.24013e-09
    (21,0)    7.03518e-09
    (22,0)    7.64445e-09
    (23,0)    7.88618e-09
    (24,0)    6.68367e-09
    (25,0)    8.81481e-09
    (26,0)    7.06337e-09
    (27,0)    5.87844e-09
    (28,0)    7.54203e-09
    (29,0)    8.4015e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    31.1961 sec
trial:  1 time:    31.2192 sec
3f: 40: avg time:     31.208 (sec), rate:    825.752 iters: 6

--------------------------- nthreads: 20
trial:  0 time:    31.2267 sec
trial:  1 time:    31.1520 sec
3f: 20: avg time:     31.189 (sec), rate:    826.237 iters: 6

  134217728x1 GraphBLAS float vector, sparse by col:
  PR, 134217728 entries

    (0,0)    8.25985e-09
    (1,0)    7.23841e-09
    (2,0)    8.28931e-09
    (3,0)    7.71854e-09
    (4,0)    8.2541e-09
    (5,0)    9.05594e-09
    (6,0)    8.01646e-09
    (7,0)    7.62977e-09
    (8,0)    8.79943e-09
    (9,0)    7.01721e-09
    (10,0)    7.44634e-09
    (11,0)    7.82501e-09
    (12,0)    9.04071e-09
    (13,0)    4.5071e-09
    (14,0)    6.88888e-09
    (15,0)    5.91511e-09
    (16,0)    9.80993e-09
    (17,0)    7.49341e-09
    (18,0)    7.61506e-09
    (19,0)    6.4787e-09
    (20,0)    6.24013e-09
    (21,0)    7.03518e-09
    (22,0)    7.64445e-09
    (23,0)    7.88618e-09
    (24,0)    6.68367e-09
    (25,0)    8.81481e-09
    (26,0)    7.06337e-09
    (27,0)    5.87844e-09
    (28,0)    7.54203e-09
    (29,0)    8.4015e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
 [ GxB_Matrix_import_CSR 1.06e-05 sec ]
 [ GxB_set 3.15e-06 sec ]
 [ GrB_apply (shallow-op) generic 0.991 sec ]
 [ GxB_set (transpose) 20.3 sec ]
 [ GrB_Matrix_nvals 1.9e-05 sec ]
 [ GrB_Matrix_dup 0.682 sec ]
original # of edges: 1468364884
 [ GrB_reduce 4.61 sec ]
 [ GrB_reduce wait (zombies: 25889280, pending: 0) 0.159 sec ]
 [ GrB_Vector_nvals 5.84e-07 sec ]
 [ GrB_Vector_nvals 4.7e-08 sec ]
Matrix has 21475137 empty rows
Matrix has 25889280 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 27438232) generic add 5.64 sec ]
 [ GrB_Vector_nvals 6.84e-07 sec ]
 [ GrB_Vector_dup 0.0302 sec ]
 [ GxB_Vector_export 3.78e-06 sec ]

==========input graph: nodes: 61578415 edges: 1468364884
diag entries added: 27438232
 [ GrB_Matrix_nvals 8.46e-07 sec ]
read time: 68.7924 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0333 sec ]
 [ GrB_Vector_dup 0.0313 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00799 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0363 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0351 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.816 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0155 sec ]
 [ GrB_apply (inplace-op) 0.00826 sec ]
 [ GrB_reduce 0.0045 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00819 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.816 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00819 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00877 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.812 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00836 sec ]
 [ GrB_reduce 0.00426 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00899 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.816 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.0082 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00892 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.815 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00825 sec ]
 [ GrB_reduce 0.00516 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00811 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.816 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00816 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.81 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00837 sec ]
 [ GrB_reduce 0.00554 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00811 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.812 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0118 sec ]
 [ GrB_apply (inplace-op) 0.00834 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00792 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.82 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0113 sec ]
 [ GrB_apply (inplace-op) 0.00829 sec ]
 [ GrB_reduce 0.00426 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00808 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.816 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00819 sec ]
 [ GrB_reduce 0.00455 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00817 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.815 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0113 sec ]
 [ GrB_apply (inplace-op) 0.00825 sec ]
 [ GrB_reduce 0.00426 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00891 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.815 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00818 sec ]
 [ GrB_reduce 0.00573 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00804 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.814 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0113 sec ]
 [ GrB_apply (inplace-op) 0.00822 sec ]
 [ GrB_reduce 0.00445 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00843 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.815 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00818 sec ]
 [ GrB_reduce 0.00509 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00805 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.818 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00824 sec ]
 [ GrB_reduce 0.00429 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00809 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.814 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.013 sec ]
 [ GrB_apply (inplace-op) 0.00818 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0152 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.812 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00824 sec ]
 [ GrB_reduce 0.00428 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00832 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.816 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00455 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0152 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00792 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.812 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00823 sec ]
 [ GrB_reduce 0.00447 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00808 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.812 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00818 sec ]
 [ GrB_reduce 0.00456 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00834 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.814 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00836 sec ]
 [ GrB_reduce 0.00531 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0081 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.815 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00819 sec ]
 [ GrB_reduce 0.00475 sec ]
warmup (3f):     19.087 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0329 sec ]
 [ GrB_Vector_dup 0.0307 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00795 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0354 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0337 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.01364) (cblas_saxpy) 1.03 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00823 sec ]
 [ GrB_reduce 0.00426 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00811 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.918654) (cblas_saxpy) 0.932 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00818 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00793 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.06269) (cblas_saxpy) 1.08 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0117 sec ]
 [ GrB_apply (inplace-op) 0.00832 sec ]
 [ GrB_reduce 0.00428 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0081 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.934169) (cblas_saxpy) 0.947 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0113 sec ]
 [ GrB_apply (inplace-op) 0.00825 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.996887) (cblas_saxpy) 1.01 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0117 sec ]
 [ GrB_apply (inplace-op) 0.00822 sec ]
 [ GrB_reduce 0.00428 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0102 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.02267) (cblas_saxpy) 1.04 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0081 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.991965) (cblas_saxpy) 1 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00831 sec ]
 [ GrB_reduce 0.00426 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00809 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.966508) (cblas_saxpy) 0.98 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0113 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00453 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.01913) (cblas_saxpy) 1.03 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0117 sec ]
 [ GrB_apply (inplace-op) 0.00822 sec ]
 [ GrB_reduce 0.00427 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00916 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.922825) (cblas_saxpy) 0.935 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00815 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0155 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00793 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.15463) (cblas_saxpy) 1.17 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0124 sec ]
 [ GrB_apply (inplace-op) 0.00996 sec ]
 [ GrB_reduce 0.00426 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0081 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.952197) (cblas_saxpy) 0.965 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0113 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00793 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.958545) (cblas_saxpy) 0.972 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00832 sec ]
 [ GrB_reduce 0.00426 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00812 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.960291) (cblas_saxpy) 0.974 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.012 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00462 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00819 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.981038) (cblas_saxpy) 0.994 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0126 sec ]
 [ GrB_apply (inplace-op) 0.00826 sec ]
 [ GrB_reduce 0.00426 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00866 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.969007) (cblas_saxpy) 0.984 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00825 sec ]
 [ GrB_reduce 0.00453 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00791 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.989352) (cblas_saxpy) 1 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0117 sec ]
 [ GrB_apply (inplace-op) 0.00833 sec ]
 [ GrB_reduce 0.00426 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00808 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.96237) (cblas_saxpy) 0.975 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0113 sec ]
 [ GrB_apply (inplace-op) 0.00825 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.96886) (cblas_saxpy) 0.981 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0117 sec ]
 [ GrB_apply (inplace-op) 0.00824 sec ]
 [ GrB_reduce 0.00426 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00825 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.93804) (cblas_saxpy) 0.951 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.0082 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00901 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.973223) (cblas_saxpy) 0.986 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00833 sec ]
 [ GrB_reduce 0.00425 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00808 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.20415) (cblas_saxpy) 1.22 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0113 sec ]
 [ GrB_apply (inplace-op) 0.00924 sec ]
 [ GrB_reduce 0.00451 sec ]
warmup (3f):     23.314 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    19.0919 sec
trial:  1 time:    19.0817 sec
3f: 40: avg time:     19.087 (sec), rate:   1692.478 iters: 22

--------------------------- nthreads: 20
trial:  0 time:    20.0372 sec
trial:  1 time:    19.9729 sec
3f: 20: avg time:     20.005 (sec), rate:   1614.796 iters: 22

  61578415x1 GraphBLAS float vector, sparse by col:
  PR, 61578415 entries

    (0,0)    2.43592e-09
    (1,0)    2.43592e-09
    (2,0)    2.43592e-09
    (3,0)    2.43592e-09
    (4,0)    2.43592e-09
    (5,0)    2.43592e-09
    (6,0)    2.43592e-09
    (7,0)    2.43592e-09
    (8,0)    2.43592e-09
    (9,0)    2.43592e-09
    (10,0)    2.43592e-09
    (11,0)    2.43592e-09
    (12,0)    4.28999e-08
    (13,0)    1.2926e-08
    (14,0)    9.12961e-09
    (15,0)    2.06278e-08
    (16,0)    2.98579e-08
    (17,0)    1.53682e-08
    (18,0)    6.56924e-09
    (19,0)    2.43592e-09
    (20,0)    3.5879e-08
    (21,0)    4.50838e-08
    (22,0)    2.62213e-08
    (23,0)    9.79812e-09
    (24,0)    9.27327e-09
    (25,0)    2.43592e-09
    (26,0)    2.43592e-09
    (27,0)    2.43592e-09
    (28,0)    2.43592e-09
    (29,0)    2.43592e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    22.7610 sec
trial:  1 time:    22.2432 sec
3f: 40: avg time:     22.502 (sec), rate:   1435.600 iters: 22

--------------------------- nthreads: 20
trial:  0 time:    21.8257 sec
trial:  1 time:    21.7916 sec
3f: 20: avg time:     21.809 (sec), rate:   1481.248 iters: 22

  61578415x1 GraphBLAS float vector, sparse by col:
  PR, 61578415 entries

    (0,0)    2.43592e-09
    (1,0)    2.43592e-09
    (2,0)    2.43592e-09
    (3,0)    2.43592e-09
    (4,0)    2.43592e-09
    (5,0)    2.43592e-09
    (6,0)    2.43592e-09
    (7,0)    2.43592e-09
    (8,0)    2.43592e-09
    (9,0)    2.43592e-09
    (10,0)    2.43592e-09
    (11,0)    2.43592e-09
    (12,0)    4.28998e-08
    (13,0)    1.29259e-08
    (14,0)    9.12961e-09
    (15,0)    2.06278e-08
    (16,0)    2.98579e-08
    (17,0)    1.53682e-08
    (18,0)    6.56924e-09
    (19,0)    2.43592e-09
    (20,0)    3.5879e-08
    (21,0)    4.50838e-08
    (22,0)    2.62212e-08
    (23,0)    9.79811e-09
    (24,0)    9.27327e-09
    (25,0)    2.43592e-09
    (26,0)    2.43592e-09
    (27,0)    2.43592e-09
    (28,0)    2.43592e-09
    (29,0)    2.43592e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
 [ GxB_Matrix_import_CSR 1.4e-05 sec ]
 [ GxB_set 3.91e-06 sec ]
 [ GrB_apply (shallow-op) generic 1.27 sec ]
 [ GxB_set (transpose) 4.83 sec ]
 [ GrB_Matrix_nvals 1.5e-05 sec ]
 [ GrB_Matrix_dup 0.881 sec ]
original # of edges: 1930292948
 [ GrB_reduce 0.822 sec ]
 [ GrB_reduce wait (zombies: 438, pending: 0) 0.182 sec ]
 [ GrB_Vector_nvals 4.83e-07 sec ]
 [ GrB_Vector_nvals 5.1e-08 sec ]
Matrix has 7236618 empty rows
Matrix has 438 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 7236964) generic add 2.01 sec ]
 [ GrB_Vector_nvals 5.02e-07 sec ]
 [ GrB_Vector_dup 0.0241 sec ]
 [ GxB_Vector_export 3.21e-06 sec ]

==========input graph: nodes: 50636151 edges: 1930292948
diag entries added: 7236964
 [ GrB_Matrix_nvals 5.95e-07 sec ]
read time: 51.6916 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.027 sec ]
 [ GrB_Vector_dup 0.0231 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00639 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0295 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0276 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0127 sec ]
 [ GrB_apply (inplace-op) 0.0065 sec ]
 [ GrB_reduce 0.004 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00639 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.37 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0089 sec ]
 [ GrB_apply (inplace-op) 0.00667 sec ]
 [ GrB_reduce 0.00393 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00909 sec ]
 [ GrB_apply (inplace-op) 0.0066 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00899 sec ]
 [ GrB_apply (inplace-op) 0.00725 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00896 sec ]
 [ GrB_apply (inplace-op) 0.00651 sec ]
 [ GrB_reduce 0.0038 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00662 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00892 sec ]
 [ GrB_apply (inplace-op) 0.00656 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00661 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00898 sec ]
 [ GrB_apply (inplace-op) 0.0065 sec ]
 [ GrB_reduce 0.00385 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00892 sec ]
 [ GrB_apply (inplace-op) 0.00752 sec ]
 [ GrB_reduce 0.00388 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.01 sec ]
 [ GrB_apply (inplace-op) 0.0075 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.01 sec ]
 [ GrB_apply (inplace-op) 0.00659 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00897 sec ]
 [ GrB_apply (inplace-op) 0.0065 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00669 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00889 sec ]
 [ GrB_apply (inplace-op) 0.00657 sec ]
 [ GrB_reduce 0.00392 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00896 sec ]
 [ GrB_apply (inplace-op) 0.00649 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.013 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0089 sec ]
 [ GrB_apply (inplace-op) 0.0066 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00901 sec ]
 [ GrB_apply (inplace-op) 0.00649 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00907 sec ]
 [ GrB_apply (inplace-op) 0.00668 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0101 sec ]
 [ GrB_apply (inplace-op) 0.00655 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.009 sec ]
 [ GrB_apply (inplace-op) 0.00798 sec ]
 [ GrB_reduce 0.00386 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00644 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00898 sec ]
 [ GrB_apply (inplace-op) 0.00647 sec ]
 [ GrB_reduce 0.00385 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0089 sec ]
 [ GrB_apply (inplace-op) 0.00662 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.013 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00639 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00898 sec ]
 [ GrB_apply (inplace-op) 0.00729 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00972 sec ]
 [ GrB_apply (inplace-op) 0.0077 sec ]
 [ GrB_reduce 0.00423 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00898 sec ]
 [ GrB_apply (inplace-op) 0.00649 sec ]
 [ GrB_reduce 0.00381 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0099 sec ]
 [ GrB_apply (inplace-op) 0.00658 sec ]
 [ GrB_reduce 0.00391 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00898 sec ]
 [ GrB_apply (inplace-op) 0.00658 sec ]
 [ GrB_reduce 0.00383 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0089 sec ]
 [ GrB_apply (inplace-op) 0.00659 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00652 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00898 sec ]
 [ GrB_apply (inplace-op) 0.00649 sec ]
 [ GrB_reduce 0.00403 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00667 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00892 sec ]
 [ GrB_apply (inplace-op) 0.00671 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00911 sec ]
 [ GrB_apply (inplace-op) 0.00748 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00991 sec ]
 [ GrB_apply (inplace-op) 0.00684 sec ]
 [ GrB_reduce 0.0039 sec ]
warmup (3f):     12.307 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0275 sec ]
 [ GrB_Vector_dup 0.0231 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00637 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0293 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.458204) (cblas_saxpy) 0.469 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0096 sec ]
 [ GrB_apply (inplace-op) 0.00647 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.434942) (cblas_saxpy) 0.446 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00937 sec ]
 [ GrB_apply (inplace-op) 0.00657 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.43004) (cblas_saxpy) 0.441 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00958 sec ]
 [ GrB_apply (inplace-op) 0.00648 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0066 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424487) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00948 sec ]
 [ GrB_apply (inplace-op) 0.00668 sec ]
 [ GrB_reduce 0.00392 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00639 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.423743) (cblas_saxpy) 0.434 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0106 sec ]
 [ GrB_apply (inplace-op) 0.00652 sec ]
 [ GrB_reduce 0.00429 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.431893) (cblas_saxpy) 0.443 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00937 sec ]
 [ GrB_apply (inplace-op) 0.00658 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424416) (cblas_saxpy) 0.434 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00946 sec ]
 [ GrB_apply (inplace-op) 0.00753 sec ]
 [ GrB_reduce 0.0038 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.425265) (cblas_saxpy) 0.436 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00935 sec ]
 [ GrB_apply (inplace-op) 0.00658 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00654 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.42395) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00649 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424408) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00936 sec ]
 [ GrB_apply (inplace-op) 0.0066 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0066 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.423846) (cblas_saxpy) 0.433 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0096 sec ]
 [ GrB_apply (inplace-op) 0.00749 sec ]
 [ GrB_reduce 0.00381 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424625) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00659 sec ]
 [ GrB_reduce 0.00391 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.43559) (cblas_saxpy) 0.446 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00961 sec ]
 [ GrB_apply (inplace-op) 0.0065 sec ]
 [ GrB_reduce 0.00398 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424918) (cblas_saxpy) 0.436 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00937 sec ]
 [ GrB_apply (inplace-op) 0.00659 sec ]
 [ GrB_reduce 0.00391 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424682) (cblas_saxpy) 0.434 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00947 sec ]
 [ GrB_apply (inplace-op) 0.00651 sec ]
 [ GrB_reduce 0.00381 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424459) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00947 sec ]
 [ GrB_apply (inplace-op) 0.0066 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00639 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.42535) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00949 sec ]
 [ GrB_apply (inplace-op) 0.00649 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00659 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.425511) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00935 sec ]
 [ GrB_apply (inplace-op) 0.00659 sec ]
 [ GrB_reduce 0.00392 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.425756) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00966 sec ]
 [ GrB_apply (inplace-op) 0.0065 sec ]
 [ GrB_reduce 0.00489 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.425832) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00934 sec ]
 [ GrB_apply (inplace-op) 0.0067 sec ]
 [ GrB_reduce 0.00391 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.425284) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00946 sec ]
 [ GrB_apply (inplace-op) 0.00651 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.425847) (cblas_saxpy) 0.438 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00945 sec ]
 [ GrB_apply (inplace-op) 0.0066 sec ]
 [ GrB_reduce 0.00394 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00643 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424824) (cblas_saxpy) 0.434 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0101 sec ]
 [ GrB_apply (inplace-op) 0.0065 sec ]
 [ GrB_reduce 0.00382 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.425156) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0095 sec ]
 [ GrB_apply (inplace-op) 0.0067 sec ]
 [ GrB_reduce 0.00532 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00643 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.42464) (cblas_saxpy) 0.434 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00974 sec ]
 [ GrB_apply (inplace-op) 0.0065 sec ]
 [ GrB_reduce 0.00381 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00648 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424646) (cblas_saxpy) 0.434 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00991 sec ]
 [ GrB_apply (inplace-op) 0.00659 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.425427) (cblas_saxpy) 0.436 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00965 sec ]
 [ GrB_apply (inplace-op) 0.0065 sec ]
 [ GrB_reduce 0.00384 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00663 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.424865) (cblas_saxpy) 0.434 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00935 sec ]
 [ GrB_apply (inplace-op) 0.0066 sec ]
 [ GrB_reduce 0.00398 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.425141) (cblas_saxpy) 0.436 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0096 sec ]
 [ GrB_apply (inplace-op) 0.00649 sec ]
 [ GrB_reduce 0.00398 sec ]
warmup (3f):     13.906 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    12.2912 sec
trial:  1 time:    12.2870 sec
3f: 40: avg time:     12.289 (sec), rate:   4712.205 iters: 30

--------------------------- nthreads: 20
trial:  0 time:    12.3393 sec
trial:  1 time:    12.3070 sec
3f: 20: avg time:     12.323 (sec), rate:   4699.183 iters: 30

  50636151x1 GraphBLAS float vector, sparse by col:
  PR, 50636151 entries

    (0,0)    3.04448e-09
    (1,0)    3.04448e-09
    (2,0)    3.04448e-09
    (3,0)    3.04448e-09
    (4,0)    3.04448e-09
    (5,0)    3.04448e-09
    (6,0)    3.04448e-09
    (7,0)    3.04448e-09
    (8,0)    3.04448e-09
    (9,0)    3.04448e-09
    (10,0)    5.78254e-09
    (11,0)    3.31792e-09
    (12,0)    3.04448e-09
    (13,0)    3.04448e-09
    (14,0)    3.04448e-09
    (15,0)    3.04448e-09
    (16,0)    3.04448e-09
    (17,0)    3.04448e-09
    (18,0)    3.06634e-09
    (19,0)    3.06634e-09
    (20,0)    3.06634e-09
    (21,0)    3.06634e-09
    (22,0)    3.06634e-09
    (23,0)    3.06634e-09
    (24,0)    3.05126e-09
    (25,0)    3.05126e-09
    (26,0)    3.05126e-09
    (27,0)    3.05126e-09
    (28,0)    3.05126e-09
    (29,0)    3.05126e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    14.0037 sec
trial:  1 time:    13.8769 sec
3f: 40: avg time:     13.940 (sec), rate:   4015.587 iters: 29

--------------------------- nthreads: 20
trial:  0 time:    13.7741 sec
trial:  1 time:    13.8403 sec
3f: 20: avg time:     13.807 (sec), rate:   4054.292 iters: 29

  50636151x1 GraphBLAS float vector, sparse by col:
  PR, 50636151 entries

    (0,0)    3.04448e-09
    (1,0)    3.04448e-09
    (2,0)    3.04448e-09
    (3,0)    3.04448e-09
    (4,0)    3.04448e-09
    (5,0)    3.04448e-09
    (6,0)    3.04448e-09
    (7,0)    3.04448e-09
    (8,0)    3.04448e-09
    (9,0)    3.04448e-09
    (10,0)    5.78254e-09
    (11,0)    3.31792e-09
    (12,0)    3.04448e-09
    (13,0)    3.04448e-09
    (14,0)    3.04448e-09
    (15,0)    3.04448e-09
    (16,0)    3.04448e-09
    (17,0)    3.04448e-09
    (18,0)    3.06634e-09
    (19,0)    3.06634e-09
    (20,0)    3.06634e-09
    (21,0)    3.06634e-09
    (22,0)    3.06634e-09
    (23,0)    3.06634e-09
    (24,0)    3.05126e-09
    (25,0)    3.05126e-09
    (26,0)    3.05126e-09
    (27,0)    3.05126e-09
    (28,0)    3.05126e-09
    (29,0)    3.05126e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
 [ GxB_Matrix_import_CSR 1.26e-05 sec ]
 [ GxB_set 3.38e-06 sec ]
 [ GrB_apply (shallow-op) generic 0.063 sec ]
 [ GxB_set (transpose) 0.628 sec ]
 [ GrB_Matrix_nvals 2.08e-06 sec ]
 [ GrB_Matrix_dup 0.0395 sec ]
original # of edges: 57708624
 [ GrB_reduce 0.17 sec ]
 [ GrB_reduce 0.0217 sec ]
 [ GrB_Vector_nvals 6.01e-07 sec ]
 [ GrB_Vector_nvals 7.61e-08 sec ]
 [ GrB_reduce 0.196 sec ]
 [ GrB_Vector_nvals 8.88e-07 sec ]
 [ GrB_Vector_dup 0.0119 sec ]
 [ GxB_Vector_export 2.43e-06 sec ]

==========input graph: nodes: 23947347 edges: 57708624
diag entries added: 0
 [ GrB_Matrix_nvals 5.52e-07 sec ]
read time: 1.70462 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0214 sec ]
 [ GrB_Vector_dup 0.0203 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.007 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0191 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0277 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.023 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0103 sec ]
 [ GrB_apply (inplace-op) 0.00673 sec ]
 [ GrB_reduce 0.00578 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00778 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00449 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0227 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00723 sec ]
 [ GrB_apply (inplace-op) 0.00546 sec ]
 [ GrB_reduce 0.0047 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00727 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00588 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0226 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00856 sec ]
 [ GrB_apply (inplace-op) 0.00629 sec ]
 [ GrB_reduce 0.00571 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0081 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00622 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0218 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00646 sec ]
 [ GrB_apply (inplace-op) 0.00628 sec ]
 [ GrB_reduce 0.00521 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.01 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00679 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0229 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00862 sec ]
 [ GrB_apply (inplace-op) 0.00581 sec ]
 [ GrB_reduce 0.00572 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00939 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00665 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0223 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00794 sec ]
 [ GrB_apply (inplace-op) 0.00571 sec ]
 [ GrB_reduce 0.00611 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00994 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00672 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0231 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00875 sec ]
 [ GrB_apply (inplace-op) 0.00696 sec ]
 [ GrB_reduce 0.00492 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00936 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00532 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0226 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0083 sec ]
 [ GrB_apply (inplace-op) 0.00688 sec ]
 [ GrB_reduce 0.0045 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00863 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0069 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0232 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00875 sec ]
 [ GrB_apply (inplace-op) 0.00721 sec ]
 [ GrB_reduce 0.00583 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00989 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00732 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0221 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00823 sec ]
 [ GrB_apply (inplace-op) 0.00794 sec ]
 [ GrB_reduce 0.00608 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0101 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00533 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0228 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00871 sec ]
 [ GrB_apply (inplace-op) 0.0073 sec ]
 [ GrB_reduce 0.00583 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00988 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00733 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0243 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00815 sec ]
 [ GrB_apply (inplace-op) 0.00492 sec ]
 [ GrB_reduce 0.00607 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00761 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00702 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0228 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00844 sec ]
 [ GrB_apply (inplace-op) 0.00705 sec ]
 [ GrB_reduce 0.00537 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0101 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.007 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0222 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00797 sec ]
 [ GrB_apply (inplace-op) 0.00492 sec ]
 [ GrB_reduce 0.0082 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00804 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00594 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0229 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00444 sec ]
 [ GrB_apply (inplace-op) 0.0033 sec ]
 [ GrB_reduce 0.00163 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00553 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00318 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0191 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0038 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00192 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00554 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00352 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00436 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00162 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00544 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00318 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0191 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0038 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.0019 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00558 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00436 sec ]
 [ GrB_apply (inplace-op) 0.00329 sec ]
 [ GrB_reduce 0.00163 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0054 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00318 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0191 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00395 sec ]
 [ GrB_apply (inplace-op) 0.00276 sec ]
 [ GrB_reduce 0.00191 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00282 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00444 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00162 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00544 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0032 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0191 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0038 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.0019 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00558 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00277 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00436 sec ]
 [ GrB_apply (inplace-op) 0.00332 sec ]
 [ GrB_reduce 0.00166 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0054 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00321 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0191 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0038 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00192 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00557 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00439 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00162 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0054 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00325 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0191 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00381 sec ]
 [ GrB_apply (inplace-op) 0.00401 sec ]
 [ GrB_reduce 0.00191 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00557 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00437 sec ]
 [ GrB_apply (inplace-op) 0.00325 sec ]
 [ GrB_reduce 0.00163 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00554 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00319 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0191 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0038 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00192 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00573 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00438 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00162 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00541 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00346 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0191 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0038 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00191 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00557 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00284 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00436 sec ]
 [ GrB_apply (inplace-op) 0.00326 sec ]
 [ GrB_reduce 0.00165 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00542 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00319 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0192 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0038 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00195 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00436 sec ]
 [ GrB_apply (inplace-op) 0.00329 sec ]
 [ GrB_reduce 0.00162 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00542 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00317 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0191 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00382 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00191 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00559 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00277 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00437 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00163 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00541 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00319 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0192 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0038 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00192 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00436 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00163 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0054 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00318 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0191 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00382 sec ]
 [ GrB_apply (inplace-op) 0.00289 sec ]
 [ GrB_reduce 0.00191 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00569 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00277 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0196 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00436 sec ]
 [ GrB_apply (inplace-op) 0.00326 sec ]
 [ GrB_reduce 0.00164 sec ]
warmup (3f):      1.836 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0133 sec ]
 [ GrB_Vector_dup 0.0104 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00311 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0135 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0135 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.102665) (cblas_saxpy) 0.107 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00482 sec ]
 [ GrB_apply (inplace-op) 0.00529 sec ]
 [ GrB_reduce 0.0036 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00544 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00318 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0514808) (cblas_saxpy) 0.0566 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00392 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00193 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00282 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0519839) (cblas_saxpy) 0.0566 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00579 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00165 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00544 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00319 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0516381) (cblas_saxpy) 0.0566 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0039 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00287 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00557 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00283 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.050595) (cblas_saxpy) 0.0563 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0048 sec ]
 [ GrB_apply (inplace-op) 0.00328 sec ]
 [ GrB_reduce 0.00165 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00618 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00317 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0510307) (cblas_saxpy) 0.0571 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00391 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00193 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00281 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0521675) (cblas_saxpy) 0.058 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00484 sec ]
 [ GrB_apply (inplace-op) 0.00328 sec ]
 [ GrB_reduce 0.00163 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00541 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00319 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0512156) (cblas_saxpy) 0.0576 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0041 sec ]
 [ GrB_apply (inplace-op) 0.00277 sec ]
 [ GrB_reduce 0.00193 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00281 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0525836) (cblas_saxpy) 0.0586 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0048 sec ]
 [ GrB_apply (inplace-op) 0.00339 sec ]
 [ GrB_reduce 0.00163 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00704 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00455 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0524847) (cblas_saxpy) 0.059 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0039 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00202 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0523349) (cblas_saxpy) 0.0584 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00481 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00163 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00542 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00322 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0519634) (cblas_saxpy) 0.0587 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00391 sec ]
 [ GrB_apply (inplace-op) 0.00306 sec ]
 [ GrB_reduce 0.00189 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0028 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0526233) (cblas_saxpy) 0.0584 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00517 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00197 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00546 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00319 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0528239) (cblas_saxpy) 0.0592 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00392 sec ]
 [ GrB_apply (inplace-op) 0.00297 sec ]
 [ GrB_reduce 0.0019 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00569 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0028 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.052091) (cblas_saxpy) 0.0566 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00481 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00162 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00544 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00418 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0527362) (cblas_saxpy) 0.0576 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00392 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00191 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00557 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00278 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.051109) (cblas_saxpy) 0.0557 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00491 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00164 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00543 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0032 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0510676) (cblas_saxpy) 0.0574 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00392 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00193 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0028 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0521085) (cblas_saxpy) 0.0582 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0048 sec ]
 [ GrB_apply (inplace-op) 0.00328 sec ]
 [ GrB_reduce 0.00164 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00544 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00319 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0510276) (cblas_saxpy) 0.0559 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00417 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00192 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0508051) (cblas_saxpy) 0.0553 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00479 sec ]
 [ GrB_apply (inplace-op) 0.00328 sec ]
 [ GrB_reduce 0.00233 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00544 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00318 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0499116) (cblas_saxpy) 0.056 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00392 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00279 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00633 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00278 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0460988) (cblas_saxpy) 0.0523 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00476 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00162 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00542 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00372 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0462717) (cblas_saxpy) 0.0526 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00389 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00192 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0528941) (cblas_saxpy) 0.0574 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00483 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00163 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00545 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00318 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0529844) (cblas_saxpy) 0.0578 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00393 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00191 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0056 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00277 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0522111) (cblas_saxpy) 0.0567 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00483 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00162 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00542 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00319 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0461176) (cblas_saxpy) 0.0524 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00389 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00191 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00569 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00282 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0512035) (cblas_saxpy) 0.0557 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00482 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00167 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00543 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00385 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0503595) (cblas_saxpy) 0.0567 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00392 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00194 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00289 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0526358) (cblas_saxpy) 0.0573 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00481 sec ]
 [ GrB_apply (inplace-op) 0.00328 sec ]
 [ GrB_reduce 0.00166 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00541 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00318 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0527672) (cblas_saxpy) 0.0591 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00391 sec ]
 [ GrB_apply (inplace-op) 0.00297 sec ]
 [ GrB_reduce 0.0019 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00282 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0523949) (cblas_saxpy) 0.0584 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00482 sec ]
 [ GrB_apply (inplace-op) 0.00331 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00541 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00319 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0515281) (cblas_saxpy) 0.0576 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00391 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00194 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00582 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0493831) (cblas_saxpy) 0.0539 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00481 sec ]
 [ GrB_apply (inplace-op) 0.00329 sec ]
 [ GrB_reduce 0.00163 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00541 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00319 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0540153) (cblas_saxpy) 0.0604 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0039 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00191 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00559 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0526291) (cblas_saxpy) 0.0572 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00486 sec ]
 [ GrB_apply (inplace-op) 0.00327 sec ]
 [ GrB_reduce 0.00163 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00544 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00317 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.052492) (cblas_saxpy) 0.0574 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00392 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00191 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00556 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00279 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0526623) (cblas_saxpy) 0.0572 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00485 sec ]
 [ GrB_apply (inplace-op) 0.00326 sec ]
 [ GrB_reduce 0.00163 sec ]
warmup (3f):      3.029 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:     1.5060 sec
trial:  1 time:     1.4838 sec
3f: 40: avg time:      1.495 (sec), rate:   1505.525 iters: 39

--------------------------- nthreads: 20
trial:  0 time:     1.5162 sec
trial:  1 time:     1.5028 sec
3f: 20: avg time:      1.509 (sec), rate:   1490.981 iters: 39

  23947347x1 GraphBLAS float vector, sparse by col:
  PR, 23947347 entries

    (0,0)    4.75579e-08
    (1,0)    3.20307e-08
    (2,0)    4.95218e-08
    (3,0)    3.69073e-08
    (4,0)    3.75892e-08
    (5,0)    5.17024e-08
    (6,0)    5.35032e-08
    (7,0)    2.14235e-08
    (8,0)    3.78229e-08
    (9,0)    4.74456e-08
    (10,0)    4.79489e-08
    (11,0)    4.80614e-08
    (12,0)    4.3424e-08
    (13,0)    5.12736e-08
    (14,0)    3.66438e-08
    (15,0)    3.99929e-08
    (16,0)    6.02066e-08
    (17,0)    2.33178e-08
    (18,0)    2.27628e-08
    (19,0)    5.77866e-08
    (20,0)    3.66638e-08
    (21,0)    3.55786e-08
    (22,0)    6.66583e-08
    (23,0)    2.18603e-08
    (24,0)    2.51435e-08
    (25,0)    5.51881e-08
    (26,0)    5.21458e-08
    (27,0)    3.66357e-08
    (28,0)    7.3439e-08
    (29,0)    5.27261e-08
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:     2.9884 sec
trial:  1 time:     2.9555 sec
3f: 40: avg time:      2.972 (sec), rate:    757.289 iters: 39

--------------------------- nthreads: 20
trial:  0 time:     2.8030 sec
trial:  1 time:     2.6862 sec
3f: 20: avg time:      2.745 (sec), rate:    820.021 iters: 39

  23947347x1 GraphBLAS float vector, sparse by col:
  PR, 23947347 entries

    (0,0)    4.75579e-08
    (1,0)    3.20307e-08
    (2,0)    4.95218e-08
    (3,0)    3.69073e-08
    (4,0)    3.75892e-08
    (5,0)    5.17024e-08
    (6,0)    5.35032e-08
    (7,0)    2.14235e-08
    (8,0)    3.78229e-08
    (9,0)    4.74456e-08
    (10,0)    4.79489e-08
    (11,0)    4.80614e-08
    (12,0)    4.3424e-08
    (13,0)    5.12736e-08
    (14,0)    3.66438e-08
    (15,0)    3.99929e-08
    (16,0)    6.02066e-08
    (17,0)    2.33178e-08
    (18,0)    2.27628e-08
    (19,0)    5.77866e-08
    (20,0)    3.66638e-08
    (21,0)    3.55786e-08
    (22,0)    6.66583e-08
    (23,0)    2.18603e-08
    (24,0)    2.51435e-08
    (25,0)    5.51881e-08
    (26,0)    5.21458e-08
    (27,0)    3.66357e-08
    (28,0)    7.3439e-08
    (29,0)    5.27261e-08
    ...
