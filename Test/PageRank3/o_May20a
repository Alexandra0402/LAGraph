MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 1.43e-05 sec ]
 [ GxB_set 2.94e-06 sec ]
 [ GrB_apply (shallow-op) generic 11.5 sec ]
 [ GxB_set (transpose) 70.8 sec ]
 [ GrB_Matrix_nvals 1.28e-05 sec ]
 [ GrB_Matrix_dup 1.95 sec ]
original # of edges: 4223264644
 [ GrB_reduce 20 sec ]
 [ GrB_reduce wait (zombies: 71143742, pending: 0) 0.395 sec ]
 [ GrB_Vector_nvals 1.15e-06 sec ]
 [ GrB_Vector_nvals 6.29e-08 sec ]
Matrix has 71143742 empty rows
Matrix has 71143742 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 71143742) generic add 22.6 sec ]
 [ GrB_Vector_nvals 4.42e-07 sec ]
 [ GrB_Vector_dup 0.0655 sec ]
 [ GxB_Vector_export 2.87e-06 sec ]

==========input graph: nodes: 134217726 edges: 4223264644
diag entries added: 71143742
 [ GrB_Matrix_nvals 9.35e-07 sec ]
read time: 220.636 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0727 sec ]
 [ GrB_Vector_dup 0.0585 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0183 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0726 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0725 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0286 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00929 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0189 sec ]
 [ GrB_reduce 0.00868 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.032 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 3.23 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00865 sec ]
warmup (3f):     23.565 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0711 sec ]
 [ GrB_Vector_dup 0.0583 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0716 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0712 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.47392) (cblas_saxpy) 3.5 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.48573) (cblas_saxpy) 3.51 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00882 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.5683) (cblas_saxpy) 3.59 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.46304) (cblas_saxpy) 3.49 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.55012) (cblas_saxpy) 3.58 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.019 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.50921) (cblas_saxpy) 3.54 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0191 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 3.51483) (cblas_saxpy) 3.54 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00867 sec ]
warmup (3f):     25.710 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    23.5576 sec
trial:  1 time:    23.5369 sec
3f: 40: avg time:     23.547 (sec), rate:   1255.468 iters: 7

--------------------------- nthreads: 20
trial:  0 time:    24.7439 sec
trial:  1 time:    24.7059 sec
3f: 20: avg time:     24.725 (sec), rate:   1195.671 iters: 7

  134217726x1 GraphBLAS float vector, sparse by col:
  PR, 134217726 entries

    (0,0)    1.11759e-09
    (1,0)    1.21291e-09
    (2,0)    1.21297e-09
    (3,0)    1.11759e-09
    (4,0)    1.11759e-09
    (5,0)    1.11759e-09
    (6,0)    1.11759e-09
    (7,0)    1.11759e-09
    (8,0)    1.11759e-09
    (9,0)    1.52821e-09
    (10,0)    1.11759e-09
    (11,0)    2.92415e-09
    (12,0)    1.11759e-09
    (13,0)    1.11759e-09
    (14,0)    1.68495e-09
    (15,0)    1.60349e-09
    (16,0)    1.11759e-09
    (17,0)    1.11759e-09
    (18,0)    1.11759e-09
    (19,0)    1.6263e-09
    (20,0)    1.11759e-09
    (21,0)    1.11759e-09
    (22,0)    1.11759e-09
    (23,0)    1.11759e-09
    (24,0)    1.1994e-09
    (25,0)    1.45084e-09
    (26,0)    9.28271e-09
    (27,0)    1.35811e-09
    (28,0)    2.13301e-09
    (29,0)    1.52126e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    25.5258 sec
trial:  1 time:    25.5224 sec
3f: 40: avg time:     25.524 (sec), rate:   1158.233 iters: 7

--------------------------- nthreads: 20
trial:  0 time:    25.5668 sec
trial:  1 time:    25.5512 sec
3f: 20: avg time:     25.559 (sec), rate:   1156.651 iters: 7

  134217726x1 GraphBLAS float vector, sparse by col:
  PR, 134217726 entries

    (0,0)    1.11759e-09
    (1,0)    1.21291e-09
    (2,0)    1.21297e-09
    (3,0)    1.11759e-09
    (4,0)    1.11759e-09
    (5,0)    1.11759e-09
    (6,0)    1.11759e-09
    (7,0)    1.11759e-09
    (8,0)    1.11759e-09
    (9,0)    1.52822e-09
    (10,0)    1.11759e-09
    (11,0)    2.92418e-09
    (12,0)    1.11759e-09
    (13,0)    1.11759e-09
    (14,0)    1.68496e-09
    (15,0)    1.60349e-09
    (16,0)    1.11759e-09
    (17,0)    1.11759e-09
    (18,0)    1.11759e-09
    (19,0)    1.62631e-09
    (20,0)    1.11759e-09
    (21,0)    1.11759e-09
    (22,0)    1.11759e-09
    (23,0)    1.11759e-09
    (24,0)    1.1994e-09
    (25,0)    1.45085e-09
    (26,0)    9.28282e-09
    (27,0)    1.35812e-09
    (28,0)    2.13303e-09
    (29,0)    1.52126e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
 [ GxB_Matrix_import_CSR 1.37e-05 sec ]
 [ GxB_set 3.22e-06 sec ]
 [ GrB_apply (shallow-op) generic 6.64 sec ]
 [ GxB_set (transpose) 75.8 sec ]
 [ GrB_Matrix_nvals 1.48e-05 sec ]
 [ GrB_Matrix_dup 1.97 sec ]
original # of edges: 4294966740
 [ GrB_reduce 24.5 sec ]
 [ GrB_reduce 0.336 sec ]
 [ GrB_Vector_nvals 1.29e-06 sec ]
 [ GrB_Vector_nvals 9.1e-08 sec ]
 [ GrB_reduce 24.6 sec ]
 [ GrB_Vector_nvals 5.16e-07 sec ]
 [ GrB_Vector_dup 0.0661 sec ]
 [ GxB_Vector_export 2.49e-06 sec ]

==========input graph: nodes: 134217728 edges: 4294966740
diag entries added: 0
 [ GrB_Matrix_nvals 9.18e-07 sec ]
read time: 200.882 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0715 sec ]
 [ GrB_Vector_dup 0.066 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0194 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0767 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0699 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0282 sec ]
 [ GrB_apply (inplace-op) 0.0191 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0244 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0245 sec ]
 [ GrB_apply (inplace-op) 0.0186 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0185 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0246 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00865 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0182 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 4.75 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0243 sec ]
 [ GrB_apply (inplace-op) 0.0183 sec ]
 [ GrB_reduce 0.00869 sec ]
warmup (3f):     29.359 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.07 sec ]
 [ GrB_Vector_dup 0.0651 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.0182 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0766 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0705 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.05646) (cblas_saxpy) 5.08 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00889 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0321 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0184 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.01498) (cblas_saxpy) 5.04 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00869 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.97846) (cblas_saxpy) 5 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0249 sec ]
 [ GrB_apply (inplace-op) 0.0184 sec ]
 [ GrB_reduce 0.00864 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0186 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.01458) (cblas_saxpy) 5.04 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00867 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0181 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 5.17355) (cblas_saxpy) 5.2 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0251 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0322 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0186 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 4.98753) (cblas_saxpy) 5.02 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0248 sec ]
 [ GrB_apply (inplace-op) 0.0185 sec ]
 [ GrB_reduce 0.00866 sec ]
warmup (3f):     31.255 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    29.3605 sec
trial:  1 time:    29.5136 sec
3f: 40: avg time:     29.437 (sec), rate:    875.421 iters: 6

--------------------------- nthreads: 20
trial:  0 time:    30.4262 sec
trial:  1 time:    30.3956 sec
3f: 20: avg time:     30.411 (sec), rate:    847.387 iters: 6

  134217728x1 GraphBLAS float vector, sparse by col:
  PR, 134217728 entries

    (0,0)    8.25985e-09
    (1,0)    7.23841e-09
    (2,0)    8.28931e-09
    (3,0)    7.71854e-09
    (4,0)    8.2541e-09
    (5,0)    9.05594e-09
    (6,0)    8.01646e-09
    (7,0)    7.62977e-09
    (8,0)    8.79943e-09
    (9,0)    7.01721e-09
    (10,0)    7.44634e-09
    (11,0)    7.82501e-09
    (12,0)    9.04071e-09
    (13,0)    4.5071e-09
    (14,0)    6.88887e-09
    (15,0)    5.91511e-09
    (16,0)    9.80993e-09
    (17,0)    7.49341e-09
    (18,0)    7.61506e-09
    (19,0)    6.4787e-09
    (20,0)    6.24013e-09
    (21,0)    7.03518e-09
    (22,0)    7.64445e-09
    (23,0)    7.88618e-09
    (24,0)    6.68367e-09
    (25,0)    8.81481e-09
    (26,0)    7.06337e-09
    (27,0)    5.87844e-09
    (28,0)    7.54203e-09
    (29,0)    8.4015e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    31.1926 sec
trial:  1 time:    31.1767 sec
3f: 40: avg time:     31.185 (sec), rate:    826.362 iters: 6

--------------------------- nthreads: 20
trial:  0 time:    31.2291 sec
trial:  1 time:    31.3553 sec
3f: 20: avg time:     31.292 (sec), rate:    823.521 iters: 6

  134217728x1 GraphBLAS float vector, sparse by col:
  PR, 134217728 entries

    (0,0)    8.25985e-09
    (1,0)    7.23841e-09
    (2,0)    8.28931e-09
    (3,0)    7.71854e-09
    (4,0)    8.2541e-09
    (5,0)    9.05594e-09
    (6,0)    8.01646e-09
    (7,0)    7.62977e-09
    (8,0)    8.79943e-09
    (9,0)    7.01721e-09
    (10,0)    7.44634e-09
    (11,0)    7.82501e-09
    (12,0)    9.04071e-09
    (13,0)    4.5071e-09
    (14,0)    6.88888e-09
    (15,0)    5.91511e-09
    (16,0)    9.80993e-09
    (17,0)    7.49341e-09
    (18,0)    7.61506e-09
    (19,0)    6.4787e-09
    (20,0)    6.24013e-09
    (21,0)    7.03518e-09
    (22,0)    7.64445e-09
    (23,0)    7.88618e-09
    (24,0)    6.68367e-09
    (25,0)    8.81481e-09
    (26,0)    7.06337e-09
    (27,0)    5.87844e-09
    (28,0)    7.54203e-09
    (29,0)    8.4015e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
 [ GxB_Matrix_import_CSR 1.37e-05 sec ]
 [ GxB_set 2.96e-06 sec ]
 [ GrB_apply (shallow-op) generic 1.05 sec ]
 [ GxB_set (transpose) 20.9 sec ]
 [ GrB_Matrix_nvals 1.57e-06 sec ]
 [ GrB_Matrix_dup 0.682 sec ]
original # of edges: 1468364884
 [ GrB_reduce 4.52 sec ]
 [ GrB_reduce wait (zombies: 25889280, pending: 0) 0.161 sec ]
 [ GrB_Vector_nvals 4.77e-07 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
Matrix has 21475137 empty rows
Matrix has 25889280 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 27438232) generic add 5.67 sec ]
 [ GrB_Vector_nvals 4.73e-07 sec ]
 [ GrB_Vector_dup 0.03 sec ]
 [ GxB_Vector_export 2.05e-06 sec ]

==========input graph: nodes: 61578415 edges: 1468364884
diag entries added: 27438232
 [ GrB_Matrix_nvals 6.39e-07 sec ]
read time: 69.3439 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0388 sec ]
 [ GrB_Vector_dup 0.0305 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00802 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0359 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0375 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.794 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0139 sec ]
 [ GrB_apply (inplace-op) 0.00811 sec ]
 [ GrB_reduce 0.00453 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.793 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00843 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.794 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.0084 sec ]
 [ GrB_reduce 0.00448 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.798 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00936 sec ]
 [ GrB_reduce 0.00455 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00797 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.795 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00878 sec ]
 [ GrB_reduce 0.00566 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00791 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.798 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00839 sec ]
 [ GrB_reduce 0.00465 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.8 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0112 sec ]
 [ GrB_apply (inplace-op) 0.00827 sec ]
 [ GrB_reduce 0.0046 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.792 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00454 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00797 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.796 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00808 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.797 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00832 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.794 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0122 sec ]
 [ GrB_apply (inplace-op) 0.00827 sec ]
 [ GrB_reduce 0.00732 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.795 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00472 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.794 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00829 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00811 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.795 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00847 sec ]
 [ GrB_reduce 0.0047 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.793 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00831 sec ]
 [ GrB_reduce 0.00449 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.795 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00835 sec ]
 [ GrB_reduce 0.00542 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00793 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.793 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.011 sec ]
 [ GrB_apply (inplace-op) 0.00945 sec ]
 [ GrB_reduce 0.00449 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.795 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0122 sec ]
 [ GrB_apply (inplace-op) 0.00961 sec ]
 [ GrB_reduce 0.00474 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.793 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0112 sec ]
 [ GrB_apply (inplace-op) 0.00936 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.008 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.795 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0111 sec ]
 [ GrB_apply (inplace-op) 0.00817 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00799 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.794 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0112 sec ]
 [ GrB_apply (inplace-op) 0.00809 sec ]
 [ GrB_reduce 0.00449 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.793 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0109 sec ]
 [ GrB_apply (inplace-op) 0.00843 sec ]
 [ GrB_reduce 0.00451 sec ]
warmup (3f):     18.653 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0327 sec ]
 [ GrB_Vector_dup 0.0305 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00802 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0352 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0334 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.959758) (cblas_saxpy) 0.973 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00808 sec ]
 [ GrB_reduce 0.0045 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0155 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00906 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.999718) (cblas_saxpy) 1.01 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00911 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.932579) (cblas_saxpy) 0.946 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00807 sec ]
 [ GrB_reduce 0.00573 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.943265) (cblas_saxpy) 0.959 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0122 sec ]
 [ GrB_apply (inplace-op) 0.00891 sec ]
 [ GrB_reduce 0.00467 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00818 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.934605) (cblas_saxpy) 0.948 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.0083 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 1.14465) (cblas_saxpy) 1.16 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00819 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00812 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.940425) (cblas_saxpy) 0.953 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0126 sec ]
 [ GrB_apply (inplace-op) 0.00949 sec ]
 [ GrB_reduce 0.0047 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00809 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.943858) (cblas_saxpy) 0.957 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0127 sec ]
 [ GrB_apply (inplace-op) 0.00834 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0151 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00906 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.92103) (cblas_saxpy) 0.936 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00808 sec ]
 [ GrB_reduce 0.0045 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0156 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.919723) (cblas_saxpy) 0.933 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00915 sec ]
 [ GrB_reduce 0.0045 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.909234) (cblas_saxpy) 0.922 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0126 sec ]
 [ GrB_apply (inplace-op) 0.00807 sec ]
 [ GrB_reduce 0.00466 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00795 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.950661) (cblas_saxpy) 0.964 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00832 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.910689) (cblas_saxpy) 0.924 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00812 sec ]
 [ GrB_reduce 0.00449 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0148 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00794 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.945866) (cblas_saxpy) 0.959 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00818 sec ]
 [ GrB_reduce 0.00453 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00818 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.907641) (cblas_saxpy) 0.92 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00811 sec ]
 [ GrB_reduce 0.00469 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0146 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00793 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.92442) (cblas_saxpy) 0.937 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00832 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00815 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.90664) (cblas_saxpy) 0.92 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0122 sec ]
 [ GrB_apply (inplace-op) 0.00808 sec ]
 [ GrB_reduce 0.00455 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00793 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.896305) (cblas_saxpy) 0.909 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0114 sec ]
 [ GrB_apply (inplace-op) 0.00837 sec ]
 [ GrB_reduce 0.00605 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00823 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.907134) (cblas_saxpy) 0.92 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0116 sec ]
 [ GrB_apply (inplace-op) 0.00807 sec ]
 [ GrB_reduce 0.0045 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0147 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00856 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.898112) (cblas_saxpy) 0.912 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0121 sec ]
 [ GrB_apply (inplace-op) 0.00816 sec ]
 [ GrB_reduce 0.00452 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0157 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00796 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.932123) (cblas_saxpy) 0.945 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0117 sec ]
 [ GrB_apply (inplace-op) 0.00807 sec ]
 [ GrB_reduce 0.00451 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0145 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00916 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.91293) (cblas_saxpy) 0.927 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0115 sec ]
 [ GrB_apply (inplace-op) 0.00821 sec ]
 [ GrB_reduce 0.00451 sec ]
warmup (3f):     22.105 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    18.6350 sec
trial:  1 time:    18.6482 sec
3f: 40: avg time:     18.642 (sec), rate:   1732.897 iters: 22

--------------------------- nthreads: 20
trial:  0 time:    19.5715 sec
trial:  1 time:    19.5289 sec
3f: 20: avg time:     19.550 (sec), rate:   1652.363 iters: 22

  61578415x1 GraphBLAS float vector, sparse by col:
  PR, 61578415 entries

    (0,0)    2.43592e-09
    (1,0)    2.43592e-09
    (2,0)    2.43592e-09
    (3,0)    2.43592e-09
    (4,0)    2.43592e-09
    (5,0)    2.43592e-09
    (6,0)    2.43592e-09
    (7,0)    2.43592e-09
    (8,0)    2.43592e-09
    (9,0)    2.43592e-09
    (10,0)    2.43592e-09
    (11,0)    2.43592e-09
    (12,0)    4.28999e-08
    (13,0)    1.2926e-08
    (14,0)    9.12961e-09
    (15,0)    2.06278e-08
    (16,0)    2.98579e-08
    (17,0)    1.53682e-08
    (18,0)    6.56924e-09
    (19,0)    2.43592e-09
    (20,0)    3.5879e-08
    (21,0)    4.50838e-08
    (22,0)    2.62213e-08
    (23,0)    9.79812e-09
    (24,0)    9.27327e-09
    (25,0)    2.43592e-09
    (26,0)    2.43592e-09
    (27,0)    2.43592e-09
    (28,0)    2.43592e-09
    (29,0)    2.43592e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    22.1262 sec
trial:  1 time:    21.8758 sec
3f: 40: avg time:     22.001 (sec), rate:   1468.296 iters: 22

--------------------------- nthreads: 20
trial:  0 time:    21.2980 sec
trial:  1 time:    21.3199 sec
3f: 20: avg time:     21.309 (sec), rate:   1515.986 iters: 22

  61578415x1 GraphBLAS float vector, sparse by col:
  PR, 61578415 entries

    (0,0)    2.43592e-09
    (1,0)    2.43592e-09
    (2,0)    2.43592e-09
    (3,0)    2.43592e-09
    (4,0)    2.43592e-09
    (5,0)    2.43592e-09
    (6,0)    2.43592e-09
    (7,0)    2.43592e-09
    (8,0)    2.43592e-09
    (9,0)    2.43592e-09
    (10,0)    2.43592e-09
    (11,0)    2.43592e-09
    (12,0)    4.28998e-08
    (13,0)    1.29259e-08
    (14,0)    9.12961e-09
    (15,0)    2.06278e-08
    (16,0)    2.98579e-08
    (17,0)    1.53682e-08
    (18,0)    6.56924e-09
    (19,0)    2.43592e-09
    (20,0)    3.5879e-08
    (21,0)    4.50838e-08
    (22,0)    2.62212e-08
    (23,0)    9.79811e-09
    (24,0)    9.27327e-09
    (25,0)    2.43592e-09
    (26,0)    2.43592e-09
    (27,0)    2.43592e-09
    (28,0)    2.43592e-09
    (29,0)    2.43592e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
 [ GxB_Matrix_import_CSR 1.71e-05 sec ]
 [ GxB_set 3.16e-06 sec ]
 [ GrB_apply (shallow-op) generic 1.3 sec ]
 [ GxB_set (transpose) 4.79 sec ]
 [ GrB_Matrix_nvals 1.53e-06 sec ]
 [ GrB_Matrix_dup 0.884 sec ]
original # of edges: 1930292948
 [ GrB_reduce 0.837 sec ]
 [ GrB_reduce wait (zombies: 438, pending: 0) 0.182 sec ]
 [ GrB_Vector_nvals 8.06e-07 sec ]
 [ GrB_Vector_nvals 6.5e-08 sec ]
Matrix has 7236618 empty rows
Matrix has 438 empty cols
 [ GrB_reduce wait (zombies: 0, pending: 7236964) generic add 1.96 sec ]
 [ GrB_Vector_nvals 4.56e-07 sec ]
 [ GrB_Vector_dup 0.0249 sec ]
 [ GxB_Vector_export 2.51e-06 sec ]

==========input graph: nodes: 50636151 edges: 1930292948
diag entries added: 7236964
 [ GrB_Matrix_nvals 6.55e-07 sec ]
read time: 51.0691 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0281 sec ]
 [ GrB_Vector_dup 0.0254 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00631 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0295 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0286 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0119 sec ]
 [ GrB_apply (inplace-op) 0.00678 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00645 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00922 sec ]
 [ GrB_apply (inplace-op) 0.00645 sec ]
 [ GrB_reduce 0.00349 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0125 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00753 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00986 sec ]
 [ GrB_apply (inplace-op) 0.00672 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.013 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00644 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00902 sec ]
 [ GrB_apply (inplace-op) 0.00641 sec ]
 [ GrB_reduce 0.00351 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0122 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00882 sec ]
 [ GrB_apply (inplace-op) 0.00676 sec ]
 [ GrB_reduce 0.00481 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00645 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00902 sec ]
 [ GrB_apply (inplace-op) 0.00662 sec ]
 [ GrB_reduce 0.00347 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00649 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.01 sec ]
 [ GrB_apply (inplace-op) 0.00674 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00646 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00918 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00353 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0122 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.367 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00893 sec ]
 [ GrB_apply (inplace-op) 0.00673 sec ]
 [ GrB_reduce 0.00397 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00649 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00901 sec ]
 [ GrB_apply (inplace-op) 0.00758 sec ]
 [ GrB_reduce 0.00348 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0131 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00753 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00883 sec ]
 [ GrB_apply (inplace-op) 0.00672 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00651 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.009 sec ]
 [ GrB_apply (inplace-op) 0.00644 sec ]
 [ GrB_reduce 0.00427 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00637 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00884 sec ]
 [ GrB_apply (inplace-op) 0.00695 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00666 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00911 sec ]
 [ GrB_apply (inplace-op) 0.00643 sec ]
 [ GrB_reduce 0.00348 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00909 sec ]
 [ GrB_apply (inplace-op) 0.00671 sec ]
 [ GrB_reduce 0.00391 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00646 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.37 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.009 sec ]
 [ GrB_apply (inplace-op) 0.00707 sec ]
 [ GrB_reduce 0.00351 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00661 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00882 sec ]
 [ GrB_apply (inplace-op) 0.00674 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0123 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00694 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00917 sec ]
 [ GrB_apply (inplace-op) 0.00642 sec ]
 [ GrB_reduce 0.00346 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0122 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00882 sec ]
 [ GrB_apply (inplace-op) 0.00676 sec ]
 [ GrB_reduce 0.00448 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0076 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00916 sec ]
 [ GrB_apply (inplace-op) 0.0066 sec ]
 [ GrB_reduce 0.00346 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0134 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00896 sec ]
 [ GrB_apply (inplace-op) 0.00673 sec ]
 [ GrB_reduce 0.00396 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00648 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00901 sec ]
 [ GrB_apply (inplace-op) 0.00644 sec ]
 [ GrB_reduce 0.00348 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0071 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0088 sec ]
 [ GrB_apply (inplace-op) 0.0069 sec ]
 [ GrB_reduce 0.00393 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00666 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.369 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0092 sec ]
 [ GrB_apply (inplace-op) 0.00644 sec ]
 [ GrB_reduce 0.00347 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0122 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00639 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00902 sec ]
 [ GrB_apply (inplace-op) 0.00671 sec ]
 [ GrB_reduce 0.00463 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00651 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00942 sec ]
 [ GrB_apply (inplace-op) 0.00665 sec ]
 [ GrB_reduce 0.00347 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00659 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00985 sec ]
 [ GrB_apply (inplace-op) 0.0067 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00647 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00903 sec ]
 [ GrB_apply (inplace-op) 0.00643 sec ]
 [ GrB_reduce 0.00351 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.008 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00882 sec ]
 [ GrB_apply (inplace-op) 0.00802 sec ]
 [ GrB_reduce 0.00388 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0066 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.368 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00906 sec ]
 [ GrB_apply (inplace-op) 0.00641 sec ]
 [ GrB_reduce 0.00347 sec ]
warmup (3f):     12.313 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0277 sec ]
 [ GrB_Vector_dup 0.0256 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00627 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0292 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.455362) (cblas_saxpy) 0.466 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0092 sec ]
 [ GrB_apply (inplace-op) 0.00697 sec ]
 [ GrB_reduce 0.00397 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00648 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.461246) (cblas_saxpy) 0.473 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0095 sec ]
 [ GrB_apply (inplace-op) 0.00641 sec ]
 [ GrB_reduce 0.00348 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0128 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00726 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.43722) (cblas_saxpy) 0.447 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00923 sec ]
 [ GrB_apply (inplace-op) 0.00673 sec ]
 [ GrB_reduce 0.00397 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00666 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.446402) (cblas_saxpy) 0.458 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0106 sec ]
 [ GrB_apply (inplace-op) 0.00722 sec ]
 [ GrB_reduce 0.00348 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.433567) (cblas_saxpy) 0.443 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00938 sec ]
 [ GrB_apply (inplace-op) 0.00669 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00649 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.427256) (cblas_saxpy) 0.438 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00953 sec ]
 [ GrB_apply (inplace-op) 0.00666 sec ]
 [ GrB_reduce 0.0037 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00639 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.426212) (cblas_saxpy) 0.437 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00923 sec ]
 [ GrB_apply (inplace-op) 0.00671 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00645 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.433881) (cblas_saxpy) 0.443 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00952 sec ]
 [ GrB_apply (inplace-op) 0.00757 sec ]
 [ GrB_reduce 0.00348 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00652 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.431009) (cblas_saxpy) 0.442 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00927 sec ]
 [ GrB_apply (inplace-op) 0.00737 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00647 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.427154) (cblas_saxpy) 0.438 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00949 sec ]
 [ GrB_apply (inplace-op) 0.00672 sec ]
 [ GrB_reduce 0.00376 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0122 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00637 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.430106) (cblas_saxpy) 0.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00922 sec ]
 [ GrB_apply (inplace-op) 0.00671 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00648 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.443524) (cblas_saxpy) 0.453 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00977 sec ]
 [ GrB_apply (inplace-op) 0.00664 sec ]
 [ GrB_reduce 0.00442 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.434531) (cblas_saxpy) 0.444 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00919 sec ]
 [ GrB_apply (inplace-op) 0.00673 sec ]
 [ GrB_reduce 0.0039 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00644 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.426515) (cblas_saxpy) 0.437 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0095 sec ]
 [ GrB_apply (inplace-op) 0.00662 sec ]
 [ GrB_reduce 0.00346 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0123 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.428224) (cblas_saxpy) 0.439 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00921 sec ]
 [ GrB_apply (inplace-op) 0.00672 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00646 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.439377) (cblas_saxpy) 0.45 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0102 sec ]
 [ GrB_apply (inplace-op) 0.00846 sec ]
 [ GrB_reduce 0.00348 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.428041) (cblas_saxpy) 0.438 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00921 sec ]
 [ GrB_apply (inplace-op) 0.00672 sec ]
 [ GrB_reduce 0.00506 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00646 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.427668) (cblas_saxpy) 0.437 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00951 sec ]
 [ GrB_apply (inplace-op) 0.00642 sec ]
 [ GrB_reduce 0.00362 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0122 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00642 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.442701) (cblas_saxpy) 0.454 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0092 sec ]
 [ GrB_apply (inplace-op) 0.0069 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00647 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.468114) (cblas_saxpy) 0.479 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0107 sec ]
 [ GrB_apply (inplace-op) 0.00662 sec ]
 [ GrB_reduce 0.00347 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.428909) (cblas_saxpy) 0.44 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00927 sec ]
 [ GrB_apply (inplace-op) 0.00756 sec ]
 [ GrB_reduce 0.00404 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00645 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.435607) (cblas_saxpy) 0.446 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00949 sec ]
 [ GrB_apply (inplace-op) 0.00661 sec ]
 [ GrB_reduce 0.00346 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00638 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.440233) (cblas_saxpy) 0.45 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00938 sec ]
 [ GrB_apply (inplace-op) 0.00671 sec ]
 [ GrB_reduce 0.00393 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.012 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00647 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.425872) (cblas_saxpy) 0.435 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0107 sec ]
 [ GrB_apply (inplace-op) 0.00662 sec ]
 [ GrB_reduce 0.00347 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0121 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00639 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.432538) (cblas_saxpy) 0.442 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.01 sec ]
 [ GrB_apply (inplace-op) 0.00749 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0119 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0065 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.426432) (cblas_saxpy) 0.437 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0103 sec ]
 [ GrB_apply (inplace-op) 0.00679 sec ]
 [ GrB_reduce 0.00347 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0124 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00641 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.440299) (cblas_saxpy) 0.452 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00933 sec ]
 [ GrB_apply (inplace-op) 0.00673 sec ]
 [ GrB_reduce 0.00389 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.013 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00734 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.445051) (cblas_saxpy) 0.456 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00953 sec ]
 [ GrB_apply (inplace-op) 0.00643 sec ]
 [ GrB_reduce 0.00367 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0122 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0064 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.426146) (cblas_saxpy) 0.436 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0092 sec ]
 [ GrB_apply (inplace-op) 0.00672 sec ]
 [ GrB_reduce 0.00389 sec ]
warmup (3f):     14.181 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:    12.3221 sec
trial:  1 time:    12.3118 sec
3f: 40: avg time:     12.317 (sec), rate:   4701.554 iters: 30

--------------------------- nthreads: 20
trial:  0 time:    12.3605 sec
trial:  1 time:    12.3257 sec
3f: 20: avg time:     12.343 (sec), rate:   4691.594 iters: 30

  50636151x1 GraphBLAS float vector, sparse by col:
  PR, 50636151 entries

    (0,0)    3.04448e-09
    (1,0)    3.04448e-09
    (2,0)    3.04448e-09
    (3,0)    3.04448e-09
    (4,0)    3.04448e-09
    (5,0)    3.04448e-09
    (6,0)    3.04448e-09
    (7,0)    3.04448e-09
    (8,0)    3.04448e-09
    (9,0)    3.04448e-09
    (10,0)    5.78254e-09
    (11,0)    3.31792e-09
    (12,0)    3.04448e-09
    (13,0)    3.04448e-09
    (14,0)    3.04448e-09
    (15,0)    3.04448e-09
    (16,0)    3.04448e-09
    (17,0)    3.04448e-09
    (18,0)    3.06634e-09
    (19,0)    3.06634e-09
    (20,0)    3.06634e-09
    (21,0)    3.06634e-09
    (22,0)    3.06634e-09
    (23,0)    3.06634e-09
    (24,0)    3.05126e-09
    (25,0)    3.05126e-09
    (26,0)    3.05126e-09
    (27,0)    3.05126e-09
    (28,0)    3.05126e-09
    (29,0)    3.05126e-09
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:    14.1263 sec
trial:  1 time:    14.0132 sec
3f: 40: avg time:     14.070 (sec), rate:   3978.649 iters: 29

--------------------------- nthreads: 20
trial:  0 time:    13.8128 sec
trial:  1 time:    13.8094 sec
3f: 20: avg time:     13.811 (sec), rate:   4053.161 iters: 29

  50636151x1 GraphBLAS float vector, sparse by col:
  PR, 50636151 entries

    (0,0)    3.04448e-09
    (1,0)    3.04448e-09
    (2,0)    3.04448e-09
    (3,0)    3.04448e-09
    (4,0)    3.04448e-09
    (5,0)    3.04448e-09
    (6,0)    3.04448e-09
    (7,0)    3.04448e-09
    (8,0)    3.04448e-09
    (9,0)    3.04448e-09
    (10,0)    5.78254e-09
    (11,0)    3.31792e-09
    (12,0)    3.04448e-09
    (13,0)    3.04448e-09
    (14,0)    3.04448e-09
    (15,0)    3.04448e-09
    (16,0)    3.04448e-09
    (17,0)    3.04448e-09
    (18,0)    3.06634e-09
    (19,0)    3.06634e-09
    (20,0)    3.06634e-09
    (21,0)    3.06634e-09
    (22,0)    3.06634e-09
    (23,0)    3.06634e-09
    (24,0)    3.05126e-09
    (25,0)    3.05126e-09
    (26,0)    3.05126e-09
    (27,0)    3.05126e-09
    (28,0)    3.05126e-09
    (29,0)    3.05126e-09
    ...
MKL version: 20200001
threads to test:  40 20
matrix: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
 [ GxB_Matrix_import_CSR 1.35e-05 sec ]
 [ GxB_set 3.02e-06 sec ]
 [ GrB_apply (shallow-op) generic 0.0646 sec ]
 [ GxB_set (transpose) 0.633 sec ]
 [ GrB_Matrix_nvals 1.28e-06 sec ]
 [ GrB_Matrix_dup 0.0399 sec ]
original # of edges: 57708624
 [ GrB_reduce 0.195 sec ]
 [ GrB_reduce 0.0213 sec ]
 [ GrB_Vector_nvals 6.61e-07 sec ]
 [ GrB_Vector_nvals 6.1e-08 sec ]
 [ GrB_reduce 0.179 sec ]
 [ GrB_Vector_nvals 3.63e-07 sec ]
 [ GrB_Vector_dup 0.0115 sec ]
 [ GxB_Vector_export 2.9e-06 sec ]

==========input graph: nodes: 23947347 edges: 57708624
diag entries added: 0
 [ GrB_Matrix_nvals 7.34e-07 sec ]
read time: 2.21905 sec
# of trials: 2
chunk: 65536

Method 3f: with MKL: 0
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0172 sec ]
 [ GrB_Vector_dup 0.0141 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00267 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0141 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.019 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0198 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00705 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00272 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0196 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00549 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0196 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00425 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0196 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00493 sec ]
 [ GrB_apply (inplace-op) 0.0029 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00548 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0027 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00312 sec ]
 [ GrB_reduce 0.00217 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00272 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00421 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00568 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00494 sec ]
 [ GrB_apply (inplace-op) 0.00452 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00563 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0196 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00517 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00664 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00444 sec ]
 [ GrB_apply (inplace-op) 0.00309 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00307 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00401 sec ]
 [ GrB_apply (inplace-op) 0.00398 sec ]
 [ GrB_reduce 0.00216 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00388 sec ]
 [ GrB_reduce 0.00314 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00549 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00272 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00401 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00241 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00567 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00226 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00583 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00278 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00405 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00589 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00326 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00408 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00402 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00385 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00553 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00221 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0204 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0027 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00422 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00554 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0053 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00225 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00549 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00405 sec ]
 [ GrB_apply (inplace-op) 0.00379 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00402 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.0034 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00219 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00566 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0204 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00423 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00548 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00512 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00665 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00271 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00446 sec ]
 [ GrB_apply (inplace-op) 0.00307 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00667 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.021 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00616 sec ]
 [ GrB_apply (inplace-op) 0.00433 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00583 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00516 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00631 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00453 sec ]
 [ GrB_apply (inplace-op) 0.00309 sec ]
 [ GrB_reduce 0.00221 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00331 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00388 sec ]
 [ GrB_reduce 0.00219 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00549 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00389 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00401 sec ]
 [ GrB_apply (inplace-op) 0.00345 sec ]
 [ GrB_reduce 0.00239 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00555 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00403 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.0024 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00562 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0027 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00402 sec ]
 [ GrB_apply (inplace-op) 0.00294 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00566 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00405 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00583 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00309 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00401 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00272 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0195 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00404 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place 0.0194 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00401 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00224 sec ]
warmup (3f):      1.541 (threads: 40) MKL: 0

Method 3f: with MKL: 1
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0127 sec ]
 [ GrB_Vector_dup 0.0116 sec ]
 [ GrB_assign (C dense) Method 22: (C dense) += scalar 0.00262 sec ]
 [ GrB_eWiseMult (A dense) (B dense) dense C=A+B 0.0138 sec ]
 [ GrB_assign (C empty) Method 21: (C dense) = scalar 0.0127 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.103461) (cblas_saxpy) 0.108 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00448 sec ]
 [ GrB_apply (inplace-op) 0.0029 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00565 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0527625) (cblas_saxpy) 0.0588 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00449 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00625 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00327 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.052398) (cblas_saxpy) 0.0585 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00446 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00354 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0524539) (cblas_saxpy) 0.0582 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0045 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00225 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00549 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0535261) (cblas_saxpy) 0.0593 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00446 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00221 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00742 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00339 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0531282) (cblas_saxpy) 0.0588 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0045 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00225 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0027 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0531997) (cblas_saxpy) 0.0592 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00458 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00553 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0533578) (cblas_saxpy) 0.0579 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00449 sec ]
 [ GrB_apply (inplace-op) 0.00316 sec ]
 [ GrB_reduce 0.00218 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00557 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0529747) (cblas_saxpy) 0.0592 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.00401 sec ]
 [ GrB_reduce 0.00275 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00549 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00271 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0514146) (cblas_saxpy) 0.056 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0046 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00227 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00567 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.050414) (cblas_saxpy) 0.0555 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00448 sec ]
 [ GrB_apply (inplace-op) 0.00311 sec ]
 [ GrB_reduce 0.00217 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0517215) (cblas_saxpy) 0.0577 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00451 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00282 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00561 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0506601) (cblas_saxpy) 0.0567 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00449 sec ]
 [ GrB_apply (inplace-op) 0.0029 sec ]
 [ GrB_reduce 0.00226 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00588 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00271 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0506517) (cblas_saxpy) 0.0567 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00448 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00229 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00549 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00271 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.050097) (cblas_saxpy) 0.0577 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00449 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00271 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0503545) (cblas_saxpy) 0.056 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00545 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00225 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0511854) (cblas_saxpy) 0.0572 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0045 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00263 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00271 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.052043) (cblas_saxpy) 0.0578 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00448 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00226 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0056 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0526002) (cblas_saxpy) 0.0572 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00568 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00221 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00553 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0499344) (cblas_saxpy) 0.0545 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00449 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00287 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00564 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0505791) (cblas_saxpy) 0.0564 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00448 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00594 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.0027 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0512598) (cblas_saxpy) 0.0573 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00449 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00226 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00392 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0508197) (cblas_saxpy) 0.0558 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00445 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00265 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00271 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0515897) (cblas_saxpy) 0.0573 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00473 sec ]
 [ GrB_apply (inplace-op) 0.00289 sec ]
 [ GrB_reduce 0.00225 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00549 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0525085) (cblas_saxpy) 0.0574 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.00349 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00269 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0519863) (cblas_saxpy) 0.0594 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00451 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00341 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00271 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0515219) (cblas_saxpy) 0.0577 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00563 sec ]
 [ GrB_apply (inplace-op) 0.00288 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00561 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0532337) (cblas_saxpy) 0.0578 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00464 sec ]
 [ GrB_apply (inplace-op) 0.00284 sec ]
 [ GrB_reduce 0.00222 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00554 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00334 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0527223) (cblas_saxpy) 0.0573 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.00317 sec ]
 [ GrB_reduce 0.00218 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0525079) (cblas_saxpy) 0.0586 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0045 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00244 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00553 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0505716) (cblas_saxpy) 0.0563 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00446 sec ]
 [ GrB_apply (inplace-op) 0.00289 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00345 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0529064) (cblas_saxpy) 0.0574 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0045 sec ]
 [ GrB_apply (inplace-op) 0.00289 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00553 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00266 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0524704) (cblas_saxpy) 0.0586 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00446 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.0022 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00551 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00267 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0520447) (cblas_saxpy) 0.0582 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00459 sec ]
 [ GrB_apply (inplace-op) 0.00283 sec ]
 [ GrB_reduce 0.00223 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00553 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0511341) (cblas_saxpy) 0.0569 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00447 sec ]
 [ GrB_apply (inplace-op) 0.00312 sec ]
 [ GrB_reduce 0.00218 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00639 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00315 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0525562) (cblas_saxpy) 0.0586 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.0045 sec ]
 [ GrB_apply (inplace-op) 0.00286 sec ]
 [ GrB_reduce 0.00237 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.0055 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00312 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0511901) (cblas_saxpy) 0.0583 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00617 sec ]
 [ GrB_apply (inplace-op) 0.00287 sec ]
 [ GrB_reduce 0.00331 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00552 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0517204) (cblas_saxpy) 0.0572 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00513 sec ]
 [ GrB_apply (inplace-op) 0.00285 sec ]
 [ GrB_reduce 0.00224 sec ]
 [ GrB_eWiseMult (C dense) (A dense) (B dense) dense C=A+B 0.00561 sec ]
 [ GrB_assign (C dense) Method 21: (C dense) = scalar 0.00268 sec ]
 [ GrB_mxv C=A'*B, dot_product dense, C+=A'*B in place (MKL mxv time: 0.0520911) (cblas_saxpy) 0.0582 sec ]
 [ GrB_assign (C dense) Method 23: (C dense) += Z (Z dense) (cblas_saxpy) 0.00551 sec ]
 [ GrB_apply (inplace-op) 0.00454 sec ]
 [ GrB_reduce 0.00221 sec ]
warmup (3f):      3.069 (threads: 40) MKL: 1

Method 3f: with MKL: 0

--------------------------- nthreads: 40
trial:  0 time:     1.5070 sec
trial:  1 time:     1.5121 sec
3f: 40: avg time:      1.510 (sec), rate:   1490.916 iters: 39

--------------------------- nthreads: 20
trial:  0 time:     1.5289 sec
trial:  1 time:     1.5003 sec
3f: 20: avg time:      1.515 (sec), rate:   1485.970 iters: 39

  23947347x1 GraphBLAS float vector, sparse by col:
  PR, 23947347 entries

    (0,0)    4.75579e-08
    (1,0)    3.20307e-08
    (2,0)    4.95218e-08
    (3,0)    3.69073e-08
    (4,0)    3.75892e-08
    (5,0)    5.17024e-08
    (6,0)    5.35032e-08
    (7,0)    2.14235e-08
    (8,0)    3.78229e-08
    (9,0)    4.74456e-08
    (10,0)    4.79489e-08
    (11,0)    4.80614e-08
    (12,0)    4.3424e-08
    (13,0)    5.12736e-08
    (14,0)    3.66438e-08
    (15,0)    3.99929e-08
    (16,0)    6.02066e-08
    (17,0)    2.33178e-08
    (18,0)    2.27628e-08
    (19,0)    5.77866e-08
    (20,0)    3.66638e-08
    (21,0)    3.55786e-08
    (22,0)    6.66583e-08
    (23,0)    2.18603e-08
    (24,0)    2.51435e-08
    (25,0)    5.51881e-08
    (26,0)    5.21458e-08
    (27,0)    3.66357e-08
    (28,0)    7.3439e-08
    (29,0)    5.27261e-08
    ...

Method 3f: with MKL: 1

--------------------------- nthreads: 40
trial:  0 time:     3.0167 sec
trial:  1 time:     3.0170 sec
3f: 40: avg time:      3.017 (sec), rate:    746.016 iters: 39

--------------------------- nthreads: 20
trial:  0 time:     2.7887 sec
trial:  1 time:     2.7078 sec
3f: 20: avg time:      2.748 (sec), rate:    818.934 iters: 39

  23947347x1 GraphBLAS float vector, sparse by col:
  PR, 23947347 entries

    (0,0)    4.75579e-08
    (1,0)    3.20307e-08
    (2,0)    4.95218e-08
    (3,0)    3.69073e-08
    (4,0)    3.75892e-08
    (5,0)    5.17024e-08
    (6,0)    5.35032e-08
    (7,0)    2.14235e-08
    (8,0)    3.78229e-08
    (9,0)    4.74456e-08
    (10,0)    4.79489e-08
    (11,0)    4.80614e-08
    (12,0)    4.3424e-08
    (13,0)    5.12736e-08
    (14,0)    3.66438e-08
    (15,0)    3.99929e-08
    (16,0)    6.02066e-08
    (17,0)    2.33178e-08
    (18,0)    2.27628e-08
    (19,0)    5.77866e-08
    (20,0)    3.66638e-08
    (21,0)    3.55786e-08
    (22,0)    6.66583e-08
    (23,0)    2.18603e-08
    (24,0)    2.51435e-08
    (25,0)    5.51881e-08
    (26,0)    5.21458e-08
    (27,0)    3.66357e-08
    (28,0)    7.3439e-08
    (29,0)    5.27261e-08
    ...
