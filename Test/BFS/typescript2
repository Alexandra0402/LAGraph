Script started on Tue 28 Jul 2020 08:36:25 PM CDT
Intel Suite:
Copyright (C) 2009-2019 Intel Corporation. All rights reserved.
Intel(R) VTune(TM) Amplifier 2019 (build 591499)
[0;36mhypersparse $[0m ./do_gap
threads to test:  40
chunk: 65536
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 1.33e-05 sec ]
 [ GxB_set 2.17e-05 sec ]
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 4.72e-05 sec ]
 [ GrB_apply (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_true_bool)) 5.59 sec ]
 [ GrB_Matrix_nvals 1.68e-06 sec ]
read time: 67.4362
 [ GrB_transpose (transpose) 69 sec ]
 [ GrB_Matrix_nvals 5.08e-07 sec ]
 [ GrB_Matrix_nvals 7.08e-08 sec ]
 [ GrB_eWiseMult emult 7.52 sec ]
 [ GrB_Matrix_nvals 5.63e-07 sec ]
 [ GrB_reduce 0.105 sec ]
A is symmetric
transpose time: 76.6218

==========input graph: nodes: 134217726 edges: 4223264644 ntrials: 1
pushpull (with tree only):

------------------------------------------- threads: 40
 [ GrB_Matrix_nvals 2.41e-07 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar calloc 0.0637 sec ]
 [ GrB_vxm (wait: 0 zombies, 1 pending) (hyper to sparse) (M full) C<!M>=A*B, saxpy axbflops 2562 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 3.31e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3.66235e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 90 coarse: (gus: 0 hash: 0) fine: (gus: 90 hash: 0) 0.103 sec ]
 [ GrB_Vector_nvals 4.94e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.0158 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3.6581e+09 Mwork 0 (use dense mask) nthreads 40 ntasks 155 coarse: (gus: 0 hash: 0) fine: (gus: 155 hash: 0) 2.65 sec ]
 [ GrB_Vector_nvals 4.59e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.027 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5.2671e+08 Mwork 0 (use dense mask) nthreads 40 ntasks 133 coarse: (gus: 0 hash: 0) fine: (gus: 133 hash: 0) 0.616 sec ]
 [ GrB_Vector_nvals 6.59e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00419 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1.78588e+06 Mwork 0 (use dense mask in place) nthreads 27 ntasks 28 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 28) 0.0204 sec ]
 [ GrB_Vector_nvals 3.57e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000112 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4677 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000745 sec ]
 [ GrB_Vector_nvals 1.83e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.4e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.08e-05 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
trial:  0 threads: 40 source:   2338012 time:     3.5082 sec
:40:pushpull (onlytree):        3.508 (sec), rate: 1203.82
phase  0:       0.0749 msec
phase  1:    3395.7128 msec
phase  2:       0.0275 msec
phase  3:       0.0231 msec
phase  4:      41.9928 msec
phase  5:     130.0565 msec
phase  6:      79.4451 msec
phase  7:    3144.1201 msec
phase  8:       0.0123 msec
phase  9:    3077.0084 msec
phase 10:      10.8893 msec
phase 11:       0.0205 msec
phase 12:      56.1808 msec

threads to test:  40
chunk: 65536
matrix: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-urand/GAP-urand.grb
 [ GxB_Matrix_import_CSR 1.34e-05 sec ]
 [ GxB_set 1.86e-05 sec ]
sources: /home/faculty/davis/GAP/GAP-urand/GAP-urand_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 4.62e-05 sec ]
 [ GrB_apply (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_true_bool)) 2.4 sec ]
 [ GrB_Matrix_nvals 1.52e-06 sec ]
read time: 65.7675
 [ GrB_transpose (transpose) 73.9 sec ]
 [ GrB_Matrix_nvals 5.78e-07 sec ]
 [ GrB_Matrix_nvals 9.87e-08 sec ]
 [ GrB_eWiseMult emult 5.56 sec ]
 [ GrB_Matrix_nvals 4.04e-07 sec ]
 [ GrB_reduce 0.108 sec ]
A is symmetric
transpose time: 79.5813

==========input graph: nodes: 134217728 edges: 4294966740 ntrials: 1
pushpull (with tree only):

------------------------------------------- threads: 40
 [ GrB_Matrix_nvals 2.83e-07 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar calloc 0.0637 sec ]
 [ GrB_vxm (wait: 0 zombies, 1 pending) (hyper to sparse) (M full) C<!M>=A*B, saxpy axbflops 31 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000108 sec ]
 [ GrB_Vector_nvals 3.45e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1015 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000103 sec ]
 [ GrB_Vector_nvals 1.59e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 32239 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00196 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000517 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1.03041e+06 Mwork 0 (use dense mask in place) nthreads 15 ntasks 16 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 16) 0.0144 sec ]
 [ GrB_Vector_nvals 1.93e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00243 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3.28342e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 89 coarse: (gus: 0 hash: 0) fine: (gus: 89 hash: 0) 0.198 sec ]
 [ GrB_Vector_nvals 4.31e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.0221 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9.24879e+08 Mwork 0 (use dense mask) nthreads 40 ntasks 143 coarse: (gus: 0 hash: 0) fine: (gus: 143 hash: 0) 1.44 sec ]
 [ GrB_Vector_nvals 4.9e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.0356 sec ]
 [ GrB_mxv (M full) C<!M>=A'*B, dot_product 0.0641 sec ]
 [ GrB_Vector_nvals 7.59e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00176 sec ]
 [ GrB_mxv (M full) C<!M>=A'*B, dot_product 0.0275 sec ]
 [ GrB_Vector_nvals 2.06e-07 sec ]
trial:  0 threads: 40 source:  27691419 time:     1.8728 sec
:40:pushpull (onlytree):        1.873 (sec), rate: 2293.39
phase  0:       0.0898 msec
phase  1:    1745.6236 msec
phase  2:       0.0589 msec
phase  3:       0.0132 msec
phase  4:      23.6330 msec
phase  5:      73.7953 msec
phase  6:      43.6887 msec
phase  7:    1512.8888 msec
phase  8:       0.0074 msec
phase  9:    1431.0751 msec
phase 10:       7.4159 msec
phase 11:       0.0146 msec
phase 12:      74.3661 msec

threads to test:  40
chunk: 65536
matrix: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter.grb
 [ GxB_Matrix_import_CSR 1.45e-05 sec ]
 [ GxB_set 2.46e-05 sec ]
sources: /home/faculty/davis/GAP/GAP-twitter/GAP-twitter_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 4.88e-05 sec ]
 [ GrB_apply (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_true_bool)) 0.857 sec ]
 [ GrB_Matrix_nvals 1.62e-06 sec ]
read time: 23.8634
 [ GrB_transpose (transpose) 19.5 sec ]
 [ GrB_Matrix_nvals 6.68e-07 sec ]
 [ GrB_Matrix_nvals 8.2e-08 sec ]
 [ GrB_eWiseMult emult 1.03 sec ]
 [ GrB_Matrix_nvals 3.59e-07 sec ]
A is unsymmetric
transpose time: 20.5042

==========input graph: nodes: 61578415 edges: 1468364884 ntrials: 1
pushpull (with tree only):

------------------------------------------- threads: 40
 [ GrB_Matrix_nvals 2.47e-07 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar calloc 0.0274 sec ]
 [ GrB_vxm (wait: 0 zombies, 1 pending) (hyper to sparse) (M full) C<!M>=A*B, saxpy axbflops 4 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000108 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 44 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.52e-05 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7971 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000105 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4.02123e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 100 coarse: (gus: 0 hash: 0) fine: (gus: 100 hash: 0) 0.0648 sec ]
 [ GrB_Vector_nvals 4.64e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00792 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9.29995e+08 Mwork 0 (use dense mask) nthreads 40 ntasks 151 coarse: (gus: 0 hash: 0) fine: (gus: 151 hash: 0) 0.474 sec ]
 [ GrB_Vector_nvals 3.16e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.0115 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4.11083e+08 Mwork 0 (use dense mask) nthreads 40 ntasks 142 coarse: (gus: 0 hash: 0) fine: (gus: 142 hash: 0) 0.277 sec ]
 [ GrB_Vector_nvals 8.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00653 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3.13924e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 97 coarse: (gus: 0 hash: 0) fine: (gus: 97 hash: 0) 0.0898 sec ]
 [ GrB_Vector_nvals 6.72e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00133 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2.84667e+06 Mwork 0 (use dense mask in place) nthreads 40 ntasks 44 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 44) 0.0226 sec ]
 [ GrB_Vector_nvals 7.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000859 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 237776 Mwork 0 (use dense mask in place) nthreads 3 ntasks 4 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 4) 0.00728 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21164 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 1.17e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2370 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000146 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.95e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 331 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.32e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.36e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 459 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.63e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.38e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 138 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.29e-05 sec ]
 [ GrB_Vector_nvals 3.35e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.77e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 141 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.93e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.84e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.55e-05 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
trial:  0 threads: 40 source:  12441072 time:     0.9967 sec
:40:pushpull (onlytree):        0.997 (sec), rate: 1473.29
phase  0:       0.3699 msec
phase  1:     936.3741 msec
phase  2:       0.0411 msec
phase  3:       0.0316 msec
phase  4:      27.9613 msec
phase  5:      81.8011 msec
phase  6:      60.9367 msec
phase  7:     765.2525 msec
phase  8:       0.0160 msec
phase  9:     725.0878 msec
phase 10:       7.4695 msec
phase 11:       0.0270 msec
phase 12:      32.6432 msec

threads to test:  40
chunk: 65536
matrix: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-web/GAP-web.grb
 [ GxB_Matrix_import_CSR 1.39e-05 sec ]
 [ GxB_set 2.45e-05 sec ]
sources: /home/faculty/davis/GAP/GAP-web/GAP-web_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 5.15e-05 sec ]
 [ GrB_apply (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_true_bool)) 1.11 sec ]
 [ GrB_Matrix_nvals 9.99e-07 sec ]
read time: 31.1188
 [ GrB_transpose (transpose) 4.56 sec ]
 [ GrB_Matrix_nvals 5.2e-07 sec ]
 [ GrB_Matrix_nvals 5.68e-08 sec ]
 [ GrB_eWiseMult emult 0.788 sec ]
 [ GrB_Matrix_nvals 5.59e-07 sec ]
A is unsymmetric
transpose time: 5.35083

==========input graph: nodes: 50636151 edges: 1930292948 ntrials: 1
pushpull (with tree only):

------------------------------------------- threads: 40
 [ GrB_Matrix_nvals 1.9e-07 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar calloc 0.0225 sec ]
 [ GrB_vxm (wait: 0 zombies, 1 pending) (hyper to sparse) (M full) C<!M>=A*B, saxpy axbflops 57 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000102 sec ]
 [ GrB_Vector_nvals 3.38e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2338 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.53e-05 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14008 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 25531 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000395 sec ]
 [ GrB_Vector_nvals 1.58e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 60027 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000927 sec ]
 [ GrB_Vector_nvals 1.39e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 273631 Mwork 0 (use dense mask in place) nthreads 4 ntasks 5 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 5) 0.00364 sec ]
 [ GrB_Vector_nvals 1.93e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00053 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3.1354e+06 Mwork 0 (use dense mask in place) nthreads 40 ntasks 48 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 48) 0.0183 sec ]
 [ GrB_Vector_nvals 6.98e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00208 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2.05177e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 94 coarse: (gus: 0 hash: 0) fine: (gus: 94 hash: 0) 0.0251 sec ]
 [ GrB_Vector_nvals 5.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000644 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5.95916e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 110 coarse: (gus: 0 hash: 0) fine: (gus: 110 hash: 0) 0.0321 sec ]
 [ GrB_Vector_nvals 6e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00165 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1.53431e+08 Mwork 0 (use dense mask) nthreads 40 ntasks 129 coarse: (gus: 0 hash: 0) fine: (gus: 129 hash: 0) 0.0538 sec ]
 [ GrB_Vector_nvals 5.52e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00255 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2.00625e+08 Mwork 0 (use dense mask) nthreads 40 ntasks 134 coarse: (gus: 0 hash: 0) fine: (gus: 134 hash: 0) 0.068 sec ]
 [ GrB_Vector_nvals 4.42e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00325 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2.53847e+08 Mwork 0 (use dense mask) nthreads 40 ntasks 138 coarse: (gus: 0 hash: 0) fine: (gus: 138 hash: 0) 0.0786 sec ]
 [ GrB_Vector_nvals 9.52e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00329 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2.23458e+08 Mwork 0 (use dense mask) nthreads 40 ntasks 136 coarse: (gus: 0 hash: 0) fine: (gus: 136 hash: 0) 0.0765 sec ]
 [ GrB_Vector_nvals 8.27e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00428 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2.21521e+08 Mwork 0 (use dense mask) nthreads 40 ntasks 135 coarse: (gus: 0 hash: 0) fine: (gus: 135 hash: 0) 0.0805 sec ]
 [ GrB_Vector_nvals 4.61e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00314 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2.539e+08 Mwork 0 (use dense mask) nthreads 40 ntasks 138 coarse: (gus: 0 hash: 0) fine: (gus: 138 hash: 0) 0.0832 sec ]
 [ GrB_Vector_nvals 4.38e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00272 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1.63516e+08 Mwork 0 (use dense mask) nthreads 40 ntasks 130 coarse: (gus: 0 hash: 0) fine: (gus: 130 hash: 0) 0.0679 sec ]
 [ GrB_Vector_nvals 6.14e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00208 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9.42428e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 119 coarse: (gus: 0 hash: 0) fine: (gus: 119 hash: 0) 0.0546 sec ]
 [ GrB_Vector_nvals 6.37e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00117 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6.07487e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 110 coarse: (gus: 0 hash: 0) fine: (gus: 110 hash: 0) 0.049 sec ]
 [ GrB_Vector_nvals 6.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00141 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4.25275e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 104 coarse: (gus: 0 hash: 0) fine: (gus: 104 hash: 0) 0.0465 sec ]
 [ GrB_Vector_nvals 7.66e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000629 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3.38591e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 101 coarse: (gus: 0 hash: 0) fine: (gus: 101 hash: 0) 0.0478 sec ]
 [ GrB_Vector_nvals 5.17e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00053 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2.98034e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 99 coarse: (gus: 0 hash: 0) fine: (gus: 99 hash: 0) 0.0439 sec ]
 [ GrB_Vector_nvals 6.2e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000459 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2.13288e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 94 coarse: (gus: 0 hash: 0) fine: (gus: 94 hash: 0) 0.0428 sec ]
 [ GrB_Vector_nvals 8.28e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000458 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2.35474e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 96 coarse: (gus: 0 hash: 0) fine: (gus: 96 hash: 0) 0.0432 sec ]
 [ GrB_Vector_nvals 8.44e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00043 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1.26667e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 89 coarse: (gus: 0 hash: 0) fine: (gus: 89 hash: 0) 0.0428 sec ]
 [ GrB_Vector_nvals 9.94e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00043 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1.05385e+07 Mwork 0 (use dense mask) nthreads 40 ntasks 88 coarse: (gus: 0 hash: 0) fine: (gus: 88 hash: 0) 0.0431 sec ]
 [ GrB_Vector_nvals 5.26e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000326 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7.1092e+06 Mwork 0 (use dense mask) nthreads 40 ntasks 86 coarse: (gus: 0 hash: 0) fine: (gus: 86 hash: 0) 0.0434 sec ]
 [ GrB_Vector_nvals 6.66e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00135 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5.80537e+06 Mwork 0 (use dense mask) nthreads 40 ntasks 85 coarse: (gus: 0 hash: 0) fine: (gus: 85 hash: 0) 0.0402 sec ]
 [ GrB_Vector_nvals 6.8e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000327 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4.53784e+06 Mwork 0 (use dense mask in place) nthreads 40 ntasks 70 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 70) 0.0258 sec ]
 [ GrB_Vector_nvals 7.2e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000805 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3.98505e+06 Mwork 0 (use dense mask in place) nthreads 40 ntasks 61 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 61) 0.0165 sec ]
 [ GrB_Vector_nvals 6.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00053 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3.11822e+06 Mwork 0 (use dense mask in place) nthreads 40 ntasks 48 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 48) 0.0167 sec ]
 [ GrB_Vector_nvals 7.24e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000579 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3.1769e+06 Mwork 0 (use dense mask in place) nthreads 40 ntasks 49 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 49) 0.0167 sec ]
 [ GrB_Vector_nvals 5.74e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000565 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2.70145e+06 Mwork 0 (use dense mask in place) nthreads 40 ntasks 42 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 42) 0.0147 sec ]
 [ GrB_Vector_nvals 7.65e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000396 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3.20016e+06 Mwork 0 (use dense mask in place) nthreads 40 ntasks 49 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 49) 0.0132 sec ]
 [ GrB_Vector_nvals 5.35e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000463 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4.89638e+06 Mwork 0 (use dense mask in place) nthreads 40 ntasks 75 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 75) 0.024 sec ]
 [ GrB_Vector_nvals 6.96e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000295 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1.54486e+06 Mwork 0 (use dense mask in place) nthreads 23 ntasks 24 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 24) 0.00732 sec ]
 [ GrB_Vector_nvals 5.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.00039 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 736084 Mwork 0 (use dense mask in place) nthreads 11 ntasks 12 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 12) 0.00453 sec ]
 [ GrB_Vector_nvals 3.72e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000363 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 533701 Mwork 0 (use dense mask in place) nthreads 8 ntasks 9 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 9) 0.00396 sec ]
 [ GrB_Vector_nvals 1.99e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000302 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 438504 Mwork 0 (use dense mask in place) nthreads 6 ntasks 7 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 7) 0.00319 sec ]
 [ GrB_Vector_nvals 1.16e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000294 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 458558 Mwork 0 (use dense mask in place) nthreads 6 ntasks 7 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 7) 0.00311 sec ]
 [ GrB_Vector_nvals 1.22e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000292 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 368202 Mwork 0 (use dense mask in place) nthreads 5 ntasks 6 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 6) 0.0031 sec ]
 [ GrB_Vector_nvals 1.58e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 0.000174 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 232532 Mwork 0 (use dense mask in place) nthreads 3 ntasks 4 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 4) 0.00195 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 215152 Mwork 0 (use dense mask in place) nthreads 3 ntasks 4 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 4) 0.00131 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 164945 Mwork 0 (use dense mask in place) nthreads 2 ntasks 3 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 3) 0.00137 sec ]
 [ GrB_Vector_nvals 1.28e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 271828 Mwork 0 (use dense mask in place) nthreads 4 ntasks 5 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 5) 0.00188 sec ]
 [ GrB_Vector_nvals 2.2e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 294199 Mwork 0 (use dense mask in place) nthreads 4 ntasks 5 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 5) 0.00177 sec ]
 [ GrB_Vector_nvals 2.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 44927 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13864 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000146 sec ]
 [ GrB_Vector_nvals 1.22e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.84e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7819 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.92e-05 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.36e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5592 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.91e-05 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2876 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.47e-05 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3850 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.14e-05 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3862 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.26e-05 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.86e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2569 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.17e-05 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.5e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.68e-05 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.21e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 79 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.91e-05 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.05e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.98e-05 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
trial:  0 threads: 40 source:  10219452 time:     1.3177 sec
:40:pushpull (onlytree):        1.318 (sec), rate: 1464.88
phase  0:       0.4937 msec
phase  1:    1248.0303 msec
phase  2:       0.2113 msec
phase  3:       0.1655 msec
phase  4:      52.6248 msec
phase  5:     239.5001 msec
phase  6:     397.6077 msec
phase  7:     557.4783 msec
phase  8:       0.0645 msec
phase  9:     440.9071 msec
phase 10:      40.8283 msec
phase 11:       0.1303 msec
phase 12:      75.5223 msec

threads to test:  40
chunk: 65536
matrix: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-road/GAP-road.grb
 [ GxB_Matrix_import_CSR 1.68e-05 sec ]
 [ GxB_set 3.33e-05 sec ]
sources: /home/faculty/davis/GAP/GAP-road/GAP-road_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 4.95e-05 sec ]
 [ GrB_apply (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_true_bool)) 0.0545 sec ]
 [ GrB_Matrix_nvals 1.63e-06 sec ]
read time: 1.12902
 [ GrB_transpose (transpose) 0.56 sec ]
 [ GrB_Matrix_nvals 8.05e-07 sec ]
 [ GrB_Matrix_nvals 3.45e-08 sec ]
 [ GrB_eWiseMult emult 0.128 sec ]
 [ GrB_Matrix_nvals 6.25e-07 sec ]
 [ GrB_reduce 0.00289 sec ]
A is symmetric
transpose time: 0.691067

==========input graph: nodes: 23947347 edges: 57708624 ntrials: 1
pushpull (with tree only):

------------------------------------------- threads: 40
 [ GrB_Matrix_nvals 2.12e-07 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar calloc 0.0109 sec ]
 [ GrB_vxm (wait: 0 zombies, 1 pending) (hyper to sparse) (M full) C<!M>=A*B, saxpy axbflops 2 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.36e-05 sec ]
 [ GrB_Vector_nvals 3.29e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.08e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.97e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.72e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.06e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.66e-05 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.03e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.51e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.81e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.66e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.71e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.78e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.54e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 33 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.96e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.67e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 47 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.67e-05 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.87e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 70 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.93e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.55e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 78 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.77e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.88e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 88 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.13e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.13e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 94 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.89e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.01e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 106 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.05e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.1e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 104 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.97e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 94 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.87e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.59e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 98 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.14e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.01e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 110 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.86e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.78e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 121 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.06e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.11e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 128 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.05e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.16e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 136 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.1e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.17e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.23e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.06e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 150 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.24e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.19e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.26e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.29e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 213 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.36e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.43e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 235 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.43e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.84e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 245 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.69e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.98e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 259 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.71e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.65e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 292 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.78e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.57e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 293 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.68e-05 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.42e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.47e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.47e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 265 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.59e-05 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.63e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 288 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.62e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.3e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.5e-05 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.96e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 301 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.94e-05 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.53e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 369 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.81e-05 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.76e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 414 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.98e-05 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.65e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 449 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.03e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.96e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 487 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.1e-05 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.07e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 499 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.22e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.87e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 512 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.56e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.08e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 526 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.39e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.21e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 551 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.35e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.17e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 551 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.49e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.19e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 521 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.27e-05 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.75e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 486 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.18e-05 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.19e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 493 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.14e-05 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.14e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 473 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.08e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.03e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 430 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.01e-05 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.63e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 431 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.21e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.05e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 482 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.12e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.28e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 527 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.58e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.39e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 572 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.61e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.23e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 573 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.59e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.09e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 612 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.61e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.54e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 670 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.89e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.46e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 720 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.14e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.37e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 720 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.99e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.94e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 755 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.98e-05 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.76e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.43e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.62e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 789 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.42e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.63e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 819 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.21e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.84e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 833 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.46e-05 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.73e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 786 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.93e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.26e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 776 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.29e-05 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.72e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 736 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.89e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.64e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 752 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.23e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.79e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 767 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.96e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.72e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 729 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.92e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.81e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 718 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.9e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.53e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 689 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.7e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.85e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 709 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.65e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.64e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 680 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.85e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.49e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 649 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.71e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.72e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 665 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.64e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.51e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 670 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.69e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.32e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 645 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.74e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.38e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 687 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.15e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.64e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 677 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.77e-05 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.73e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 717 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.18e-05 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.87e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 780 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.42e-05 sec ]
 [ GrB_Vector_nvals 4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.32e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 764 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.41e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.95e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 770 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.15e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.04e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 754 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.99e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.87e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 687 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.39e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.8e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 655 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.33e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.72e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 655 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.1e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.18e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 671 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.21e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.82e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 729 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.13e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.74e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 742 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.41e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.94e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 804 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.55e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.17e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 860 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.68e-05 sec ]
 [ GrB_Vector_nvals 3.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.31e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 895 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.07e-05 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.6e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 929 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.7e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.3e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 910 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.62e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.54e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 923 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.94e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.86e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.88e-05 sec ]
 [ GrB_Vector_nvals 3.35e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.15e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 845 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.7e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.13e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 828 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.64e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.21e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 850 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.59e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.21e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 917 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.94e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.32e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 894 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.75e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.32e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 889 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.81e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.21e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.77e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.39e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 930 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.05e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.79e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 913 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.57e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.11e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 877 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.79e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.23e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 838 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.64e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.17e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 837 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.63e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.32e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 863 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.7e-05 sec ]
 [ GrB_Vector_nvals 3.35e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.77e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 843 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.49e-05 sec ]
 [ GrB_Vector_nvals 4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.1e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 807 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.59e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.96e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 800 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.64e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.05e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 832 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.56e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.02e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 823 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.67e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.07e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 823 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.62e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.85e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 812 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.36e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.31e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 842 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.57e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.24e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 848 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.35e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.11e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 857 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.6e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.67e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 847 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.69e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.94e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 879 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.7e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.27e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 897 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.8e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.52e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 925 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.82e-05 sec ]
 [ GrB_Vector_nvals 3.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.24e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 877 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.44e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.22e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 868 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.78e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.12e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 831 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.42e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 866 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.72e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.13e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 898 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.57e-05 sec ]
 [ GrB_Vector_nvals 3.35e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.29e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 853 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.4e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.19e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 784 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.14e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.17e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 753 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.03e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.93e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 721 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.02e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.79e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 701 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.95e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.73e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 703 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.18e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.91e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 728 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.27e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.1e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 710 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.26e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.18e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 662 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.82e-05 sec ]
 [ GrB_Vector_nvals 3.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.49e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 669 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.75e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.93e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 679 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.12e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.86e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 663 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.42e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.92e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 646 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.85e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.62e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 642 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.89e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.69e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 666 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.47e-05 sec ]
 [ GrB_Vector_nvals 3.35e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.19e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 666 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.91e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.98e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 639 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.15e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.09e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 640 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.35e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.79e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 667 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.34e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.08e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 637 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.3e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.87e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 592 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.94e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.71e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 560 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.75e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.88e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 597 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.13e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.51e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 590 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.08e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.9e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 633 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.39e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.68e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 689 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.21e-05 sec ]
 [ GrB_Vector_nvals 3.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.94e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 740 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.59e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.17e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 783 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.65e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.15e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 760 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.66e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.67e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 741 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.4e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.88e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 765 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.48e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.04e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 831 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.8e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.23e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 834 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.67e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.8e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 854 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.8e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.1e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 885 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.86e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.04e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 900 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.66e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.29e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 924 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.01e-05 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.33e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.11e-05 sec ]
 [ GrB_Vector_nvals 3.35e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.55e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 956 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.27e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.34e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1002 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.14e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.52e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 996 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.31e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.55e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1006 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.22e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.41e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.09e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.82e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1087 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.02e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.58e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1146 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.96e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1248 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.05e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1317 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.48e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1370 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.68e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1376 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.52e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1340 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.59e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1261 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.98e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.94e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1255 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.97e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.89e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1281 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.1e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.78e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1288 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.12e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.99e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1230 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.17e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.9e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1163 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.05e-05 sec ]
 [ GrB_Vector_nvals 3.35e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.93e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1138 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.05e-05 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1126 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.01e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.65e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1098 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.36e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1136 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.16e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.89e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1157 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.11e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.99e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1190 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.32e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.8e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1219 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.4e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1285 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.79e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1290 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.57e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1294 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.81e-05 sec ]
 [ GrB_Vector_nvals 4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.6e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1363 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.66e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1387 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.91e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1350 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.75e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1348 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.96e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.86e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1436 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.83e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1380 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.65e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1358 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.63e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1384 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.65e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1397 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.73e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1418 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.88e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1372 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.55e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1367 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.91e-05 sec ]
 [ GrB_Vector_nvals 3.91e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.78e-05 sec ]
 [ GrB_Vector_nvals 4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1453 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.11e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1487 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.97e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1497 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.05e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1578 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.33e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1646 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.42e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1608 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.35e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1603 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.29e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1634 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.37e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1657 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.34e-05 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1658 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.66e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1645 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.59e-05 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1663 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.6e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1720 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.63e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1718 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.53e-05 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1790 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.2e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1831 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.12e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1711 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.73e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1672 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.57e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1627 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.57e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1623 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.58e-05 sec ]
 [ GrB_Vector_nvals 3.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1698 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.81e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1826 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.32e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1862 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.11e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1794 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.02e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1790 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.84e-05 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1760 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.06e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1783 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.13e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1831 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.16e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1795 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.04e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1852 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.21e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1952 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.24e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1936 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.39e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1925 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.39e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.48e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2001 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.63e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1931 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.32e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1935 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.72e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2034 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.86e-05 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2099 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00011 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2116 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000109 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000112 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2019 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.94e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1960 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.54e-05 sec ]
 [ GrB_Vector_nvals 3.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2015 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.74e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2136 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000111 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2219 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000115 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2346 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000116 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2337 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000116 sec ]
 [ GrB_Vector_nvals 3.91e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2337 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000116 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2417 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000119 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2474 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000116 sec ]
 [ GrB_Vector_nvals 4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2359 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000114 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2321 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000114 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2357 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000117 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2406 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000115 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2387 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000113 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2338 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000121 sec ]
 [ GrB_Vector_nvals 3.91e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2417 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000119 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2527 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00012 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2489 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000118 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000116 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2365 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000115 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2314 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000116 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2322 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000115 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2359 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000116 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2448 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000118 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000122 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2536 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000122 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2512 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000123 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2505 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00012 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000121 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2527 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000122 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2429 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000126 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2335 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000117 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2234 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000113 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2245 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000114 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000115 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2270 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000115 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2359 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000119 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2430 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000122 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2395 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000121 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2385 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000122 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2398 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00012 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2364 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000118 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2288 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000117 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2255 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000116 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2195 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000115 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2151 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000114 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2216 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000113 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2206 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000114 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2234 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000117 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000117 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2466 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000121 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2491 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00012 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2454 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000122 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2464 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000122 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2551 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000123 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2607 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000124 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2654 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000131 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2589 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000125 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2616 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000124 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2571 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000125 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2541 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000123 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2437 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000123 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2456 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000122 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2541 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000125 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2675 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00013 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2826 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00013 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000132 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2833 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000131 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2847 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000131 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2849 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000134 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3054 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2994 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2929 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000133 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000136 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3007 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3015 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3027 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3102 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3047 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3050 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000143 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3116 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3047 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3041 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2984 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2892 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000134 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2957 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3077 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3174 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000142 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3173 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3100 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3147 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000142 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3130 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3075 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3093 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000141 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3108 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3049 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3045 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3055 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3031 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3001 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2946 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000134 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2944 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000141 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000132 sec ]
 [ GrB_Vector_nvals 4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2909 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000134 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00013 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000128 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2789 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000132 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000128 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2821 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000133 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2719 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000129 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2682 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000129 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2796 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000131 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2960 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000136 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2955 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000141 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3128 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000142 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3211 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000145 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3180 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000144 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3044 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000144 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2931 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2844 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000133 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2896 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2832 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000133 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2714 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00013 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2741 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2759 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000134 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2801 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2862 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2904 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000136 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2902 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3049 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000144 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3131 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000146 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3194 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000147 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3180 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000149 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3273 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000151 sec ]
 [ GrB_Vector_nvals 4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3381 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000151 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3393 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000157 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000158 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3480 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000158 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3433 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000156 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3531 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00016 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3625 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000164 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3832 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000171 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3947 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00017 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3985 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000173 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4081 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00018 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4168 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000199 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4256 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000194 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000191 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4195 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000193 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4210 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000194 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4217 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000196 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4298 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000199 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4280 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000198 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4280 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000196 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4337 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000199 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4436 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000203 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4465 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000206 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4559 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4614 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4677 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4755 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000224 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4938 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000224 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4963 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000222 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5077 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000229 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5208 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5338 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000233 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5277 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000231 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5323 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000234 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5499 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5516 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000233 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5505 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5596 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5430 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000234 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5284 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000229 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5211 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5249 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000234 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5139 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000225 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4963 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000223 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4882 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000219 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4841 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00022 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4819 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000218 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4798 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4748 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4655 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4654 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4725 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000211 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4720 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4657 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000211 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4626 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4555 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4414 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4481 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4392 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000201 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4442 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4634 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4565 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000215 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4657 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4642 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000204 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4374 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000208 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4455 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000211 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4443 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000208 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4562 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4547 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000205 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4502 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4556 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4578 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4530 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4447 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4513 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4592 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000211 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4635 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000222 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4848 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000217 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4870 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000224 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4892 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000221 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4763 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4622 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4549 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000211 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4669 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000214 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4719 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000217 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4673 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000211 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4632 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000206 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4463 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000205 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4440 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000204 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4511 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4598 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4736 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4743 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4719 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000215 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4743 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4696 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4677 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4668 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000211 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4697 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000214 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4638 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00022 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4643 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4630 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4531 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4527 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4552 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4535 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4481 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4346 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4395 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4468 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4535 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000214 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4703 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4743 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000219 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4624 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4505 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4550 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4601 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4582 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000208 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4623 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4623 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000217 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000208 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4342 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4532 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4597 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000214 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4736 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000218 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4653 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4684 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4619 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000211 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4663 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00022 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4725 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000222 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4896 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000226 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5062 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000233 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5163 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000231 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5351 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5334 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5346 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5462 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5643 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000247 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5676 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5805 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5814 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6143 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6118 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6140 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6122 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5928 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5688 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5704 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5615 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5640 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5528 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5373 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5320 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5363 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5351 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5526 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5556 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5613 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5783 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5737 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5817 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5875 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6020 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6034 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5968 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6075 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5982 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5856 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5704 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5652 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5616 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5789 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5823 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5853 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5851 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5711 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5620 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5545 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5563 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5560 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5594 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5564 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5544 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5657 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5460 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5490 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5510 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5507 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5371 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5457 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5514 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5698 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5693 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5700 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5685 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000247 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5497 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5448 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5591 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000247 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5636 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5544 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5342 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000234 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5170 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5125 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000231 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5168 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000231 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5235 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000234 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5200 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5108 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5051 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5136 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5131 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5129 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5056 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5176 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5309 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5748 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5785 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5762 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5952 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6063 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6213 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000278 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6203 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000276 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6000 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6016 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5993 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000271 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5897 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6111 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6521 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000282 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6654 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00029 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7052 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7113 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7138 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7204 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7184 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7106 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7030 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7185 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7235 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7259 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7373 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7354 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7264 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7266 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7373 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7316 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7291 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7054 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6910 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7258 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7095 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7014 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7043 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6999 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7183 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7199 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7157 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7257 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7233 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7328 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7256 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7291 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7437 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7406 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7172 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7243 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7164 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7281 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7372 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7471 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7613 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7552 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7534 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7523 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7785 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7878 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7780 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7852 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8017 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8182 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7966 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8033 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000391 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8303 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8327 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000379 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8395 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00038 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8497 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000384 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8360 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000387 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8280 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000385 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8343 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000383 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000375 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8195 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8137 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8052 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8087 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8228 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000381 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8072 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7879 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7805 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7790 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7720 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7879 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7991 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8015 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8065 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8077 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8169 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8152 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8112 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8013 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7945 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7870 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7838 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7737 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7651 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7652 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7550 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7558 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7478 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7556 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7630 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7597 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7649 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7568 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7094 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7011 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7040 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7111 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7312 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7324 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7225 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6919 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6836 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6833 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6698 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000289 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6498 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6571 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000291 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6612 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000291 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6675 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6732 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6863 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000294 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6936 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6740 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000292 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6676 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6740 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000299 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6653 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00029 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6662 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00029 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6657 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000292 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6655 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6662 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6623 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000294 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6554 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000288 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6381 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000285 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6336 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000285 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6322 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6133 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000279 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5933 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5903 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5891 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6016 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6036 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000274 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6033 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6030 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6113 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6416 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00029 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6498 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000294 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6511 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6731 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000299 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6670 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6631 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6834 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7027 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6982 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6977 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7134 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7317 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7243 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7193 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7127 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7033 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7144 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7227 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7169 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7263 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7284 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7232 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7259 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6936 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6891 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6947 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6840 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6696 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6550 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6483 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000294 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6620 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6568 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6503 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000294 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6478 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6520 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6586 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6689 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000299 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6696 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6678 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6597 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000299 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6701 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6814 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6796 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6880 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6870 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6787 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6831 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6966 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7015 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7145 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7233 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7178 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7174 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7157 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7171 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7181 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7298 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7541 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7609 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7472 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7568 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7752 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7940 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7931 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7631 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7188 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7242 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7329 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7395 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7351 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7277 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7257 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7206 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7117 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7072 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7183 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7233 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7079 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6952 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6872 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6845 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6793 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6958 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6962 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7045 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7380 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7501 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7478 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7493 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000331 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7395 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000331 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7358 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7462 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7587 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7400 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7451 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7665 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7880 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7905 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7793 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7811 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7766 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7680 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7528 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7426 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7457 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7561 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7677 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7838 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8018 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8072 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000359 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7798 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7369 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7285 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7302 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000331 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7255 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7268 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7330 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7358 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7357 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7432 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7371 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7403 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7469 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7515 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7530 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7502 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7518 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7523 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7817 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7944 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7879 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8006 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00039 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8115 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7976 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7937 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7961 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8057 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8112 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000355 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8156 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8123 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7933 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7901 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7858 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7815 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7860 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8023 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8023 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8071 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7990 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8034 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8035 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8097 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8095 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8170 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8124 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8024 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7924 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7941 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7874 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7912 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8007 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7868 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7754 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7655 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7703 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7773 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7782 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7794 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7755 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7973 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8135 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8111 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8065 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000379 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8053 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7939 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7729 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7826 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000376 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8019 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8094 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000383 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000418 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8269 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8395 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8436 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8462 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8390 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8383 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8503 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8526 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8625 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000451 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8709 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8910 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000448 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9071 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000457 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9312 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9418 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9678 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00047 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10061 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000485 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10473 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000502 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10732 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000509 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10953 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000511 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11174 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000512 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11247 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000516 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11167 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000514 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000522 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11216 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000526 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11139 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00052 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11246 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000519 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11451 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000527 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11522 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000522 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11636 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000527 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11683 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000536 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11787 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000541 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11956 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000549 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12159 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00055 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12270 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000554 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12499 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00056 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000557 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12455 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000564 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12415 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000553 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12465 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000551 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12296 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000545 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12285 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000549 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12195 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000548 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12112 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000547 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11985 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000556 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12000 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000544 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11930 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000529 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11857 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00054 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12096 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000544 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12401 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000553 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12653 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000567 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12986 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000571 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13230 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000584 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13258 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000582 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13258 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000585 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13293 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000588 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13580 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00059 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13351 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000584 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13569 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00058 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13623 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000581 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13479 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00057 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13184 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000567 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12829 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000547 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12482 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000539 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12123 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000538 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12157 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000534 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12044 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000534 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12206 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00053 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12209 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000527 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000529 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000528 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11811 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000522 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11735 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000525 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11787 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000524 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11825 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000523 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11758 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000527 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11581 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000519 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000505 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11272 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000495 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11174 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000502 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11009 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000493 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11065 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000486 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10984 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000489 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10992 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000488 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10809 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000481 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10632 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000482 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10715 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000482 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10750 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000484 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10764 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000485 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10667 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000488 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10778 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000491 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10637 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000486 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10356 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000466 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10264 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000466 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10182 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000465 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10076 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000462 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10032 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000455 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9882 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000458 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10029 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000454 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10251 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9958 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000449 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9712 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000448 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9614 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9674 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9445 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00044 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9012 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8691 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000418 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8670 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8646 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8488 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8510 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000406 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8323 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8298 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000399 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8282 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8299 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000397 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8173 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8205 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000402 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000394 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8236 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000401 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8234 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000393 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8178 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8087 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8017 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7981 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7678 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7544 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7358 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7359 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7330 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7326 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7372 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7301 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7302 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7216 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7093 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7059 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7123 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7056 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7091 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7001 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7074 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7013 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7225 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7501 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7469 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7233 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7199 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7083 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6998 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6907 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6808 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6861 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6870 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6975 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6966 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000331 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7011 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6775 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6692 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6713 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6626 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6479 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000292 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5973 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000291 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6007 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5936 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6049 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6351 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6417 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6264 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6386 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6454 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6693 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6899 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6877 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6736 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6845 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7037 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7051 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7102 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7017 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7102 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7081 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7227 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7432 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7545 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7696 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7640 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7562 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7650 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7757 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7734 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7584 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7440 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7412 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7398 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7303 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7325 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7338 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7669 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7675 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7653 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7679 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7654 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000355 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7680 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000359 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7616 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7432 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7524 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7511 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7533 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7620 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7659 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7670 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7608 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000359 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7701 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7779 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7809 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7700 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000355 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7658 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7787 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7836 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7808 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7626 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7534 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7610 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7436 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7268 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7296 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7423 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7348 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7339 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7170 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7303 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7303 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7259 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7327 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7344 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7468 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7415 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7303 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7069 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6761 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6762 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6846 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7108 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7154 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7097 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7143 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7251 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7450 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7503 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7413 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7368 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7419 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7565 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7813 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7730 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7534 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7383 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7361 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7465 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7336 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7441 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7452 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7390 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7251 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7242 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7203 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7190 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7253 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7233 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7168 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6984 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6980 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6938 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6939 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6877 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6841 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6888 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7088 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7017 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6855 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6866 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6791 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6756 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6677 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6634 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6639 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6649 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6587 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6497 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6456 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6521 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6614 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6614 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6698 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6824 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6788 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6856 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 3.91e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6901 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6731 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6711 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6653 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6545 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6629 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6771 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6898 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6886 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7012 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6843 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6884 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6852 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6883 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6717 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6565 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6705 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6783 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6766 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6561 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6485 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6483 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6469 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6423 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6390 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6255 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6163 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6114 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6091 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000294 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6103 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6084 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000299 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6053 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6203 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6296 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6253 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6246 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6441 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6554 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6640 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6899 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6991 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6994 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7155 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000342 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7329 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7551 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7586 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 1.29e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7676 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8072 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000377 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8114 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000377 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8300 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8460 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8409 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8287 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000418 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7955 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7928 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000372 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7979 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000372 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8049 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000384 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8188 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000392 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8340 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8443 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8487 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8477 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8459 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8594 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8503 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8557 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8737 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000435 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8811 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00044 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8851 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00044 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8855 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00044 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8952 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000442 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9112 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000449 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000451 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9037 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000444 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8862 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8835 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000442 sec ]
 [ GrB_Vector_nvals 1.18e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8670 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8715 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8743 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8672 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000432 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8646 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8355 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8336 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8415 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8503 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8629 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8534 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8617 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8801 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000436 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8911 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8922 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000445 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8706 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8676 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000435 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8901 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9043 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000442 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9050 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8733 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8396 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8189 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8094 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7991 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7937 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000383 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7939 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7780 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7611 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7575 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7533 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000342 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7158 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7058 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6973 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7012 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7106 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7182 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6787 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6798 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7058 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7273 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7474 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7425 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7580 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7643 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7645 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7623 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7578 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7360 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7360 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7449 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7418 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000355 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7379 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7543 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7628 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7766 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000355 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7784 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7863 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7846 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7891 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7714 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7456 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7462 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7406 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7398 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7368 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7333 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7352 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7467 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7565 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000355 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7617 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7421 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7287 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7115 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7039 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6937 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6923 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6979 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7099 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7222 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7247 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7218 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7147 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7089 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7208 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7384 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7387 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7308 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7265 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7357 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7302 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7464 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7671 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7793 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7799 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7730 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7690 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000359 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7637 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7685 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000368 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7700 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7726 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7813 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7940 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8361 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8317 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8258 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8327 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8341 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8361 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000418 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8246 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000418 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8176 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000375 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8101 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000381 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8199 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8271 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000408 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8068 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000376 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7961 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000377 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7745 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00038 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7717 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7792 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7877 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000375 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7913 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7878 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000376 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7679 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7657 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7496 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7454 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7442 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7487 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7586 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7634 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000372 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7780 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000375 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7774 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7724 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7844 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000377 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7709 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7749 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7917 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8007 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000386 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8114 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00039 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8286 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8518 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8572 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8693 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8974 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000443 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9188 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000442 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9132 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8969 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000436 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8943 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000435 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8917 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8957 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9044 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000448 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9097 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000435 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8912 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000432 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8852 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8659 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8343 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000416 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8194 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8177 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0004 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8225 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8315 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000416 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8551 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8442 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8498 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8482 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8418 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000418 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8363 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8504 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8421 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8249 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8419 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8556 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8410 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8331 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8308 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8133 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000377 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000379 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8150 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000381 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8091 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8185 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000383 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8117 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000376 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7941 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000383 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7986 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000377 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7946 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7684 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7741 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000381 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7848 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7939 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8132 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000389 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8317 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8173 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000383 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8284 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8455 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8373 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8306 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8480 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8445 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8708 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8706 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8843 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000438 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8966 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8924 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000432 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8838 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8581 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8691 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8606 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8687 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8778 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8784 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8871 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8951 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000441 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8973 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000441 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9071 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000451 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9213 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000449 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9351 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000457 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9523 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9602 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000455 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9486 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9311 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9084 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9080 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000442 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9017 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8995 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8856 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8738 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8677 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8483 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8217 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000403 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8016 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7907 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000379 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7885 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7903 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000372 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8024 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000375 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8130 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8230 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8350 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000407 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8605 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8593 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8446 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8245 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000408 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8173 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8211 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8390 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8474 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8389 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8412 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8397 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8386 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000411 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8560 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8507 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8403 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8365 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8325 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8410 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8467 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8442 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8366 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8388 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8585 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8496 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8691 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8903 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000435 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8980 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8851 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8922 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000438 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8940 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000436 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8986 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8907 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000435 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8944 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00044 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9017 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000449 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9123 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000445 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000444 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9110 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000441 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9094 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000438 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8945 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000441 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8880 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8701 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8636 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8698 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000418 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8655 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8654 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8460 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8417 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000416 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8508 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8613 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000418 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8501 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8461 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8370 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000411 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8261 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8233 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000405 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8276 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8248 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8136 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000382 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8262 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8183 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000387 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8159 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000381 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8230 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8514 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8490 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8474 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8548 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8685 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8697 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8653 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8620 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8562 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8663 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8734 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8612 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8662 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000441 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8709 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000443 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8716 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000443 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8715 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000438 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8791 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000438 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8928 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000444 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8918 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00045 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8824 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000446 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8896 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000449 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9102 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000452 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9078 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000449 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9097 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000449 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9214 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000455 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9285 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000459 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9191 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9371 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000462 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9488 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9459 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000465 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9297 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000455 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9399 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000453 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9272 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000462 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9143 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00045 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9367 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9385 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9358 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000459 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9278 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00045 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9026 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00045 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8757 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8815 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000432 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8848 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8805 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8939 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000446 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9037 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000444 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9199 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000455 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9448 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9346 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000454 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9305 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000451 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9177 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000446 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9058 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00044 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9015 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000448 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8910 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8951 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8772 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8770 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8776 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8750 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8796 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8858 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8753 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8764 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000432 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8805 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8882 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00044 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8902 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000442 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8949 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000441 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8929 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000446 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9077 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000459 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9250 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00046 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9469 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9478 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9546 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000472 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9459 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9267 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9255 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9415 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000476 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9314 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000466 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9350 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000459 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9314 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9254 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8989 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000462 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9046 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000452 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9197 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9295 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000466 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9316 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9386 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9605 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000466 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9605 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000472 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9499 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000468 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9391 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000466 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9184 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000466 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9215 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000472 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9265 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000466 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9176 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000468 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9186 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000472 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9197 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000468 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9155 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000465 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9122 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00046 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9281 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9410 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000475 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9510 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000483 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9668 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000477 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9465 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00048 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9486 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00048 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9541 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000481 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9495 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000472 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9484 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000472 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9484 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000479 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000471 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9505 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000479 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9533 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00047 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9497 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9664 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000482 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9553 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000471 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9394 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9355 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000469 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00046 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9079 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8981 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9116 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000462 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9350 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00047 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9518 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000474 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9688 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00049 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9903 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000491 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9945 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000492 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9907 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000496 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9957 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000491 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9899 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00049 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000481 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9721 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000478 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9844 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000484 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9931 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000485 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9856 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000492 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9829 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000488 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9919 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000495 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000505 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10082 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000501 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10152 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000506 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10099 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000493 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10067 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000502 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10079 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000496 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9923 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00048 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9759 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000481 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000476 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9403 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000472 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9254 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000472 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9388 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000474 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9615 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000475 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9674 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000471 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9711 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000476 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000478 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000475 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9059 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000455 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8961 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00046 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9115 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000459 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9031 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9156 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9371 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000475 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9555 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000481 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9407 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00048 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9386 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000479 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9234 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9049 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9206 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00047 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9167 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00046 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9225 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9398 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000474 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9435 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000469 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9569 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000469 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9597 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000472 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9490 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000466 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9598 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000465 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9762 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000472 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9728 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000474 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9878 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000486 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9943 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000477 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9801 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9770 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00047 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9779 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000465 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9766 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9742 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9738 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000468 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9803 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000474 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9859 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000475 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000477 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9686 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9601 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000465 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9649 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000474 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9609 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000469 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9699 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000465 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9592 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000469 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9472 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9306 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000452 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9264 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000465 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9284 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000458 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9133 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000451 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8995 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00046 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9091 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000458 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9171 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9243 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9201 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9172 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9057 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00046 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9067 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9252 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000469 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9459 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000474 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9481 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000479 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9458 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000472 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9418 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000471 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9269 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00047 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9271 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000465 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9280 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00047 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9358 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000471 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9286 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000455 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000454 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9000 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000453 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8892 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000444 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8735 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8615 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8416 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8420 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8317 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8447 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8375 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8316 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8248 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8041 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000381 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8087 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7938 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7946 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7920 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7850 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000375 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7705 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7720 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7750 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7729 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7616 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7578 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7641 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000359 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7901 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7816 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000386 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7765 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7842 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7914 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8142 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000381 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8418 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8516 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000418 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8160 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8005 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000377 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8012 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7922 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7881 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7858 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7929 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7826 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7689 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000368 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7758 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7772 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7788 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7823 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7819 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7772 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000372 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7710 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7736 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7793 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000368 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7900 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7902 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00038 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000379 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8075 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8070 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000377 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7986 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00038 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7888 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00038 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7877 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7856 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7881 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7804 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7798 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000372 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7905 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8033 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000376 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8182 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000382 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8194 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8230 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8363 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8516 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8585 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8551 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8401 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8426 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8401 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8369 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8316 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8410 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8583 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8597 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8552 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8606 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8592 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8699 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8721 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8702 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8683 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8640 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000432 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8615 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8595 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8656 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8463 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8375 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8449 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8528 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00044 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8735 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000445 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8872 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000443 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9079 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000451 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000453 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000441 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8892 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000448 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9044 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000449 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9124 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000455 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9169 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00045 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9142 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8986 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8960 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000445 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8974 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000449 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000451 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8927 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000444 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8970 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000451 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9129 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000462 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9177 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000455 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9314 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000457 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9271 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000459 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9098 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8906 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000454 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8809 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000442 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8894 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00045 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000436 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8728 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000432 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8644 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8702 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000436 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8770 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8822 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000441 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8814 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00044 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8837 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000443 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00044 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8609 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8631 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000438 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8772 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8684 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000442 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8472 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8323 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000433 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8189 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000391 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8137 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000388 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8009 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000391 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7929 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000381 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7739 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000375 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7727 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000382 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7805 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000385 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7953 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00039 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8118 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0004 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8142 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000395 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8198 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00044 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8298 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8449 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8583 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8467 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000443 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8697 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000451 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8780 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000446 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8879 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000451 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8896 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000451 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8840 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000453 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8693 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000448 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8684 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8840 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000462 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9000 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000466 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9091 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000462 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9151 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000465 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9071 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000459 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000457 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8945 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9110 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9334 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00048 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9429 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000482 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9373 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000474 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000475 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000483 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9447 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000475 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9122 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000462 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000469 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8904 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000458 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8956 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000469 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9056 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000468 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9004 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000473 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8884 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8998 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000463 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9035 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9000 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000473 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9124 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9131 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00047 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9155 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000476 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9387 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000479 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9560 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000487 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000487 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9471 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000489 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9471 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000487 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9495 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000481 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000483 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9378 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00048 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9483 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000486 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9402 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000482 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9437 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000486 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9801 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000501 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10094 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000512 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10100 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000507 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9957 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0005 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9921 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000493 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000494 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9738 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000485 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9762 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000499 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9914 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000495 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10067 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000498 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10047 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000496 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9899 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0005 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000493 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9977 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000504 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10217 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000523 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00051 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10263 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000503 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9994 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000493 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9910 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00049 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9776 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000501 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9812 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000494 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9769 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000503 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000497 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9641 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000496 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9573 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000483 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9497 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000486 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9599 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000486 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9564 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000492 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9724 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000488 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9600 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000494 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9610 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000492 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000485 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9587 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000492 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9631 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000486 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9824 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000497 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9854 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000503 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9987 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000509 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10016 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000507 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9921 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000498 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9628 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00048 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9571 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00049 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9593 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000487 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9634 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000497 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000507 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9881 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000505 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9825 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000505 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9876 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000511 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10160 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000519 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10296 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000528 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10496 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000537 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10670 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000549 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10624 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00053 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10495 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000521 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000529 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10334 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000522 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000526 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10111 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000516 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10304 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000538 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10322 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000529 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10469 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000531 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10391 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000531 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10331 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000526 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10174 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000523 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10187 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000528 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10057 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000524 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9913 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00052 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9976 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000516 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10219 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000529 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10409 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000534 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10412 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000534 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10397 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000526 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10418 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000535 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10432 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000526 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10324 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000517 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10357 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000521 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10161 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00052 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10142 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000512 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9963 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000505 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9906 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000507 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9849 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000502 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9883 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000499 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10084 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000519 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10262 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000515 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10519 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000524 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10577 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000523 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10488 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000525 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10428 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00052 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10322 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000518 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10191 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000517 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10137 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000519 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10316 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000523 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10427 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00053 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000529 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10443 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000527 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000524 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10390 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000517 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10273 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00051 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10303 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00052 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10360 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000529 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10522 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000528 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10941 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000538 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11139 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000544 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11134 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000541 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11048 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000542 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000538 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000541 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00054 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10629 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00053 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10451 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000521 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10517 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000526 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10599 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000533 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10665 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000537 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10685 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000542 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10692 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000538 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10370 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000524 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10174 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000512 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000514 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9901 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000509 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9992 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000512 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10062 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00052 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10101 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000508 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9758 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000489 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9740 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000497 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9927 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000504 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9933 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000507 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10019 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000513 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10146 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000516 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10110 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00051 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10052 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000502 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10019 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000509 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10125 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000503 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10298 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000517 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10583 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000525 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10419 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000525 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000519 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10301 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000515 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10192 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000511 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10075 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000504 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9942 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000501 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9987 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00051 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9988 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000517 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9911 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000505 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9847 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000499 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10014 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000513 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10122 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000521 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10149 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000517 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10162 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000521 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10251 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000534 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10512 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000536 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10715 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000534 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10705 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000534 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00053 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10590 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000531 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10693 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000542 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10752 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000553 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10962 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000557 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11110 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00056 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11244 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000563 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11094 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000559 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11214 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000563 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11414 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000573 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11426 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000571 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11325 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000569 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11389 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000578 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11455 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000574 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11446 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000577 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11565 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000582 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11515 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000575 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11469 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000571 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11675 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000584 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11713 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000589 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00058 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11628 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000577 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11637 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000587 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11670 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000582 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11714 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000579 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11742 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000579 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11679 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000586 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11711 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000576 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11712 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000594 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11796 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000591 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11703 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000582 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11644 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000576 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11653 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000579 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11778 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000592 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11897 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000605 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11912 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000595 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11993 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000596 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11886 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000601 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11937 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000609 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12068 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000607 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12102 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000607 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12106 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000603 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12055 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000594 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12037 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000598 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000602 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12191 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000615 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12182 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000616 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12219 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000604 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12307 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000613 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12426 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12479 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000614 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12404 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000611 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12466 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000626 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12580 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12859 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000627 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000638 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12927 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000644 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13083 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000644 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13026 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000652 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13036 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000639 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12979 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000631 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12880 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00064 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12684 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12790 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000637 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13033 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000652 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13149 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000654 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13144 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000644 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12812 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000632 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12585 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000631 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12565 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000637 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12366 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000623 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12359 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000618 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12458 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00062 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12574 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000623 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12679 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00064 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12892 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000645 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13009 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000654 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000644 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000648 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13112 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000648 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12962 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000639 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12904 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000646 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12951 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000642 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000642 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12999 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000633 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12934 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000636 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12975 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000643 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12832 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000638 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12738 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000629 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12656 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000643 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12985 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000643 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13002 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000658 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000655 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13194 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000649 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13160 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000656 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13295 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000656 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13332 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00066 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13300 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000665 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13359 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00066 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13284 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000663 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13316 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000655 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13280 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000651 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12882 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000653 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12788 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000633 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12649 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000626 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000624 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12416 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000624 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12449 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000629 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12373 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000623 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12388 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000618 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12635 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000626 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12808 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000632 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12654 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000625 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12609 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12525 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000626 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12402 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000619 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12414 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000624 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12473 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000622 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12510 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00063 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12624 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00063 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12698 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000636 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12837 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000625 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12723 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000638 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12613 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000643 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12652 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000636 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12440 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000629 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12277 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000621 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12070 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000626 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000614 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12169 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00062 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12297 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00063 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12470 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000643 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12625 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000633 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000645 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12806 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000632 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12682 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000631 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12809 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000652 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12992 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000654 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13035 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000639 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12826 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000632 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12466 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000621 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12555 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000634 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12578 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000633 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12413 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000643 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12442 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000626 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12588 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12523 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000635 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12687 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000641 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000644 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000641 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000632 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12561 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000634 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12310 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000619 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12053 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000621 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12097 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12243 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000627 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12512 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000627 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12605 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000636 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12680 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12328 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000623 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12252 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000631 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12336 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12342 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000624 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12468 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00063 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12793 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000645 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13138 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00066 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13390 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000667 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13268 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000657 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13151 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000659 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13153 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000667 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13281 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000656 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13161 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000667 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000657 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13168 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000656 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13074 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000668 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12975 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000666 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13055 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000674 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13099 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000662 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13213 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000656 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13393 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000672 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13761 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000683 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13817 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000692 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13691 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000691 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13676 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000679 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13643 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000682 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13485 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000682 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13439 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000672 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13568 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000684 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13580 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000679 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13775 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000671 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13484 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000675 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13312 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000672 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000672 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13091 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000661 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13127 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000667 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13231 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000674 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000668 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13329 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000678 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000682 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13171 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000673 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13322 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00068 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13290 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000682 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13146 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000675 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13230 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000674 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000683 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00068 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13243 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00067 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13167 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000667 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13037 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000658 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12843 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000651 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12678 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000643 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12467 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000642 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12334 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12453 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000644 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12737 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000647 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12843 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000648 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12967 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000658 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13126 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000666 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13395 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000672 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13603 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000681 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13634 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0007 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14014 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000696 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000703 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000703 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14470 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000709 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000722 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14793 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00072 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14924 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000727 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15027 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000743 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15237 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000744 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000748 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15330 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000755 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15460 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000757 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15610 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000766 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15765 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000779 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15842 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000777 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15779 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000766 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15854 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000767 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15936 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000779 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000777 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16124 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000791 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000769 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16132 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000772 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15874 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000757 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15678 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000757 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15485 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000756 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15345 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000751 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15294 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000759 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15485 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000755 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15399 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000748 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15329 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000759 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15456 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000751 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15558 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00077 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16123 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000783 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16530 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000911 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16948 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000837 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17320 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000866 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17738 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000875 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17755 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000881 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17706 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17590 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00086 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17159 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000849 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16794 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000837 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16524 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000828 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16459 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000837 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16939 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000861 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17224 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000862 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17330 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000878 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17529 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000867 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17662 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000873 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17819 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000876 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17967 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000886 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18064 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000881 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17949 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000876 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17799 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000859 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17677 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000871 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17504 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000859 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17282 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000853 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17080 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00085 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17036 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000856 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17194 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000872 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17150 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00085 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17018 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000854 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000849 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17012 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00085 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17075 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000842 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17013 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000828 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16582 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000823 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16320 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00075 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16064 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000764 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16048 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000769 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15934 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000757 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15547 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000739 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15297 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000749 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15263 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000734 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15172 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000732 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14928 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000712 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14714 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000712 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14708 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000712 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14553 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000711 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000705 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14848 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000714 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14993 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000718 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15296 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000729 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000731 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15205 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00073 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14961 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000715 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14980 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000719 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15033 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000738 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15399 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000742 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15349 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000736 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15201 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000729 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15247 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000736 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15089 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000729 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15159 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000735 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15023 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000727 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15049 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000726 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15273 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000752 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15477 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000751 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15406 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000732 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15156 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000734 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15104 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000733 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15205 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000731 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000726 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15065 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000741 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14939 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000731 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14984 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000731 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15070 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000732 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15127 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000754 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14960 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000746 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15056 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000742 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15052 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000744 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15172 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000746 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15301 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000759 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15302 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000762 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00076 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15561 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000755 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15582 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000767 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15626 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000782 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15800 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000773 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15873 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000773 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15881 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000773 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15631 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000773 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15619 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000779 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15520 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000756 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15297 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000773 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15323 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000763 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15570 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000782 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00078 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16025 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00079 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16123 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000787 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16205 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000789 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16276 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000799 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16457 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00088 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000851 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16310 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000787 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16325 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000795 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16263 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000804 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16186 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000797 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16351 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000805 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16562 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00088 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16400 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000855 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000778 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000801 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16150 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000802 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16149 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0008 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000796 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16061 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000792 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16114 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000797 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16438 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000881 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16520 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000865 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16286 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000778 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15941 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000784 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15708 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000779 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15738 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000787 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16051 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000806 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16310 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000796 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000881 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16792 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000867 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16898 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000876 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16992 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000862 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16909 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000874 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17101 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000874 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000881 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17410 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000889 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17553 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000896 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17510 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000891 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17309 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000893 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17439 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000892 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17568 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000888 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17417 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000896 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17411 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000892 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17556 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000894 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17486 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000895 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17707 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000885 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17202 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00087 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16947 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000879 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17094 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000875 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17425 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000886 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17360 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000883 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17307 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000888 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17363 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000888 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000889 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17326 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000879 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17264 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000902 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17555 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000886 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17497 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000881 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17244 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000883 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17264 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000876 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17028 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000861 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16839 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000855 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16372 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000775 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16005 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000791 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15962 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000793 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15919 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000794 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16034 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000802 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16067 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000807 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000839 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16534 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000893 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16782 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16675 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000864 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16720 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000874 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16746 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000883 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16862 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000887 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16948 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000887 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16938 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000903 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17035 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000885 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17042 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000891 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17135 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00089 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000913 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17649 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000913 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000926 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18132 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000916 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18110 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000934 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18226 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00092 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18111 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000922 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18153 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00094 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000932 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17856 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000926 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17607 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000906 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17465 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000909 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17627 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000897 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17390 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00089 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17440 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000909 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17571 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000899 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17696 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000925 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17608 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000906 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17404 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000886 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17370 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000885 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17365 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000899 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17210 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000884 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17227 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000888 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17244 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000889 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17394 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000892 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000878 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16972 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000868 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16945 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000876 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000894 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17050 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000881 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17128 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00089 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17108 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000889 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17108 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000886 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17234 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000888 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17290 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000886 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000885 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17312 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000891 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17580 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00091 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17807 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000911 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17796 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000912 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17765 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000914 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17813 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000909 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17995 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000927 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18018 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00092 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17825 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000908 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17512 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000907 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17637 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000911 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17696 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000915 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17516 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000899 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17686 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000922 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18023 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000917 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17958 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000904 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17899 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000917 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17955 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000916 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18243 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000924 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18367 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000929 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18361 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000945 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18607 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000952 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18817 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00094 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18651 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000936 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18302 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000928 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18300 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000925 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18082 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000913 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17988 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000921 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17770 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000908 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17568 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000902 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17483 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00089 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000915 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17546 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000903 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17764 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000919 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18023 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000909 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18126 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00091 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17947 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000904 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17939 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000916 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000901 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000899 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17862 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000905 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17813 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000923 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17869 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000906 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17871 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000916 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000925 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18164 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000934 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18618 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000936 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18899 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000964 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19219 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000977 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19224 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000982 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19315 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000973 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19342 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000968 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19184 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000966 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19394 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00098 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19505 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000986 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19486 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000984 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19332 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000997 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19252 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000984 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19259 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000984 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19202 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000977 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19290 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000989 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19699 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000993 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19757 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000999 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19743 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000984 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19607 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000985 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19837 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000985 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19757 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000971 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000968 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19362 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000973 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19494 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000974 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19372 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000965 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19147 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000969 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19007 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000951 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18639 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000943 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18062 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000926 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17843 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000924 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17888 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000926 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18080 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000932 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18088 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000925 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17913 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000931 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17663 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000901 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17345 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000898 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000894 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17002 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000905 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17096 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000907 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17272 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00091 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17409 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000904 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17747 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000923 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18094 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000933 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00092 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00094 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18111 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000942 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17970 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00092 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17844 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000922 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17817 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000916 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17938 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000928 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000932 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18310 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000948 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18739 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000946 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18713 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000947 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18786 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000947 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18805 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000945 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19025 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000962 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19114 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000965 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19030 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000969 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18847 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000968 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00096 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18962 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000969 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19082 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00097 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19138 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000966 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000973 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19198 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000962 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18989 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000952 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18650 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00095 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18399 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000941 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18228 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000944 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18295 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000944 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18326 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000937 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00095 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18393 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000948 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18609 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000957 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18816 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000958 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19151 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000967 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19567 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000981 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19694 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000999 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19999 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000996 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19995 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19847 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.001 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19983 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20078 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20077 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19930 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000991 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20057 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.001 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20039 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00099 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19888 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19951 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.001 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19928 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20470 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20512 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20672 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21007 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21081 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21140 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20920 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20746 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20680 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20687 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20936 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20921 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21049 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21426 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21391 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21578 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21299 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21143 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21154 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21150 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21458 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 8.48e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21672 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00108 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22068 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22078 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21971 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22188 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00109 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22199 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00109 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21934 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21713 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21744 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21776 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21778 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00108 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21583 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 1.32e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21576 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21161 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21101 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21051 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20679 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20553 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20707 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20686 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20344 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00113 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000999 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20241 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20074 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20390 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20396 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20413 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20177 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000999 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20025 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000988 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19857 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.001 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20265 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.001 sec ]
 [ GrB_Vector_nvals 1.16e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20216 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20357 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19943 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000998 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19570 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000982 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19554 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000982 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000981 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19380 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000975 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19122 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000954 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19191 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000961 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19510 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000985 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000965 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000964 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19307 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000969 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19353 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000975 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19362 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000969 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000972 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19455 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000968 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19417 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000975 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19442 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000962 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19339 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000971 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19663 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000974 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19762 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000993 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19913 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000995 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20283 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000997 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20429 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20604 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20695 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20841 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20955 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21146 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21202 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21037 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21190 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21483 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21846 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00108 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21994 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22255 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00109 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22637 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23193 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00112 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23540 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00113 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23741 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00114 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23681 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00114 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23992 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00115 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23947 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00116 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23755 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00115 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23613 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00115 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23602 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00116 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23799 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00115 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23905 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00116 sec ]
 [ GrB_Vector_nvals 1.24e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00116 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24362 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00119 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24222 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00117 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00116 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23803 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00117 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23577 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00115 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23492 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00115 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23552 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00117 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23595 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00115 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23583 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00116 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23733 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00118 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24284 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00119 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24451 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00119 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24345 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00119 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24553 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00119 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24824 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00119 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24288 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00116 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23760 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00114 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23508 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00113 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23319 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00114 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23166 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00113 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23217 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00112 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23153 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00112 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23125 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00113 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22898 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22800 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22740 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22569 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22664 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22735 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22991 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22933 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22973 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23004 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00112 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23295 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00112 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23312 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00113 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23758 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00114 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23783 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00114 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23667 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00113 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23737 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00114 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24036 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00115 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24154 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00116 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24032 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00116 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24023 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00114 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23958 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00114 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23773 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00113 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22908 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00109 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22266 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22310 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00109 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22457 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00108 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22372 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21953 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21858 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21603 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21482 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21034 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20663 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20516 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 1.1e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20543 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20305 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20155 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20505 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20984 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21310 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21565 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21678 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21526 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21694 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21856 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00108 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22183 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22124 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00107 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22384 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0011 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22565 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00109 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22723 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0011 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22653 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00109 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00109 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22160 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00109 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22205 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0011 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22391 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22942 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0011 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23122 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00112 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23189 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00111 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23339 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00112 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 23213 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0011 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22600 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00109 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22233 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21944 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22093 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21868 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21527 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 1.36e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21526 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21343 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21316 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21394 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21788 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22043 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22253 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22125 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00106 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21809 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21440 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21205 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21365 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21364 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21586 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21930 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22111 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00105 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22115 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22159 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21871 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21675 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21531 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21386 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21419 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21606 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21744 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21967 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00104 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 22058 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00103 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21470 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21530 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21591 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21262 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.001 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21103 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000994 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20850 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.001 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20833 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000999 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20844 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000978 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000997 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20908 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.001 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20864 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21054 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000993 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21022 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.001 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21015 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000998 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21142 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.001 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21166 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21087 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00102 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21282 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000996 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21133 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21035 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00101 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 21176 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000996 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20982 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000988 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20757 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.001 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20490 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000971 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20361 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000966 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20337 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000969 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 20068 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000958 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000946 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19906 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000948 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19810 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000942 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19693 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000952 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19629 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000946 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19529 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000939 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000938 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19071 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00093 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18743 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000912 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18799 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00091 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18839 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000914 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000947 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19244 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000921 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19205 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000913 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19095 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000909 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19153 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000922 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19150 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00092 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19294 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000914 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19352 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000922 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000943 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000938 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19489 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000915 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19494 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000918 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19346 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000914 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19152 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000901 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18550 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000899 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18190 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000887 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000874 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17678 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000866 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17576 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000858 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17721 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000863 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17838 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17688 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000859 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17709 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000871 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17905 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17691 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17675 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000858 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17470 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000851 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17257 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000849 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16830 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000824 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16632 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000831 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16371 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000751 sec ]
 [ GrB_Vector_nvals 1.26e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16402 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000847 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16552 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000815 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16297 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000771 sec ]
 [ GrB_Vector_nvals 1.52e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16285 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000766 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000756 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15995 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000756 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15795 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000748 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15715 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000757 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16048 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000766 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16340 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000775 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16544 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000873 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16782 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000838 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16784 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000851 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17123 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000867 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17312 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000868 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17429 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000851 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17445 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000864 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17594 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000873 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000873 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17624 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17510 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17427 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000867 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17638 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000874 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18018 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000897 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18391 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000886 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18519 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000905 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18735 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000905 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18910 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000906 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18758 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000894 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18467 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000891 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18459 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000902 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18563 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000898 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18490 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000894 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18522 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000899 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18704 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000906 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18977 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000913 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18961 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000918 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18904 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000897 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18386 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000893 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18526 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000913 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18610 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000917 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18637 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000898 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18682 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000893 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18487 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000909 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18645 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000918 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18845 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000929 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19119 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00094 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19551 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000939 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19839 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000963 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19990 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000954 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19592 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000944 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19497 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000931 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19319 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000928 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19345 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000934 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19211 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000914 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19250 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00093 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19168 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000917 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000911 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18674 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000914 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18906 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000928 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19058 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000932 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19246 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000935 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19314 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000944 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000942 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19540 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000945 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19645 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000942 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19638 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000945 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19380 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000939 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19417 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000925 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19191 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000919 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19146 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00093 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18944 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000905 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000892 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18392 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000894 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17930 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000884 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17894 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000879 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000871 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17820 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000876 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17686 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17610 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17828 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000886 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17833 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00087 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17823 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000879 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17936 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18248 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000889 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000893 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18753 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000901 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18901 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000895 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18809 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000912 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18922 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000898 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19031 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000891 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18873 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000898 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18738 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000889 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18984 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000895 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 19036 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000902 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18722 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000902 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18854 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000903 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18816 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000896 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18619 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00088 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18190 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000869 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18028 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000876 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17833 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000863 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17575 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000848 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17486 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000848 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17588 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000851 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17831 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000867 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18107 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000865 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18073 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000854 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17960 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000855 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18153 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000884 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18308 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000867 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18178 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000863 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000861 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17967 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000865 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17749 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000854 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17840 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000868 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17765 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000862 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17609 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000852 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17230 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000831 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16918 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000817 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16766 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000807 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000812 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16388 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000809 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16568 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00081 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16619 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00081 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16774 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00081 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16881 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000823 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16925 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000821 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16929 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000824 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000821 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17043 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000821 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17080 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000826 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17048 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000822 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000814 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16979 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000817 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000837 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17299 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000829 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17365 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000831 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000826 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17200 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000828 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000844 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17435 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000838 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17553 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000842 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17814 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000846 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17807 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000845 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17826 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000845 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17960 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000845 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17917 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00085 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18138 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000853 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000857 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18325 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000857 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18369 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00085 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17978 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000847 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17626 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000852 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17445 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000816 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17289 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000826 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17192 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000812 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000821 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16696 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000797 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16610 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00079 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16588 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000801 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16878 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000797 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16726 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000807 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16849 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000805 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16731 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000802 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16573 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000806 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16776 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000816 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000821 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17254 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000832 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17350 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000814 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17076 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000828 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17250 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000838 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000821 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17263 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000821 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17228 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000819 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17303 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000822 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000813 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16715 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000812 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16856 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000823 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16884 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000819 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16990 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000819 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16966 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000814 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000826 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17127 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000819 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17192 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000835 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17559 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000832 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17404 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000844 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17627 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000846 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17707 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000859 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17881 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000864 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17840 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000851 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17725 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000836 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17580 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000846 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17785 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000845 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17615 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000836 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17398 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00084 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17533 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000841 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17746 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00085 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17822 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000849 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17884 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00084 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17732 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000829 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17541 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000839 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17488 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00085 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17769 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000868 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18162 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000868 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000862 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18167 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000872 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00088 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18663 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000888 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18851 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000886 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18657 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000867 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18335 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000866 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18393 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000865 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18659 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00087 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18612 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000868 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18457 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00086 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 18049 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000855 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17893 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000847 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17999 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00086 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17923 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000847 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17548 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000832 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17129 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00083 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000816 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17244 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000826 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17317 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000814 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17025 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000815 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17025 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000824 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000817 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17146 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000822 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000839 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17489 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000837 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17556 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000831 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000829 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16988 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000806 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16891 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000808 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16985 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000811 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17024 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000804 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16880 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000804 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16773 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000801 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16450 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000787 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16289 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000716 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16061 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000739 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000721 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15770 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000732 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15760 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000724 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15650 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00072 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15589 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000716 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15410 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000704 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15345 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000704 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15271 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000705 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15209 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000706 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15199 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000706 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15072 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000707 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000703 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15061 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000691 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15145 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0007 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15253 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000711 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15403 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000719 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15130 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000695 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14903 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000682 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14994 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000682 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15066 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000687 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15045 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000694 sec ]
 [ GrB_Vector_nvals 9.78e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14813 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000684 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14688 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000677 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14472 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000668 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14443 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000673 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14565 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000681 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14733 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000689 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000695 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15089 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000706 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15247 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000709 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15383 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00072 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15602 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000723 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15416 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000716 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00072 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15741 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000723 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16016 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000731 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16113 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000736 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15996 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000727 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16083 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000729 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16117 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000728 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16080 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000737 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16052 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000727 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16102 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000739 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16194 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000745 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16356 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000736 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16331 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000756 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16710 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000824 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16676 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000789 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16457 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000798 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16456 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000799 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16797 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00081 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16843 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000802 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16974 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000813 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 17179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000809 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16914 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000794 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 5.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16643 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000794 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16484 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000788 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16451 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000785 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16371 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000726 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16490 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000817 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16327 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000717 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16094 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000728 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15852 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000711 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15488 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000704 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15363 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000697 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15177 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000692 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000687 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000707 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15654 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000716 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15824 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000718 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15797 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00071 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15601 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000704 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15385 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000701 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15196 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000686 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15042 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000677 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14996 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00069 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14783 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000668 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14536 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000665 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14364 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000652 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14084 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00064 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14018 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000648 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13799 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00063 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000635 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13471 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000632 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13514 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00064 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13526 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000631 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13533 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000646 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13814 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000647 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13535 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000631 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13334 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000625 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13247 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000622 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13217 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000613 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13242 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000624 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13312 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000624 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13478 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000622 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13449 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00062 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13407 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000617 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13532 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000616 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13218 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00061 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13202 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000606 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13122 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000608 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12999 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000595 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12837 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000605 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13015 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000603 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12948 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000603 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12963 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000604 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13012 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000606 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12895 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000597 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12935 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000604 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13057 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000623 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13241 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000616 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13367 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00061 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13437 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000618 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13529 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000619 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13726 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000625 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13811 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000642 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13852 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000638 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13919 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000625 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13798 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000625 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13723 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000615 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13549 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000611 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13510 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000611 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000605 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13389 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000604 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000601 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13169 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000604 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13025 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000595 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12896 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000598 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13122 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000603 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000603 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12956 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000601 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13042 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0006 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13219 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000603 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13141 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000603 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13133 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000599 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13363 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000612 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13351 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00061 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13500 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000606 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13557 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000605 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000613 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13280 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000598 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13137 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000588 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13089 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000594 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13123 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000603 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13216 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000598 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13194 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000609 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13325 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000598 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13237 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000597 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13205 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000598 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13134 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000589 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13036 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00059 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00059 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12665 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00058 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12396 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000576 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12296 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00057 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12078 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000563 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11784 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000553 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000546 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000559 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11894 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000554 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11854 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000563 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11975 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000569 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11957 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000557 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12125 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000562 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12111 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000567 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12227 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000566 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000565 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000566 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12412 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000573 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12364 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000576 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12285 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000571 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12171 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000562 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12126 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000559 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12149 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000554 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11965 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000559 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11915 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000551 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11858 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000555 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11940 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000559 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12100 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000557 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12129 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000566 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12172 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000571 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12076 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000565 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12103 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000561 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12210 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000572 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12145 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00057 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11902 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000555 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11882 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000558 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11969 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00056 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12236 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000563 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12180 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000556 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000551 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11983 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000544 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11819 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000551 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11776 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000547 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000551 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11783 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000546 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11710 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000556 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11820 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000556 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12015 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000558 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11947 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000556 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000554 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12078 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000557 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000564 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12025 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000565 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000562 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11917 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000561 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11849 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000562 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11934 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000559 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11927 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000558 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11965 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000568 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12139 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000576 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12273 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000574 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12276 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000577 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000588 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12538 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000589 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12704 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000594 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0006 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12961 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000604 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13101 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000598 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000611 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13353 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000615 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13409 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000622 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13273 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000619 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13551 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000617 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13509 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000612 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000613 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13496 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000615 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13384 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000618 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000598 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000604 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13107 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00062 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13343 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000616 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000613 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13042 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000611 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12869 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000601 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12816 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000605 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13052 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000614 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000614 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13213 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000611 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13054 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000615 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13041 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000613 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13141 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00062 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13371 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000627 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13446 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000624 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13454 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000616 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13356 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000622 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13281 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000635 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13424 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000637 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13508 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000631 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13336 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000633 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13483 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000634 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000645 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13769 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000645 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13871 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000653 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14012 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000648 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13939 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000645 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13986 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000656 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000642 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13680 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000644 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13595 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000634 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13492 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000632 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13441 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000633 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13633 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000646 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13736 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000641 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13907 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000646 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14022 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00065 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14352 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000662 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14523 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000669 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14460 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000669 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14527 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000677 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14626 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000666 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14485 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000664 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14473 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00066 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000676 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14196 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000661 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14384 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000659 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14304 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000659 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14249 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000658 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14292 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000676 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14255 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000664 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13917 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000653 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13673 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000634 sec ]
 [ GrB_Vector_nvals 1.01e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000634 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13379 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000633 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13206 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13040 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000615 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000622 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13379 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000621 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13440 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000632 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13558 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000634 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13606 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000648 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000648 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13966 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000653 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14081 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000658 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14034 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000669 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13817 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00066 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13563 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000639 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13457 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000639 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13423 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000649 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13435 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000633 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13389 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000639 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13451 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000643 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13296 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000628 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13370 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000635 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13644 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000651 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13796 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000652 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13989 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000659 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14232 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000657 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14348 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000654 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14215 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000661 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14394 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000668 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000681 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14651 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000676 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14752 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000674 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14860 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000697 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14924 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0007 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14993 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000683 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15068 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000703 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15248 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000705 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15446 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000713 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15509 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000707 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15275 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0007 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15219 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000709 sec ]
 [ GrB_Vector_nvals 1.2e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15287 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000708 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0007 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15153 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000702 sec ]
 [ GrB_Vector_nvals 1.21e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15301 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000705 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15276 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000709 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15254 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000719 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15201 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00071 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15218 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000704 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15359 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000714 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15414 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000713 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15247 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000715 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15281 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000701 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15227 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000702 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000714 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15525 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000719 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15428 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00072 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15397 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000705 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15565 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000711 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15685 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000724 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15877 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000721 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16076 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000733 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000723 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15983 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000727 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16048 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00073 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 16159 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000735 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15986 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000719 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15540 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000706 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15402 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0007 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15547 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00071 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 15139 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000691 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14776 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000685 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14511 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000673 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14520 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000675 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14317 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000663 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000673 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14496 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000662 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14488 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000662 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14663 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000672 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14811 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00067 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14853 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000671 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14914 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000679 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14791 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00067 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14958 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000669 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14925 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000672 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14563 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000657 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14489 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000653 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14217 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000657 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 14069 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00065 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13950 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00064 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13739 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000648 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13521 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000635 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13482 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000634 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13474 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000638 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13562 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000638 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13552 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000623 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13592 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000632 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13433 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000621 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13132 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000614 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000617 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13023 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000604 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000618 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13197 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000612 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13325 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000613 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13426 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000614 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13250 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00061 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13209 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00061 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13333 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000609 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000612 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12995 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000606 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12905 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000606 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13158 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000614 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000609 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13070 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000595 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12975 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000603 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0006 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12858 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000601 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12842 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000607 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12844 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000594 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000582 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12498 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000596 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12618 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000593 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12738 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000595 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12646 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000601 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12627 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00059 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12742 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000594 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12900 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000592 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12883 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000608 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12990 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000601 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12944 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00061 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13166 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000607 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13251 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000608 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13189 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000618 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13255 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000612 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13255 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000613 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000612 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13388 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000609 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13320 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00061 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13337 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000601 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000595 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 13025 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00059 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12952 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000597 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12747 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000585 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12564 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000587 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12646 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00059 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12780 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000586 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12714 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000596 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12797 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000593 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12803 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000587 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12780 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000572 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000577 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12568 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000587 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12473 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000583 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12382 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000579 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12164 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000567 sec ]
 [ GrB_Vector_nvals 1.12e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000563 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11717 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000557 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11424 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000538 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11496 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000543 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11801 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000542 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11906 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000556 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11855 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000548 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11979 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000565 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12309 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000571 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12602 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000581 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12718 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000585 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12722 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000586 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12800 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000577 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12530 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000578 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12312 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000561 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 12077 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00056 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11904 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000555 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000558 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11814 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000544 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11794 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000543 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11623 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000535 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11358 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000521 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11122 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000514 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11041 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000524 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11082 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000522 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10929 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000514 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11002 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000516 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10895 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000503 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10852 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000499 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10868 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000505 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10868 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000506 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11008 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000513 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11067 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000514 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11195 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000513 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11320 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000518 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11358 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000511 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11284 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000517 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11214 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000506 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000491 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10479 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000476 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10412 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000471 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10165 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9909 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000458 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9942 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10096 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000462 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10029 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000458 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9870 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9726 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000452 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9839 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000455 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9706 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000453 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9795 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9825 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000459 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9682 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000453 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9578 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000446 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9442 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9342 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9362 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9317 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000446 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9339 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000441 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9247 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9079 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9151 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000438 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8921 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8924 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8959 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8776 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8613 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8466 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8298 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000408 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8210 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000405 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8234 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000405 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8217 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000407 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8016 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8088 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000376 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8113 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8042 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8009 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8009 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7961 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000372 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7924 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7976 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7893 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7734 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7770 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8048 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7984 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7920 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7829 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7850 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7971 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8002 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7978 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7816 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7762 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000359 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7727 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7791 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7866 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7918 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7888 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7878 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7714 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7701 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7750 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7832 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7914 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8131 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000375 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8206 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000416 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8424 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000408 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8261 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8430 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000407 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8432 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8418 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8536 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8421 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000401 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8271 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8157 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8078 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8143 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8036 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8075 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8098 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7966 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7985 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7986 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8013 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8272 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8396 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000403 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8208 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000397 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8169 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8121 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8073 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8104 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000376 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8249 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8123 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8155 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000372 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8211 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8281 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000408 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8507 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8679 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8465 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8381 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8298 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000416 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8469 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8325 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8171 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000381 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8382 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8578 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8466 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8597 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8776 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8683 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8589 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9032 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9091 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000442 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8992 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8851 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8667 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8528 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8619 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8659 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8703 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8514 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8409 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000416 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8304 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8331 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000416 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8474 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000418 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8430 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8018 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000375 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7941 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000368 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7929 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000376 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7897 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7873 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000368 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7939 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8025 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000379 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8185 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000384 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8183 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000389 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8346 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8700 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000432 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8728 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000443 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8853 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000437 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8774 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8620 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8527 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8509 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8489 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8437 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8416 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8315 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000408 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8246 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8246 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000407 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8329 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000407 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8193 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000407 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8373 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000407 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8205 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000408 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000376 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8069 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7984 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8001 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8098 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000376 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8196 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8157 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8308 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8366 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8451 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8595 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8511 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8409 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8302 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8333 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000405 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8159 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000375 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8084 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8039 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8024 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7921 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7825 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7725 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7618 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7513 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7456 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7407 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7234 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7315 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7365 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7507 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7774 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7700 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7539 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7623 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7765 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7743 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7770 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7793 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7900 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7973 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7996 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000382 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8056 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000383 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8050 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000374 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8026 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00038 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8048 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000383 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7991 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000383 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8169 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000385 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8244 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8164 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000387 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8248 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8195 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8248 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8118 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000383 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000382 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7950 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000376 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7952 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00038 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7944 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7973 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000384 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8181 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000385 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000421 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8290 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8362 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000436 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8432 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000432 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8328 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8157 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000384 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8025 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000382 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8215 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8424 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8632 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8642 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000439 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000432 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8561 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8570 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8504 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8482 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8335 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000385 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8084 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000384 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8002 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000384 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7950 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000381 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8121 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00039 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8304 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8492 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8672 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8620 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8674 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000436 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8878 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000438 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8728 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8600 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8663 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8629 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8509 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8618 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8551 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8517 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8437 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8641 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000431 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8759 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8701 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000428 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8836 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000436 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8889 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000435 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8735 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8590 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000427 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8560 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8504 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8504 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8509 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8446 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8607 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8689 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8703 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8752 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8675 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8573 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8437 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8453 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000411 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8181 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8216 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8419 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8417 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8355 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8278 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000397 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8050 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8149 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8320 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8213 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8259 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000411 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8195 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000406 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8117 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000372 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8040 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8056 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000378 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8258 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8354 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8246 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000411 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8234 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8205 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000408 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8104 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7915 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7815 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000359 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7769 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7786 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7803 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7795 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7828 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7767 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7790 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7893 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7811 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7734 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7831 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7881 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8027 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7983 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8101 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000384 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8412 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8629 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000424 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8532 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8546 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000418 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8658 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8703 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8761 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8541 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8378 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000411 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8322 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8450 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8639 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8602 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8533 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000411 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8489 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000416 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8476 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8484 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8296 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000402 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8191 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00037 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8195 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000405 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8186 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8014 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7846 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7830 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000368 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7854 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7839 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7819 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7933 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7711 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000359 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7691 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7742 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7714 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7729 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7716 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7658 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7746 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7635 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7524 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7754 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7531 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7394 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7353 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7266 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7348 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7385 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000342 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7306 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7049 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7087 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7129 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7122 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7071 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7108 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7085 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7026 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6965 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6880 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7061 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7044 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7020 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6857 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6844 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6741 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6776 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6762 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6740 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6806 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6650 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6571 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6533 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 9.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6417 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6352 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6276 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000299 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6237 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6308 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6499 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6560 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6608 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 1.13e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6788 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 1.15e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7016 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7040 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7026 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7134 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7003 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6972 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 1.11e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6994 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 1.09e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7085 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000342 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7128 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7069 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6910 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 1.19e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6990 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 1.07e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7022 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7195 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 1.02e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7478 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7751 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000355 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7881 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7880 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 1.05e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7864 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 1.14e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7798 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 9.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7836 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 9.41e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7810 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7850 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7718 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 1.03e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7543 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7529 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 1.06e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7540 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7525 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000342 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7320 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 9.69e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7305 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 1.04e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7356 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7369 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7365 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7289 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7134 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7065 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6924 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7100 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7257 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7160 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7144 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7096 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000331 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7056 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6974 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6981 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6958 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7022 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6928 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7057 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7227 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7231 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7323 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7338 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7371 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7430 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7431 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7834 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7891 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7878 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8046 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000375 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8122 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000383 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8099 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7840 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000372 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7933 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8093 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8056 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000373 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8072 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7888 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000359 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7824 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7851 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000364 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7788 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000359 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7742 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7794 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000366 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7844 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000361 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7700 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7681 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7772 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7903 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7965 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7839 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7787 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7579 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7488 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7183 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7058 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6848 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6821 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6920 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6747 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6792 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6804 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6931 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6973 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6961 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6840 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6839 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6971 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6955 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6952 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6928 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6943 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7119 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7030 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6986 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7070 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7100 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7051 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6831 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6619 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6539 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6322 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6199 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6299 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6397 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6308 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000289 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6156 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6256 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000291 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6276 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6298 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6322 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6369 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6388 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6413 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6310 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00029 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6389 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000292 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6335 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000289 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00029 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6237 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6374 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6495 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000299 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6655 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6790 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6779 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6722 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7042 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7143 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7308 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 8.48e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7252 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7085 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6817 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6931 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6958 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6938 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7003 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6911 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6982 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7134 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7480 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7690 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7662 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7631 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7684 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7706 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7695 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7677 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7563 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7692 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7906 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7817 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7827 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7857 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000356 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8012 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000358 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8084 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8128 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000362 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8109 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000363 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8033 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000365 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8146 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000367 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8183 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000369 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8332 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0004 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8300 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8428 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000414 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8675 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8908 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9049 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000436 sec ]
 [ GrB_Vector_nvals 1.08e-07 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9268 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000442 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9656 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9733 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000459 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10083 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000469 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10375 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000473 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10548 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000475 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10646 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000481 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10598 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000482 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10457 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000467 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10237 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00046 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10170 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000468 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00047 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10331 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10365 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10093 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000461 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10025 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000452 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9971 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000453 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9972 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000453 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9963 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000454 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9952 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00045 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9757 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9778 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000457 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9863 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000455 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9789 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000449 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9694 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9707 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00045 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9827 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000447 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9779 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000453 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9967 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000458 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10080 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9981 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000457 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9942 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000458 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10101 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10249 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00047 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10288 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000464 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10225 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00046 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000456 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9905 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000457 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9902 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000462 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9876 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000452 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9626 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000434 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9352 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00043 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9176 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000429 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9161 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9062 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8842 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8885 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8876 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8912 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000406 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8943 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8812 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8863 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8793 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000403 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8630 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000401 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8775 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000416 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8938 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9054 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000419 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9059 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9142 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9239 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000426 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9262 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000423 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00042 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9287 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000422 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9336 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9369 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000425 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9103 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8864 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8977 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000413 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9087 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000411 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8965 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 9.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9058 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000416 sec ]
 [ GrB_Vector_nvals 9.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9054 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000415 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9006 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8955 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8859 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000405 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8791 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000407 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8812 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000409 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8878 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000411 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000412 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8531 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000395 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8298 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000393 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8079 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000354 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7975 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7872 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7798 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7717 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7645 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7597 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7528 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7478 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7384 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7341 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7431 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7414 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7411 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7596 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7499 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7433 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7386 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000331 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7500 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7528 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7680 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7804 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7815 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7708 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000342 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7720 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7906 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8109 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000353 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8157 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7855 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7943 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8070 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7953 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7934 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8001 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7912 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7634 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7400 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000336 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7443 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7367 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7146 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6859 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6676 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6546 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6417 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00029 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6246 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6133 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000291 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6198 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000288 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6306 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6413 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6443 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6432 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000291 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6310 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000284 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000286 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6178 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000285 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6297 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000285 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6395 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6326 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000288 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000288 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6381 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000289 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6521 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6571 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6332 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000283 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6168 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000282 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6232 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000283 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6134 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000282 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6182 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000284 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6147 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000279 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6027 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5837 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5669 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5535 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5376 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5295 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5381 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5416 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5396 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5214 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4967 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4900 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4949 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5069 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5079 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5112 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5181 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5125 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5077 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5135 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5111 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5191 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5149 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5061 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5085 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5127 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5114 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5028 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4994 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5070 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5157 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5107 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4933 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000231 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4848 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00023 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4871 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4923 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5017 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5027 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4996 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4896 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4996 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5209 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5063 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4872 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00023 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4737 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000229 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4705 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000224 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000228 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4620 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000225 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4640 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000228 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4699 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000229 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4813 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00023 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5023 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5076 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5071 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5081 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5082 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5123 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5197 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5338 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5410 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5589 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5809 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5928 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5664 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5559 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5548 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5672 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5903 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5805 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5894 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5986 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5959 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6014 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5861 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5744 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 9.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5782 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5772 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5718 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5681 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5665 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 8.48e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5690 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5692 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5712 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5744 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5717 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5639 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5664 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5882 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5874 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6020 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6104 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000276 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6107 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6214 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000271 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6330 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000279 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6495 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000286 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6556 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6387 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000279 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6211 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6014 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5996 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000274 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6077 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6289 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000278 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6396 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000286 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6403 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000283 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6443 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6447 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000285 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6484 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000288 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6462 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000286 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6374 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6261 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000284 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6155 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6188 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000279 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6203 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6151 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 8.57e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6026 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000278 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6194 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000279 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6186 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000279 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6073 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5999 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5907 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5824 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5660 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5660 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5659 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5838 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5797 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5723 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5687 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5743 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5862 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5935 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000274 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6053 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5973 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000276 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5811 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5574 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5379 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5200 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5171 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5167 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5233 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5257 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5343 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5415 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5352 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5247 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5340 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5048 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4770 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000219 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4609 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000217 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4452 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4374 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4437 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4421 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000214 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4345 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000215 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4222 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000197 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4277 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000205 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4324 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000208 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4242 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4099 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0002 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4140 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000206 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4192 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000201 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4076 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000183 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3983 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000183 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3907 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000178 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3754 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000173 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3762 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00017 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3798 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000177 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3869 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000177 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4010 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000181 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3988 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000179 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3958 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000173 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4005 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000179 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4056 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000178 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4102 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000198 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4087 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000178 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4126 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000194 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4108 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000195 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3981 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000177 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00017 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3778 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000172 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3695 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000165 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3524 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000165 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3473 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00016 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3550 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000162 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3526 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000164 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3525 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00016 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3499 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000159 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3480 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000161 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3426 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000157 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3425 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000156 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3524 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000164 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3497 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000159 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3396 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00016 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3379 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000158 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3442 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000162 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000163 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3374 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000157 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3335 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000152 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3254 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000151 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3194 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000148 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3210 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00015 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3284 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000159 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3341 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000155 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00015 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3266 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000151 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3338 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000149 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3376 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000154 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3368 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000152 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3288 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000153 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3201 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00015 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3203 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000158 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3208 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000154 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3263 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000152 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3301 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000156 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3363 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000156 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3330 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000155 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3311 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000154 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000156 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3195 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000154 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3282 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000155 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3275 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000161 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3431 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000161 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3505 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000161 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3525 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000165 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3527 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000164 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3615 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000168 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3582 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000167 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3643 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000168 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3624 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000168 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3738 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000172 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000181 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000178 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3731 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000172 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3813 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000171 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3775 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000171 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3790 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000171 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3749 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000173 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3765 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000172 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3773 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000171 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3755 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000174 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3811 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000176 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3853 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000179 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4035 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000184 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4076 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000182 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4062 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000183 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4071 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000185 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000186 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4151 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000204 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4095 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000184 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4034 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000184 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3984 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000183 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3864 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00018 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000179 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3857 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000186 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4089 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000187 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4261 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000203 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000206 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4447 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4428 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000214 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4502 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4395 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00021 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4380 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4360 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4147 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4099 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000198 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4186 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000203 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4202 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000204 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4252 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000206 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4372 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000208 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4362 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4307 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000203 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4261 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000202 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4121 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000199 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4028 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000181 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4004 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000188 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4102 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000201 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000208 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4478 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4549 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00022 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4609 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000228 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000226 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5049 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000233 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5283 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5440 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5494 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5490 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5540 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5520 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5524 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5692 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5791 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5740 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5810 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5827 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5628 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5571 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000247 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5500 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5479 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5579 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5668 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5641 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5640 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5751 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5886 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5815 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5819 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5859 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5828 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5791 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5618 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5669 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5618 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5740 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5823 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6005 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6074 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6169 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6130 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000278 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6130 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6094 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6133 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6126 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000274 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6050 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5989 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6003 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6209 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000276 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6204 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6316 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000283 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6475 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6421 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000278 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6241 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6058 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6031 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5896 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5646 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5384 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000247 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5325 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5395 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5501 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5534 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5409 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5326 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5124 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000234 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5054 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5063 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000233 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4911 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000227 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.85e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4779 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00023 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4810 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000228 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4773 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000226 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4718 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000223 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4649 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000221 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4546 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000215 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4378 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4272 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000206 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4184 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000205 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4128 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4014 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000186 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000193 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4023 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000185 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4004 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000186 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3950 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000183 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000186 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4022 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000187 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4133 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4215 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4165 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000208 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4034 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000186 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3864 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000182 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3705 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000181 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3799 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000185 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3795 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000184 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3833 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000189 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3953 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000188 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4051 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000195 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4214 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000211 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4367 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000218 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4479 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000221 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4378 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000214 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4372 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000215 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4412 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4388 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000215 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4289 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4218 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000217 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000217 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4390 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00022 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4416 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000227 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4463 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000221 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4445 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00022 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4416 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000221 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4455 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000226 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4445 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00022 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4483 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000226 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4482 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000222 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4446 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000221 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4565 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000222 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4699 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000229 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4753 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000229 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4819 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4791 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4758 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000224 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4741 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000226 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4834 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4957 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00023 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4830 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4721 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000228 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000231 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4842 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000229 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4873 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000227 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4913 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5213 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5270 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5400 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5463 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5530 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5476 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5258 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5332 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5269 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5230 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5293 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5317 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5366 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5401 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5392 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5549 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5654 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5894 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6093 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6039 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6174 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000288 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6261 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000289 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6311 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000285 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6287 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000284 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6237 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6300 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000292 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6441 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6591 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6610 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6551 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000294 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6589 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6821 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7029 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7029 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7012 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7010 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6931 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6944 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6958 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6779 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6819 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6812 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6885 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7115 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7084 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7057 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7046 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7043 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7254 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7115 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6900 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6924 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7090 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7625 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7843 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8062 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8154 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000359 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8182 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000351 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8253 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000404 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8345 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000393 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8308 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000388 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8265 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000393 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8341 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000389 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8454 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000395 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8650 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000399 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8445 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000385 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8102 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7917 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7719 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7600 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7504 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7560 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7547 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7628 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00034 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7455 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7379 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7218 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7311 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7340 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7266 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7253 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7091 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7011 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7067 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6957 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6983 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7030 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6846 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6759 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6883 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6881 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6888 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 8.48e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6853 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6851 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6900 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6885 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6737 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6582 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000294 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000284 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6344 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6245 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000276 sec ]
 [ GrB_Vector_nvals 8.48e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6110 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5869 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5607 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5473 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5327 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5364 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5340 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5252 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5067 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5053 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4988 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000234 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4845 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000226 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4637 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000221 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4598 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000221 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4421 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000217 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4298 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000212 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4368 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000216 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4397 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00022 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4485 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00022 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4641 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000229 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4746 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000234 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4889 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4905 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4886 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4905 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5037 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5043 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5130 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5218 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5278 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000247 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5324 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5465 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5658 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5497 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5436 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5508 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5516 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5626 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5723 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5730 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5864 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5906 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6006 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000283 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6063 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6188 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000292 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6619 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6677 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6666 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6541 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000299 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6510 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6634 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6694 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6827 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6934 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7069 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6958 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6886 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6919 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6930 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6882 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6807 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6995 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7040 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7010 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6904 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6960 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7119 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7154 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7094 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7108 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7097 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7307 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7462 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7583 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000331 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7671 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7636 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7581 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7684 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7674 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7494 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7386 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7289 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7161 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7087 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7155 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7032 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7115 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7170 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7359 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7382 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7281 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7258 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7244 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7288 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7319 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7360 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7151 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7186 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7362 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7234 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7155 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7119 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6886 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6915 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7066 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7283 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7305 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7293 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7454 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7582 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7491 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.66e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7260 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7338 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7304 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7149 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7159 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7134 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7013 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6875 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7035 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7230 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7348 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000316 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7308 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7423 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7498 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7596 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7795 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7906 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000346 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8073 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000341 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8119 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000342 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8160 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00035 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000347 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8108 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8041 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000342 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7836 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7663 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7539 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7564 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7536 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7624 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7618 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7674 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7878 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000331 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7904 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8032 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8061 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8093 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.67e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8072 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8017 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8070 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000338 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8063 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000342 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8035 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000339 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7910 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7893 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7772 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000328 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7759 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7766 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7428 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000314 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7222 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7036 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6918 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000292 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6736 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000286 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6666 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6538 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000279 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6407 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6398 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000276 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6343 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6142 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6301 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6390 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6379 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6334 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6234 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6076 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6066 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6011 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5958 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5848 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5903 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6121 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6161 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6228 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6202 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6134 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6109 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5927 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5824 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5788 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5744 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5871 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5760 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5715 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5751 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5872 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5923 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6101 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6001 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5969 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5930 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5713 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5633 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5507 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5502 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5540 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5574 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5569 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5581 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5498 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5716 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5849 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5842 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5723 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5770 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5811 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5774 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5800 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5856 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5784 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5691 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5737 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5752 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5893 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6010 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6116 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5948 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5906 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5897 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6044 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6199 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6245 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6057 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5945 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5925 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5941 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5747 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5603 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5704 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5775 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 7.64e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5829 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5837 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5871 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5901 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5938 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5947 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5759 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5555 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5535 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5627 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5796 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5753 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5693 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5727 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5885 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5798 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5652 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5603 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5696 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5807 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5896 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5985 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6183 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000274 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 9.13e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6191 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6217 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000271 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5826 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5570 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5458 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000247 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5473 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000247 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5368 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5367 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5424 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5535 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5415 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5343 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5408 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5259 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5244 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5175 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5188 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5150 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5246 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5191 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5163 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5330 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5540 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5559 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5586 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5574 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5546 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5528 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5378 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5306 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5159 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5052 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5149 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5226 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5188 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5347 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5435 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5515 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5500 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5487 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5544 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5782 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6030 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6073 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6191 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000285 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6289 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000279 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6100 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000276 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6073 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5974 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6065 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000274 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6167 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000274 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6079 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6125 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000282 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6142 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6135 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000271 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000276 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000284 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6239 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6402 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6409 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000282 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6233 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000282 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6095 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6099 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6123 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6109 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6031 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6023 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6023 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5797 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5800 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5727 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5603 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5668 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5682 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5602 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5500 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5561 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5612 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5482 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5430 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5421 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5433 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5437 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5328 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5256 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5342 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5230 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5188 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5254 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000247 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5429 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5421 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5236 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5356 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5420 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5381 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5336 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5443 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5446 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5464 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5456 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5562 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5726 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5749 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5543 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5376 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5141 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5032 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5022 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000239 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5165 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5239 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5231 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5153 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4995 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4984 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000233 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4949 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4897 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4955 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5153 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5316 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5378 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5476 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5604 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5578 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5688 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5583 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5502 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000245 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5543 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5571 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5570 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5630 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5705 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5653 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5597 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5773 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5943 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5968 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5906 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5982 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6088 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5962 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000264 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5823 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5699 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5572 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5564 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5624 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5563 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5528 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5615 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5780 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5823 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5716 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5597 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5674 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5641 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000256 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5785 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5860 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5824 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5744 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5624 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5361 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5184 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5200 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5286 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5258 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5297 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5315 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5163 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5103 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5019 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000231 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4840 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000227 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4758 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000228 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5054 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4898 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000226 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4803 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000231 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4863 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000231 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4942 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4946 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000234 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5135 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000241 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5406 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5317 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5384 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5615 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5753 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5944 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6052 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000274 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6011 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000276 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6081 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6102 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6138 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6085 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5934 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5990 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6107 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000282 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6069 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6000 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6040 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6106 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6077 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5922 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5842 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5791 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5644 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5521 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5541 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5701 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 9.5e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5751 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5852 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5833 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5662 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5594 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5526 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00026 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5454 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5489 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5721 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000274 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5979 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000278 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6076 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000278 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6000 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000278 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5903 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 8.48e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5869 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 8.2e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5836 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5824 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5698 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5680 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5657 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5616 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5583 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5583 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5578 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5664 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5795 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5913 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000271 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6054 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000282 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6251 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000286 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6133 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000273 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5772 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00027 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5732 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5909 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000274 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000279 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5969 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 8.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6020 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6065 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000278 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6129 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6056 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000283 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6097 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6177 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00029 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6418 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6633 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6882 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6965 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6918 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 8.48e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6927 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6869 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6824 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 8.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6726 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 8.48e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6672 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6687 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000288 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6670 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6731 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6738 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6539 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000292 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6574 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6620 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6525 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6471 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6517 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6490 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6455 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000294 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6487 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6586 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6728 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6582 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000299 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6378 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00029 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6335 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000283 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6466 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6708 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6814 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6844 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6756 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6770 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7042 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7102 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6945 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6740 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6810 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6746 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6716 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6834 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6877 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6873 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6886 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6956 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7084 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7030 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7231 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7332 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7369 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000321 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7344 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7165 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7113 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000313 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6879 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6672 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6523 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000297 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6615 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6596 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6482 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000299 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6621 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6586 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6585 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6685 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6604 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6652 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6636 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6615 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6629 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000305 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6728 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000306 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6896 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00031 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6858 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6773 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000307 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6582 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6587 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6610 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6803 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000308 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6983 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 7.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7256 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7386 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7503 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000326 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7482 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000323 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7303 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7420 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7651 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000337 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7519 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000331 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7396 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7231 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7386 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7416 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000333 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7459 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7288 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7124 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000318 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6981 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7076 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000317 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7017 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6959 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00032 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6995 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7045 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000322 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7069 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7226 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000327 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.49e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7183 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6898 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000312 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6795 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000309 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6600 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.48e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6493 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6452 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6357 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000294 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6617 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6761 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000315 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000319 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7145 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000329 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7280 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000334 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7472 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000342 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7482 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000344 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7627 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7852 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000352 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.73e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8137 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00036 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8386 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000417 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8487 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00041 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8514 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000398 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000391 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8220 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000395 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8166 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000357 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8176 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000371 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8396 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000406 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8448 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000403 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8502 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000407 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8520 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000407 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8497 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000403 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8457 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000402 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8528 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000401 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8521 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000397 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8415 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00039 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8351 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000392 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8518 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000403 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8594 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000401 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8645 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000406 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8591 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000396 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8292 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000385 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.7e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7953 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7860 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7884 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000345 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7915 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.65e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7904 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000349 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.69e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000348 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7644 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000343 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7477 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000332 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7374 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000325 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7453 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000335 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.52e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7463 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00033 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7295 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000324 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.5e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7046 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000311 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6765 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000304 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6639 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6632 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6631 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6516 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000303 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6556 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6585 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6563 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000302 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6596 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000301 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6481 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000298 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6539 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0003 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6431 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000296 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6254 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000289 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6202 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000292 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6103 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000289 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6041 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000283 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6019 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6139 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00029 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6190 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 3.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6169 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000286 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6181 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000286 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6217 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6226 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6166 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000283 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6178 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000286 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6239 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000286 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6478 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000292 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6489 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000293 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6518 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000295 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6463 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000286 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6350 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000285 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6269 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6232 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6183 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6088 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000274 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6074 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000287 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6148 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6173 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6088 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000276 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6041 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5989 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000276 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5819 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5807 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5715 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000262 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000267 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5783 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5755 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000261 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5459 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5385 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5416 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5544 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5515 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5598 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5532 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000257 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5568 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5605 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5597 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5488 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00025 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5405 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5477 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000254 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5500 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5423 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5367 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5572 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000255 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5859 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000263 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6088 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 7.36e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6343 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000285 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6432 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000281 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6445 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6537 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000283 sec ]
 [ GrB_Vector_nvals 6.8e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6364 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00028 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6309 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6206 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6277 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000279 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6298 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000275 sec ]
 [ GrB_Vector_nvals 6.71e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6300 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000277 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6155 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000269 sec ]
 [ GrB_Vector_nvals 6.89e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6103 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000265 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6072 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000272 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6005 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000271 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5967 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000268 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5938 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000266 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5816 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000258 sec ]
 [ GrB_Vector_nvals 8.48e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5718 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000259 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5599 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000252 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5420 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000246 sec ]
 [ GrB_Vector_nvals 7.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5286 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5121 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5092 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5107 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5024 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4919 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000229 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4740 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000224 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4749 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000223 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4862 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000228 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4822 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000227 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4777 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000224 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4751 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000223 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4721 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000221 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4693 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000222 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4622 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000221 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4544 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000218 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4489 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000219 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4492 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000214 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4545 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000215 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4622 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000224 sec ]
 [ GrB_Vector_nvals 8.85e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4700 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000219 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4636 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000217 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4468 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.82e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4481 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000214 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.96e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4525 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000217 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4696 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000222 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4707 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000223 sec ]
 [ GrB_Vector_nvals 7.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4778 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000225 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4885 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000228 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000225 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4719 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00022 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4717 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000224 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4832 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000225 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4932 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000233 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4915 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000235 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4989 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000234 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.97e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4929 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00023 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4765 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000223 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4681 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000222 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4713 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000221 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4691 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000222 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.84e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4676 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000222 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.88e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4736 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000223 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4760 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000224 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4850 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000229 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5008 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5167 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00024 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5173 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5261 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5439 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000253 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5384 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.33e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5340 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000243 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5468 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000247 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5522 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000249 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5552 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000251 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000248 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5581 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000244 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5487 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000242 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5350 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000238 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.99e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5172 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000231 sec ]
 [ GrB_Vector_nvals 6.61e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5107 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 6.52e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.94e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4976 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000228 sec ]
 [ GrB_Vector_nvals 7.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5035 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000237 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5133 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000236 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5133 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000232 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4940 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000225 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000224 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4991 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000227 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4898 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000225 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.9e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4985 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000227 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 5009 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000228 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4973 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000228 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.95e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4951 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000219 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4850 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000223 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4814 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00022 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4796 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000223 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.89e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4982 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000225 sec ]
 [ GrB_Vector_nvals 6.43e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4898 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000225 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.91e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4752 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000214 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4631 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000214 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 2.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4489 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000211 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.98e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4477 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000209 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.8e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4420 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000208 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.86e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4437 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000204 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000208 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.92e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4262 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000206 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4339 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000207 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.93e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4427 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000213 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4271 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000202 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.87e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4188 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0002 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4072 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000181 sec ]
 [ GrB_Vector_nvals 8.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 4047 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000184 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3970 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000183 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.79e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3873 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000174 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3950 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000176 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.81e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3925 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000177 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3966 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000177 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.77e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3975 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000178 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.83e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3942 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000174 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.78e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3934 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000174 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.72e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000172 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3943 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000173 sec ]
 [ GrB_Vector_nvals 8.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3936 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000176 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.64e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3875 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000177 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.75e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3813 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000175 sec ]
 [ GrB_Vector_nvals 6.24e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3902 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000176 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.76e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3909 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000176 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3888 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00017 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.68e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3798 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000168 sec ]
 [ GrB_Vector_nvals 8.48e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3741 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000169 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.63e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3691 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000166 sec ]
 [ GrB_Vector_nvals 8.29e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3560 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000165 sec ]
 [ GrB_Vector_nvals 9.97e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3548 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000164 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.57e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3520 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00016 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3535 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000161 sec ]
 [ GrB_Vector_nvals 8.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3515 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000162 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3532 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000161 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3649 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000163 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3701 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000166 sec ]
 [ GrB_Vector_nvals 7.08e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3642 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000163 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3544 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000165 sec ]
 [ GrB_Vector_nvals 8.48e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3424 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000159 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.59e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3486 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000159 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.74e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3536 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000163 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.61e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3608 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000162 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.62e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3548 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000158 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.71e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3533 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000161 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.58e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3483 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000161 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.55e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3445 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000158 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3306 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000149 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3284 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00015 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3138 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00015 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3079 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000144 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 3038 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000141 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2930 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2840 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2792 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2812 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2854 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2839 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2895 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 7.92e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2920 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00014 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2883 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 7.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2913 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2837 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2760 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2761 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000136 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2793 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2810 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2773 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000143 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2742 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000134 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2752 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000136 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2699 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2685 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000129 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2676 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000131 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2670 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000131 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2687 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000132 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2645 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000131 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2581 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00013 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2620 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000132 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2727 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000132 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2757 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2725 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000133 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2771 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2873 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000136 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2874 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2784 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000136 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2761 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000134 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2815 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2850 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2796 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2740 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00013 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2747 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000133 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2686 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000131 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2786 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.36e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2724 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000131 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.38e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2716 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 6.98e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.54e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2787 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000134 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2817 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000133 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2919 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000138 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2896 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000139 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.53e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2825 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.51e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2810 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2721 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2766 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000132 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2815 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000136 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.4e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2818 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000134 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2871 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2912 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000137 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.43e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2804 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000135 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.6e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2762 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000133 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.56e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2761 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000133 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.37e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2684 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000127 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2592 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000126 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2525 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000124 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.33e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2446 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000122 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.47e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2319 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000117 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2203 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000117 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2209 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000115 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2260 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000117 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2404 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000129 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2433 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000121 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2477 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000122 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2490 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000121 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2501 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000123 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2484 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000122 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.46e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2479 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000119 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.44e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2546 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000123 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.45e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2395 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000118 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2306 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000113 sec ]
 [ GrB_Vector_nvals 5.4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2199 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000113 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2206 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000113 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2154 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000113 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2097 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000111 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2157 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000114 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000115 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2256 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000115 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.39e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2279 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000114 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2194 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000113 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2171 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000111 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2108 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000107 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.41e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1973 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.82e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1942 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.66e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1965 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.74e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1984 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0001 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2036 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.91e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.0001 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1956 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00011 sec ]
 [ GrB_Vector_nvals 5.59e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1936 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.76e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1952 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.36e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1928 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.46e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1865 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.39e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1791 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.2e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.47e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1772 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.22e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1789 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.27e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1863 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.55e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1920 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.75e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.66e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2019 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.75e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1964 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.57e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1858 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.44e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1875 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.32e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1937 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.4e-05 sec ]
 [ GrB_Vector_nvals 5.87e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2009 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.48e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1979 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.29e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.3e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1835 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.2e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1862 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.28e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1830 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.93e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.8e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1838 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1867 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.27e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1762 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.04e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1691 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.74e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1648 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.81e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1681 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.81e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1726 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.85e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1711 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.83e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1751 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.49e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1779 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.27e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1829 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.48e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1911 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.42e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1898 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.53e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.35e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1860 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.56e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1794 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.36e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1844 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.41e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1889 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.64e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1877 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.66e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.52e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1965 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.55e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1940 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.63e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1923 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.51e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.5e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1922 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.64e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2009 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.87e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2016 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.72e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1908 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.25e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1833 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.14e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1926 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.36e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2007 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.58e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2022 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.91e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1997 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.76e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1992 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.76e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2032 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.68e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2058 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000105 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2070 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000107 sec ]
 [ GrB_Vector_nvals 5.96e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2132 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000108 sec ]
 [ GrB_Vector_nvals 6.05e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2057 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000106 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1954 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.53e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1941 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.65e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1945 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.3e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2006 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.77e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2156 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000109 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2141 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000108 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2138 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000108 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2179 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000112 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000111 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2229 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000113 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2251 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000114 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2393 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000113 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2523 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000118 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.34e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2576 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00012 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2620 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00012 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2567 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000117 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.29e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2560 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000117 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.42e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2543 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000117 sec ]
 [ GrB_Vector_nvals 3.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.31e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2508 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000116 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2438 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000114 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2327 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000114 sec ]
 [ GrB_Vector_nvals 5.49e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2305 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00011 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2305 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00011 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2336 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00011 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2349 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000111 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2384 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00011 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2351 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000111 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2271 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000109 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2130 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000107 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2061 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000105 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2002 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.26e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1985 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.43e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1945 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.12e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1882 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.04e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1849 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.02e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1858 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.91e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1841 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.12e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1822 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.69e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1787 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.83e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1717 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.55e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1731 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.53e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1728 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.27e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.74e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1782 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.79e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1714 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.63e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1615 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.61e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1647 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.54e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1634 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.52e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1621 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.44e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1667 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.54e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1725 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.45e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1811 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.82e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1836 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.96e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.17e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1944 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.42e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2061 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000107 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2063 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000104 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2069 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000104 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2127 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000107 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2096 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000106 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2082 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000109 sec ]
 [ GrB_Vector_nvals 8.01e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000105 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2074 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000106 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2115 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000108 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000108 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2218 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000109 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.24e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2232 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000111 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2187 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000109 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2051 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000106 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1950 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.29e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1961 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.66e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1975 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.39e-05 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1895 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.42e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1842 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.93e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1871 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.06e-05 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1882 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.96e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1860 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.93e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1966 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.62e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1991 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.47e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1936 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.32e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1898 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.27e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1851 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.97e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1866 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.74e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1855 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.99e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1857 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.98e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1827 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.17e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1806 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.2e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1815 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.86e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1795 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.63e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1679 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.49e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1723 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.62e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1673 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.59e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1602 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.74e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1668 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.35e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1746 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.49e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1727 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.28e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1757 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.79e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1699 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.84e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1713 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.67e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1706 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.72e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1708 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.64e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1753 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.67e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1755 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.66e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1726 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.49e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1687 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.33e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1624 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.36e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1573 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.36e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1558 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.19e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1544 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.96e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1568 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.98e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.91e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1522 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.81e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.06e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1566 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.99e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1589 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.06e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1652 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.28e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1642 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.12e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1604 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.93e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1707 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.29e-05 sec ]
 [ GrB_Vector_nvals 6.15e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1713 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.44e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1696 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.36e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1611 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.29e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1622 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.34e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1674 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.45e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1627 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.18e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1614 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.38e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1618 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.4e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1593 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.43e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1611 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.32e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1538 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.88e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1539 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.86e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1529 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.06e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1561 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.07e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1573 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.09e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.1e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1594 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.46e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1634 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.4e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1618 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.42e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1681 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.67e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1808 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.88e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1826 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.68e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1817 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.91e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1935 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.37e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1898 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.35e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1887 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.04e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1813 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.72e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1681 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.43e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1572 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.35e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1595 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.5e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1612 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.31e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.12e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1614 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.12e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1624 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.28e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1603 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.34e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1685 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.61e-05 sec ]
 [ GrB_Vector_nvals 5.68e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1795 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.95e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1879 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.6e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1982 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.51e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2058 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000108 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.27e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2086 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000106 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.3e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2088 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000108 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.26e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2167 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.000107 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.28e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2131 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 0.00011 sec ]
 [ GrB_Vector_nvals 7.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1993 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.56e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.25e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1995 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.4e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.41e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1853 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.91e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1760 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.86e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1743 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.82e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.63e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1857 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.09e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1953 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.15e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2000 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.6e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1944 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.24e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1908 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.15e-05 sec ]
 [ GrB_Vector_nvals 5.77e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1890 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.97e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.19e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2013 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.51e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.21e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2000 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.38e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2021 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.49e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.23e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1983 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.33e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1929 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.12e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.22e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1846 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 9.15e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1731 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.45e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.18e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1684 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.39e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.13e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1632 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.23e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.17e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1646 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.34e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.15e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1637 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.62e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1634 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.02e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.16e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1613 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.26e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1580 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 8.07e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.11e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1532 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.97e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.14e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1500 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.87e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1367 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.44e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1296 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.18e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1304 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.47e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.08e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1313 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.58e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.07e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1248 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.25e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1197 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.95e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1178 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.06e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1201 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.02e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1226 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.82e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.18e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1271 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.95e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1340 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.44e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1282 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 7.17e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.09e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1225 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.82e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1169 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.47e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1120 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.49e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.89e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1105 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.45e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1160 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.4e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1082 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.33e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.9e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1060 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.15e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.89e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1080 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.36e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.87e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1083 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.49e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.2e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1062 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.29e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.89e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 1004 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.76e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.53e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 975 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.84e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.51e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 959 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.61e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.41e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 928 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.47e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.04e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 929 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.44e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.15e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 879 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.11e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.27e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 794 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.25e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.08e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 781 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.9e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.31e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 784 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.2e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.17e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 797 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.3e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.95e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 768 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.21e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.02e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.18e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.42e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 749 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.2e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.07e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 724 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.34e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.12e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 725 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.1e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.33e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 712 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.12e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.92e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 733 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.14e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.39e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 840 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.36e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.42e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 845 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.36e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.58e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 841 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.49e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.46e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 861 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.51e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.48e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 881 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.79e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.85e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 897 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.55e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.25e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 895 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.7e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.14e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 895 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.59e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.58e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 916 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 6.08e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.98e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 937 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.57e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.5e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 920 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.55e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.45e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 907 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.67e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.76e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 910 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.65e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.52e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 903 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.54e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.28e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 895 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.42e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.3e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 872 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.44e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.16e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 851 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.3e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.16e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 861 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.47e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.08e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 860 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.36e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.38e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 852 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.39e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.16e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 853 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.33e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.06e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 805 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.16e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.37e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 757 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.19e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.95e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 742 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.83e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 718 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.02e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.05e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 706 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.82e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.06e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 695 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.09e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.78e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 666 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.64e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.03e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 692 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.07e-05 sec ]
 [ GrB_Vector_nvals 3.91e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.47e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 718 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.04e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.7e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 668 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.93e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.05e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 633 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.6e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.75e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 668 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.04e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.69e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 692 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.06e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.03e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 676 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.67e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.64e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 662 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.95e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.72e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 640 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.83e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.51e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 637 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.02e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 701 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.06e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.74e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 705 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.03e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.97e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 745 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.2e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.96e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 772 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.27e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.98e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 747 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.15e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.84e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 715 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.97e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.83e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 681 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.91e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 700 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.97e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.79e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 713 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.97e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.99e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 673 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.67e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.06e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 672 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.65e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.73e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 657 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.05e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.39e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 603 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.67e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.48e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 576 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.46e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.57e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 572 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.6e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.21e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 530 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.34e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.41e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 559 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.43e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.16e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 556 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.8e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.26e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 576 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.47e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.49e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 600 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.83e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.39e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 627 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.61e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.49e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 668 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.01e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.72e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 650 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.61e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.74e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 658 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.72e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.51e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 667 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.58e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.65e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 585 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.43e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.47e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 533 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.48e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.45e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 519 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.56e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.37e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 535 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.45e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.52e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 532 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.25e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.45e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 515 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.31e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.54e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 524 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.2e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.34e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 534 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.28e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.29e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 555 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.61e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.31e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 533 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.43e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.25e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.6e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.43e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 562 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.46e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.37e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 580 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.7e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.4e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 570 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.36e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.43e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 551 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.7e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.41e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 550 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.28e-05 sec ]
 [ GrB_Vector_nvals 3.91e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.31e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 486 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.92e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.09e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 421 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.26e-05 sec ]
 [ GrB_Vector_nvals 3.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.93e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 425 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.26e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.1e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 458 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.03e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 468 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.07e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.86e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 470 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.13e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 474 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.96e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.08e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 504 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.11e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.34e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 510 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.49e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.35e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 484 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.1e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.33e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 476 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.03e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.4e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 477 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.18e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.23e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 498 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.97e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.52e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 472 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.02e-05 sec ]
 [ GrB_Vector_nvals 3.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.22e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 447 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.24e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.31e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 465 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.86e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.22e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 451 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.97e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.17e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 452 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.8e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.31e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 488 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.97e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.35e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 520 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.42e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.46e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 521 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.5e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.47e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 542 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.53e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.48e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 544 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.59e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.61e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 539 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.61e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.45e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 527 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.42e-05 sec ]
 [ GrB_Vector_nvals 3.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.41e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 526 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.48e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.42e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 556 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.69e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.5e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 578 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.81e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.3e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 544 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.36e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 562 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.5e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.65e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 614 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.63e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.76e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 656 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.61e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.55e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 680 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.72e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.89e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 705 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.97e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.79e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 711 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.13e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.9e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 721 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.97e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.32e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 716 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.95e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.92e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 802 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.13e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.41e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 868 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.17e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.49e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 877 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.43e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.7e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 837 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.36e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.33e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 758 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 5.02e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.05e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 688 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.95e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.84e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 646 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.9e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.68e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 625 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.75e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.92e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 596 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.73e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.6e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 592 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.55e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.75e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 589 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.64e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.6e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 562 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.85e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.77e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 529 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.66e-05 sec ]
 [ GrB_Vector_nvals 3.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.64e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 520 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.62e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.68e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 514 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.54e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.6e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 500 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.33e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.45e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 520 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.63e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.62e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 507 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.23e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.53e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 518 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.58e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.58e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 495 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.41e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.58e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.42e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.51e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 496 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.05e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.01e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 496 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.26e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.38e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 512 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.55e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.94e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 516 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.34e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.77e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 471 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.22e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.28e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.95e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.37e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 465 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.98e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.63e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 446 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.03e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.34e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 459 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.98e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.23e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 486 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.84e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.01e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 527 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.33e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.61e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 508 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.12e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.16e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 498 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.93e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 488 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.94e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.48e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 492 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.85e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.26e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 515 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.23e-05 sec ]
 [ GrB_Vector_nvals 3.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.29e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 508 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.84e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.49e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 434 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.91e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.1e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 410 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.79e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 388 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.8e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.96e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 398 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.69e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.37e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 412 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.73e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.84e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 420 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.93e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.25e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 448 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.99e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.96e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 478 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.88e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.27e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 462 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.89e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.14e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 424 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.78e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.98e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 410 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.75e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.34e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 404 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.78e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 397 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.76e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.11e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 397 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.95e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.9e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 399 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.15e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.33e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 402 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.1e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 403 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.76e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.44e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 391 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.78e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.46e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 415 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.78e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.57e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 438 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.86e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.98e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 445 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.84e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.5e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 431 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.78e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.14e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 428 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.93e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.59e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 444 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.84e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.32e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 466 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.09e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.34e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 477 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.9e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.56e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 490 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.11e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.51e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 486 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.03e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.31e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 506 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.15e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.41e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 535 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.69e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.58e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 591 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.46e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.56e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 622 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.78e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.55e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 579 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.58e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.83e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 552 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.41e-05 sec ]
 [ GrB_Vector_nvals 3.73e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.8e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 524 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.28e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.76e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 491 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.99e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.15e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 446 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.22e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.25e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 465 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.88e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.43e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 443 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.76e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.27e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 435 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.98e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.82e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 416 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.68e-05 sec ]
 [ GrB_Vector_nvals 5.22e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.47e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 382 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.79e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.31e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 359 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.64e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.6e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 376 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.02e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.3e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 409 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.78e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.88e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 401 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.72e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.92e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 371 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.72e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.85e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 359 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.1e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.34e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 381 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.7e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.04e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 431 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.14e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.38e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 409 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.74e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.96e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 319 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.7e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.73e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 314 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.86e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.02e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 315 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.86e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.59e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 301 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.48e-05 sec ]
 [ GrB_Vector_nvals 4.19e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.76e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 281 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.79e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.03e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 288 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.75e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.66e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 288 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.42e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.69e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 277 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.56e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.18e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 275 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.3e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.71e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 251 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.73e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.98e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.39e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.54e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 248 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.19e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 262 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.24e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.63e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 264 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.52e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.6e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 281 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.5e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.38e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 318 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.87e-05 sec ]
 [ GrB_Vector_nvals 4.28e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.85e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 354 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.92e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.02e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 333 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.61e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.1e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 302 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.4e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.58e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 289 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.47e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.69e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 286 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.76e-05 sec ]
 [ GrB_Vector_nvals 5.12e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.78e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 290 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.26e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.6e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 315 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.53e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.64e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 289 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.27e-05 sec ]
 [ GrB_Vector_nvals 3.17e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.78e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 293 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.62e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.06e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 285 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.39e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.58e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 323 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.41e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.63e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 346 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.64e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.74e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 356 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.19e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.32e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 335 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.85e-05 sec ]
 [ GrB_Vector_nvals 3.91e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.91e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 333 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.53e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.91e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 363 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.49e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.98e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 377 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.54e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.97e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 383 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.79e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.96e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 381 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.05e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.94e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 358 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.72e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.12e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 361 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.67e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.88e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 346 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.45e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.85e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 348 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.66e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.23e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 344 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.58e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.74e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 308 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.54e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.65e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 316 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.29e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.06e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 312 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.6e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.66e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 266 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.18e-05 sec ]
 [ GrB_Vector_nvals 5.03e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.08e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 270 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.24e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.3e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 254 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.42e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.04e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 249 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.4e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.8e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 233 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.19e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.62e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 240 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.43e-05 sec ]
 [ GrB_Vector_nvals 3.91e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.6e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 256 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.54e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.85e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 276 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.49e-05 sec ]
 [ GrB_Vector_nvals 3.82e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.88e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 274 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.43e-05 sec ]
 [ GrB_Vector_nvals 4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.75e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 295 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.4e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.44e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 283 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.27e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.4e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 246 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.58e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 221 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.29e-05 sec ]
 [ GrB_Vector_nvals 4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.03e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 202 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.11e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.79e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 210 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.2e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.7e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.45e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.53e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 207 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.28e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.31e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 213 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.17e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.51e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 226 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.23e-05 sec ]
 [ GrB_Vector_nvals 4e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 6.93e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.3e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.51e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 248 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.24e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.58e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 258 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.64e-05 sec ]
 [ GrB_Vector_nvals 4.38e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.22e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 238 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.06e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.47e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 228 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.45e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.77e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 226 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.07e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.21e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 223 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.04e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.59e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 233 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.17e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.87e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 212 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.01e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.51e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 204 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 4.23e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.35e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 204 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.92e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.49e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 215 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.2e-05 sec ]
 [ GrB_Vector_nvals 3.35e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.41e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 208 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.88e-05 sec ]
 [ GrB_Vector_nvals 5.31e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.47e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 191 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.01e-05 sec ]
 [ GrB_Vector_nvals 4.56e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 1.01e-05 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 194 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.18e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.31e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 186 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.86e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.89e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 180 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.92e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.25e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 170 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.11e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.04e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 170 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.86e-05 sec ]
 [ GrB_Vector_nvals 4.47e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.23e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 168 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.81e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.88e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 154 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 3.05e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.9e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 134 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.87e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.33e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 112 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.77e-05 sec ]
 [ GrB_Vector_nvals 4.75e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.51e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 89 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.94e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.55e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 80 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.64e-05 sec ]
 [ GrB_Vector_nvals 3.45e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.26e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 82 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.73e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.18e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 78 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.66e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.25e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 76 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.7e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.2e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 66 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.57e-05 sec ]
 [ GrB_Vector_nvals 4.94e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.24e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 45 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.69e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.19e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 40 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.98e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.42e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 46 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.58e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.65e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 48 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.47e-05 sec ]
 [ GrB_Vector_nvals 4.1e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.97e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 36 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.56e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.85e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 30 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.63e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.68e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 24 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.61e-05 sec ]
 [ GrB_Vector_nvals 4.66e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.57e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.77e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.83e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 9 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.71e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.47e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 11 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.75e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.53e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 10 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.67e-05 sec ]
 [ GrB_Vector_nvals 3.63e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.21e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 8 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.6e-05 sec ]
 [ GrB_Vector_nvals 3.26e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 8.14e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 7 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.39e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 7.6e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 6 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.56e-05 sec ]
 [ GrB_Vector_nvals 3.54e-08 sec ]
 [ GrB_assign (subassign: C full) Method 06d: (C full)<Z> = Z 9.3e-06 sec ]
 [ GrB_vxm (M full) C<!M>=A*B, saxpy axbflops 2 Mwork 0 (use dense mask in place) nthreads 1 ntasks 1 coarse: (gus: 0 hash: 0) fine: (gus: 0 hash: 1) 2.35e-05 sec ]
 [ GrB_Vector_nvals 4.84e-08 sec ]
trial:  0 threads: 40 source:   4795720 time:     3.1262 sec
:40:pushpull (onlytree):        3.126 (sec), rate:  18.46
phase  0:      25.4896 msec
phase  1:    2728.0311 msec
phase  2:       6.6265 msec
phase  3:       4.9407 msec
phase  4:     274.0192 msec
phase  5:     163.9104 msec
phase  6:       9.6890 msec
phase  7:    2240.2274 msec
phase  8:       3.4087 msec
phase  9:    1686.8996 msec
phase 10:     167.5917 msec
phase 11:       4.5059 msec
phase 12:     378.8698 msec

[0;36mhypersparse $[0m 
[0;36mhypersparse $[0m 
[0;36mhypersparse $[0m exit
exit

Script done on Tue 28 Jul 2020 08:43:20 PM CDT
