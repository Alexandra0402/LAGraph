SuiteSparse:GraphBLAS v4.0.1 [Nov 25, 2020 (DRAFT)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 6.3e-06 sec ]
 [ GxB_set 0.0202 sec ]
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 5.45e-05 sec ]
read time: 32.0295 sec
 [ GrB_apply (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_true_bool)) 2.37 sec ]
 [ GrB_Matrix_nvals 9.48e-07 sec ]
 [ GrB_Matrix_nvals 1.15e-07 sec ]
A is symmetric
transpose time: 3.78117e-07

========== input graph: nodes: 134217726 edges: 64

Trial 1 : sources: [ 2338012 31997659 23590940 43400604 ]

 [ GxB_set (hyper to sparse) 8.73e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0368 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic build with typecast) (hyper to sparse) (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 2587 mwork 0 (use dense mask in-place) (nthreads 1 coarse hash: 1) 0.000383 sec ]

-------------------- bfs phase:
 [ GrB_Matrix_nvals 8.85e-07 sec ]
 [ GxB_set (hyper to sparse) 8.85e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 3.84e-05 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.000139 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 3.72225e+07 mwork 0 (use dense mask in-place) (nthreads 40 coarse hash: 2 fine: 158) 0.192 sec ]
 [ GrB_Matrix_nvals 4.73e-07 sec ]
 [ GxB_set (hyper to sparse) 8.28e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 0.016 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.0171 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 6.41067e+09 mwork 0 (use dense mask) (nthreads 40 fine: 159) 12.1 sec ]
 [ GrB_Matrix_nvals 4.68e-07 sec ]
 [ GxB_set (hyper to sparse) 8.98e-06 sec ]
 [ GrB_apply (shallow-op) 0.0585 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.0984 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 1.03031e+10 mwork 0 (use dense mask) (nthreads 40 fine: 160) 9.11 sec ]
 [ GrB_Matrix_nvals 4.56e-07 sec ]
 [ GxB_set (hyper to sparse) 9.4e-06 sec ]
 [ GrB_apply (shallow-op) 0.0228 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.0649 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 1.41549e+08 mwork 0 (use dense mask) (nthreads 40 fine: 135) 0.768 sec ]
 [ GrB_Matrix_nvals 4.64e-07 sec ]
 [ GxB_set (hyper to sparse) 8.82e-06 sec ]
 [ GrB_apply (shallow-op) 0.000256 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.00323 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 380572 mwork 0 (use dense mask in-place) (nthreads 5 coarse hash: 3 fine hash: 3) 0.0321 sec ]
 [ GrB_Matrix_nvals 4.71e-07 sec ]
 [ GxB_set (hyper to sparse) 7.7e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 9.67e-05 sec ]
 [ GrB_assign Method 23: (C full) += Z 4.69e-05 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 1029 mwork 0 (use dense mask in-place) (nthreads 1 coarse hash: 1) 0.000205 sec ]
 [ GrB_Matrix_nvals 2.22e-07 sec ]
 [ GxB_set (hyper to sparse) 6.48e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 1.7e-05 sec ]
 [ GrB_assign Method 23: (C full) += Z 9.41e-06 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 7 mwork 0 (use dense mask in-place) (nthreads 1 coarse hash: 1) 6.31e-05 sec ]
 [ GrB_Matrix_nvals 2.12e-07 sec ]

-------------------- bc phase:
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0785 sec ]
 [ GxB_set (hyper to sparse) 1.24e-05 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.000438 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 7 mwork 1007 (discard mask) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 0.000232 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 7 pending) (hyper to sparse) (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.000535 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.00156 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 1029 mwork 377880 (discard mask) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 0.00155 sec ]
 [ GrB_eWiseMult (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.000756 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.00346 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 380572 mwork 6.67667e+07 (discard mask) (nthreads 5 coarse hash: 3 fine hash: 3) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 0.162 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 376734 pending) (hyper to sparse) (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.00735 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.106 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 1.41549e+08 mwork 1.74511e+08 (use mask) (nthreads 40 fine: 162) 0.951 sec ]
 [ GrB_eWiseMult (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.0988 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.195 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 1.03031e+10 mwork 1.04727e+07 (use mask) (nthreads 40 fine: 163) 12.6 sec ]
 [ GrB_eWiseMult (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.0341 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.0256 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 3.81898e+09 mwork 2587 (use mask) (nthreads 40 coarse: 3 fine: 153) 5.58 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.00111 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0185 sec ]
 [ GrB_reduce (C full) (A full) (B full) (C_in bitmap, but accum present) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (C+=Z via assign) Method 23: (C full) += Z (Z packed) 0.256 sec ]
Batch v4 time 40:      42.7379 (sec)
phase  0:       0.1108 msec
phase  1:   41602.7827 msec
phase  3:       0.0535 msec
phase  4:     316.0728 msec
phase  5:    1334.4355 msec
phase  6:    1668.8823 msec
phase  7:   38054.0732 msec
phase  8:       0.0302 msec
phase  9:   36459.8971 msec
phase 10:      87.2277 msec
phase 11:       0.0487 msec
phase 12:    1506.8463 msec

ntrials: 1


Ave (Batch4)  40:     42.738 sec, rate      0.000
./build/gap_bc_test: all tests passed
