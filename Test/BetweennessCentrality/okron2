SuiteSparse:GraphBLAS v4.0.1 [Nov 25, 2020 (DRAFT)]
threads to test:  40
matrix: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
[.grb]
Reading binary file: /home/faculty/davis/GAP/GAP-kron/GAP-kron.grb
 [ GxB_Matrix_import_CSR 6.56e-06 sec ]
 [ GxB_set 0.0201 sec ]
sources: /home/faculty/davis/GAP/GAP-kron/GAP-kron_sources.mtx
 [ *_setElement (wait: 0 zombies, 64 pending) 6.21e-05 sec ]
read time: 31.9688 sec
 [ GrB_apply (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_true_bool)) 2.36 sec ]
 [ GrB_Matrix_nvals 1.13e-06 sec ]
 [ GrB_Matrix_nvals 2.83e-07 sec ]
A is symmetric
transpose time: 3.72529e-07

========== input graph: nodes: 134217726 edges: 64

Trial 1 : sources: [ 2338012 31997659 23590940 43400604 ]

 [ GxB_set (hyper to sparse) 9.05e-06 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0368 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic build with typecast) (hyper to sparse) (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 2587 mwork 0 (use dense mask in-place) (nthreads 1 coarse hash: 1) 0.000399 sec ]

-------------------- bfs phase:
 [ GrB_Matrix_nvals 6.24e-07 sec ]
 [ GxB_set (hyper to sparse) 7.77e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 3.79e-05 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.000141 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 3.72225e+07 mwork 0 (use dense mask in-place) (nthreads 40 coarse hash: 2 fine: 158) 0.198 sec ]
 [ GrB_Matrix_nvals 4.34e-07 sec ]
 [ GxB_set (hyper to sparse) 9.39e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 0.0234 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.017 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 6.41067e+09 mwork 0 (use dense mask) (nthreads 40 fine: 159) 12.2 sec ]
 [ GrB_Matrix_nvals 4.4e-07 sec ]
 [ GxB_set (hyper to sparse) 8.76e-06 sec ]
 [ GrB_apply (shallow-op) 0.0585 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.099 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 1.03031e+10 mwork 0 (use dense mask) (nthreads 40 fine: 160) 9.06 sec ]
 [ GrB_Matrix_nvals 4.1e-07 sec ]
 [ GxB_set (hyper to sparse) 8.81e-06 sec ]
 [ GrB_apply (shallow-op) 0.0229 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.0648 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 1.41549e+08 mwork 0 (use dense mask) (nthreads 40 fine: 135) 0.794 sec ]
 [ GrB_Matrix_nvals 4.19e-07 sec ]
 [ GxB_set (hyper to sparse) 8.19e-06 sec ]
 [ GrB_apply (shallow-op) 0.000268 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.00225 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 380572 mwork 0 (use dense mask in-place) (nthreads 5 coarse hash: 3 fine hash: 3) 0.0337 sec ]
 [ GrB_Matrix_nvals 4.6e-07 sec ]
 [ GxB_set (hyper to sparse) 6.9e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 9.17e-05 sec ]
 [ GrB_assign Method 23: (C full) += Z 5.08e-05 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 1029 mwork 0 (use dense mask in-place) (nthreads 1 coarse hash: 1) 0.000195 sec ]
 [ GrB_Matrix_nvals 2.22e-07 sec ]
 [ GxB_set (hyper to sparse) 5.67e-06 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 1.53e-05 sec ]
 [ GrB_assign Method 23: (C full) += Z 8.48e-06 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 7 mwork 0 (use dense mask in-place) (nthreads 1 coarse hash: 1) 4.94e-05 sec ]
 [ GrB_Matrix_nvals 1.77e-07 sec ]

-------------------- bc phase:
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0777 sec ]
 [ GxB_set (hyper to sparse) 9.89e-06 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.000438 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 7 mwork 1007 (discard mask) (nthreads 1 coarse hash: 1) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 0.000226 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 7 pending) (hyper to sparse) (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.000557 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.000423 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 1029 mwork 377880 (discard mask) (nthreads 1 coarse hash: 1) (mask later) (wait: 0 zombies, 0 pending, jumbled) masker:(S:H{S}=S) 0.00156 sec ]
 [ GrB_eWiseMult (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.000756 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.00247 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 380572 mwork 6.67667e+07 (discard mask) (nthreads 5 coarse hash: 3 fine hash: 3) (mask later) (C<M>=Z via assign) (hyper to sparse) (C(:,:)<any mask>: C_replace early) (C empty) Method 06s: C(:,:)<M> = Z ; using S (wait: 0 zombies, 0 pending, jumbled) 0.167 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 376734 pending) (hyper to sparse) (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.00676 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.108 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 1.41549e+08 mwork 1.74511e+08 (use mask) (nthreads 40 fine: 162) 0.952 sec ]
 [ GrB_eWiseMult (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.0989 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.195 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 1.03031e+10 mwork 1.04727e+07 (use mask) (nthreads 40 fine: 163) 12.4 sec ]
 [ GrB_eWiseMult (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.0328 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.0256 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 3.81898e+09 mwork 2587 (use mask) (nthreads 40 coarse: 3 fine: 153) 5.54 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.0009 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.0185 sec ]
 [ GrB_reduce (C full) (A full) (B full) (C_in bitmap, but accum present) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (C+=Z via assign) Method 23: (C full) += Z (Z packed) 0.256 sec ]
Batch v4 time 40:      42.6270 (sec)
phase  0:       0.1081 msec
phase  1:   41477.6592 msec
phase  3:       0.0424 msec
phase  4:     317.1829 msec
phase  5:    1338.7149 msec
phase  6:    1649.6119 msec
phase  7:   37942.8768 msec
phase  8:       0.0332 msec
phase  9:   36384.2562 msec
phase 10:      85.3542 msec
phase 11:       0.0470 msec
phase 12:    1473.1619 msec

ntrials: 1


Ave (Batch4)  40:     42.627 sec, rate      0.000
./build/gap_bc_test: all tests passed
