SuiteSparse:GraphBLAS v4.0.1 [Nov 25, 2020 (DRAFT)]
threads to test:  40
matrix: /home/faculty/davis/com-Orkut.grb
[.grb]
Reading binary file: /home/faculty/davis/com-Orkut.grb
 [ GxB_Matrix_import_CSR 1.68e-05 sec ]
 [ GxB_set 0.0111 sec ]
read time: 4.21059 sec
 [ GrB_apply (shallow-op) (generic apply: ((void (*)(void *, const void *)) LAGraph_true_bool)) 0.332 sec ]
 [ GrB_Matrix_nvals 1.15e-06 sec ]
 [ *_setElement (wait: 0 zombies, 32 pending) 3.72e-05 sec ]
 [ GrB_Matrix_nvals 1.7e-07 sec ]
 [ GrB_transpose (transpose) 2.92 sec ]
 [ GrB_Matrix_nvals 6.24e-07 sec ]
 [ GrB_Matrix_nvals 8.94e-08 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*S) 0.334 sec ]
 [ GrB_Matrix_nvals 5.01e-07 sec ]
 [ GrB_reduce 0.0217 sec ]
A is symmetric
transpose time: 3.27989

========== input graph: nodes: 3072441 edges: 32

Trial 1 : sources: [ 766516 2009611 1067550 214837 ]

 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.00996 sec ]
 [ GrB_mxm (wait: 0 zombies, 4 pending) (generic build with typecast) (hyper to sparse) (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 1486 mwork 0 (use dense mask in-place) (nthreads 1 coarse hash: 1) 0.000231 sec ]

-------------------- bfs phase:
 [ GrB_Matrix_nvals 9.05e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 5.73e-05 sec ]
 [ GrB_assign Method 23: (C full) += Z 6.7e-05 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 816312 mwork 0 (use dense mask in-place) (nthreads 12 coarse hash: 2 fine hash: 12) 0.0421 sec ]
 [ GrB_Matrix_nvals 4.28e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 0.0164 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.000522 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 4.20616e+07 mwork 0 (use dense mask) (nthreads 40 fine: 154) @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(sparse to bitmap) 0.163 sec ]
 [ GrB_Matrix_nvals 6.24e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 0.0361 sec ]
 [ GrB_assign Method 23: (C full) += Z (Z packed) 0.108 sec ]
 [ GrB_mxm (C bitmap) (A bitmap) (M full) (C_in bitmap) (can do in place: 1) (alias: not in place)C<!M>=A*B, saxpy (compute C bitmap) 0.414 sec ]
 [ GrB_Matrix_nvals 5.42e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 0.0419 sec ]
 [ GrB_assign Method 23: (C full) += Z (Z packed) 0.0227 sec ]
 [ GrB_mxm (C bitmap) (A bitmap) (M full) (C_in bitmap) (can do in place: 1) (alias: not in place)C<!M>=A*B, saxpy (compute C bitmap) 0.565 sec ]
 [ GrB_Matrix_nvals 5.64e-07 sec ]
 [ GrB_apply (A bitmap) (shallow-op) 0.04 sec ]
 [ GrB_assign Method 23: (C full) += Z (Z packed) 0.0614 sec ]
 [ GrB_mxm (C bitmap) (A bitmap) (M full) (C_in bitmap) (can do in place: 1) (alias: not in place)C<!M>=A*B, saxpy (compute C bitmap) (bitmap to sparse) 0.131 sec ]
 [ GrB_Matrix_nvals 4.79e-07 sec ]
 [ GrB_apply (shallow-op) 4.26e-05 sec ]
 [ GrB_assign Method 23: (C full) += Z 0.000178 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 31831 mwork 0 (use dense mask in-place) (nthreads 1 coarse hash: 1) 0.00253 sec ]
 [ GrB_Matrix_nvals 5.05e-07 sec ]
 [ GrB_apply (wait: 0 zombies, 0 pending, jumbled) (shallow-op) 2.93e-05 sec ]
 [ GrB_assign Method 23: (C full) += Z 1.84e-05 sec ]
 [ GrB_mxm (M full) (can do in place: 0) C<!M>=A*B, saxpy (compute C sparse) axbwork 208 mwork 0 (use dense mask in-place) (nthreads 1 coarse hash: 1) (sparse to hyper) 8.62e-05 sec ]
 [ GrB_Matrix_nvals 1.49e-07 sec ]

-------------------- bc phase:
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.00772 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.0324 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 208 mwork 10898 (use mask) (nthreads 1 coarse hash: 1) 0.000453 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.0343 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.0258 sec ]
 [ GrB_mxm (M bitmap) (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 31831 mwork 0 (use dense mask in-place) (nthreads 1 coarse hash: 1) 0.00435 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.028 sec ]
 [ GrB_eWiseMult (M bitmap) (A full) (B full) add:(B<B>=F+F) 0.0142 sec ]
 [ GrB_mxm (C bitmap) (A bitmap) (M bitmap) (C_in bitmap) (can do in place: 1) (alias: not in place)C<M>=A*B, saxpy (compute C bitmap) 0.135 sec ]
 [ GrB_eWiseMult (C full) (A bitmap) (B full) emult:(B<.>=B.*F) (C+=Z via assign) Method 23: (C full) += Z (Z packed) 0.06 sec ]
 [ GrB_eWiseMult (C bitmap) (M bitmap) (A full) (B full) add:(B<B>=F+F) 0.032 sec ]
 [ GrB_mxm (C bitmap) (A bitmap) (M bitmap) (C_in bitmap) (can do in place: 1) (alias: not in place)C<M>=A*B, saxpy (compute C bitmap) 0.484 sec ]
 [ GrB_eWiseMult (C full) (A bitmap) (B full) emult:(B<.>=B.*F) (C+=Z via assign) Method 23: (C full) += Z (Z packed) 0.0337 sec ]
 [ GrB_eWiseMult (C bitmap) (M bitmap) (A full) (B full) add:(B<B>=F+F) 0.0229 sec ]
 [ GrB_mxm (C bitmap) (A bitmap) (C_in bitmap) (can do in place: 1) (alias: not in place)C<M>=A*B, saxpy (compute C sparse) axbwork 2.45226e+08 mwork 148421 (use mask) (nthreads 40 fine: 162) 1.15 sec ]
 [ GrB_eWiseMult (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.04 sec ]
 [ GrB_eWiseMult (A full) (B full) add:(S<S>=F+F) 0.0682 sec ]
 [ GrB_mxm (can do in place: 0) C<M>=A*B, saxpy (compute C sparse) axbwork 4.2005e+07 mwork 1486 (use mask) (nthreads 40 coarse: 2 fine: 155) 0.134 sec ]
 [ GrB_eWiseMult (wait: 0 zombies, 0 pending, jumbled) (C full) (B full) emult:(S<.>=S.*F) (C+=Z via assign) Method 23: (C full) += Z 0.0318 sec ]
 [ GrB_assign (C empty) Method 21: (C full) = scalar 0.018 sec ]
 [ GrB_reduce (C full) (A full) (B full) (C_in bitmap, but accum present) (can do in place: 1) C=A*B, saxpy (compute C bitmap) (C+=Z via assign) Method 23: (C full) += Z (Z packed) 0.036 sec ]
Batch v4 time 40:       4.0520 (sec)
phase  0:       0.1777 msec
phase  1:    3159.1714 msec
phase  3:       0.0367 msec
phase  4:      40.6275 msec
phase  5:     248.5950 msec
phase  6:      73.7726 msec
phase  7:    1109.2414 msec
phase  8:       0.0238 msec
phase  9:     977.4900 msec
phase 10:      47.7085 msec
phase 11:       0.0286 msec
phase 12:      83.9719 msec

ntrials: 1


Ave (Batch4)  40:      4.052 sec, rate      0.000
./build/gap_bc_test: all tests passed
